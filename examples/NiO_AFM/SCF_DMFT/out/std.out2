


56

name: name2: nt:  
WIENROOT = /home/users1/xorwndekda/WIEN2K/WIEN2K_19.1_node09
WIEN_DMFT_ROOT = /home/users1/xorwndekda/WIEN2K/WIEN2K+eDMFT_node09/bin.intel
COMSUITE_BIN = /home/users1/xorwndekda/comsuite/COMSUITE/bin
MKLROOT=/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/mkl
CPLUS_INCLUDE_PATH=/home/users1/xorwndekda/intel/oneapi/clck/2021.1.1/include
MANPATH=/home/users1/xorwndekda/intel/man/common:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/mpi/man:/home/users1/xorwndekda/intel/man/common:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/mpi/man:/home/users1/xorwndekda/intel/documentation_2019/en/debugger/gdb-ia/man/:/home/users1/xorwndekda/intel/oneapi/debugger/10.0.0/documentation/man:/home/users1/xorwndekda/intel/oneapi/itac/2021.1.1/man:/home/users1/xorwndekda/intel/oneapi/mpi/2021.1.1/man:/home/users1/xorwndekda/intel/oneapi/clck/2021.1.1/man::::::/home/users1/xorwndekda/intel/oneapi/compiler/2021.1.1/documentation/en/man/common
XDG_SESSION_ID=3949
HOSTNAME=node01
VT_MPI=impi4
SGE_EXECD_PIDFILE=/var/run/gridengine/execd.pid
SGE_TASK_STEPSIZE=undefined
IPPROOT=/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/ipp
INTEL_LICENSE_FILE=/opt/intel/licenses:/home/users1/xorwndekda/intel/licenses:/home/users1/xorwndekda/intel/oneapi/clck/2021.1.1/licensing:/opt/intel/licenses:/home/users1/xorwndekda/intel/licenses:/Users/Shared/Library/Application Support/Intel/Licenses:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/licenses:/opt/intel/licenses:/home/users1/xorwndekda/intel/licenses:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/licenses:/opt/intel/licenses:/home/users1/xorwndekda/intel/licenses
SHELL=/bin/bash
CLCK_ROOT=/home/users1/xorwndekda/intel/oneapi/clck/2021.1.1
TERM=xterm-256color
NHOSTS=1
SGE_O_WORKDIR=/home/users1/xorwndekda/com/codepaper/examples/reasonable_set2/NiO_AFM/SCF_DMFT
TMPDIR=/tmp/65758.1.all.q
SSH_CLIENT=143.248.16.166 57602 22
SGE_O_HOME=/home/users1/xorwndekda
CONDA_SHLVL=3
BERRYPI_PATH=/home/users1/xorwndekda/WIEN2K/WIEN2K_19.1_node09/SRC_BerryPI/BerryPI
LIBRARY_PATH=/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/mpi/intel64/libfabric/lib:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/ipp/lib/intel64:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/compiler/lib/intel64_lin:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/mkl/lib/intel64_lin:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/tbb/lib/intel64/gcc4.7:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/tbb/lib/intel64/gcc4.7:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/daal/lib/intel64_lin:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/mpi/intel64/libfabric/lib:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/ipp/lib/intel64:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/compiler/lib/intel64_lin:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/mkl/lib/intel64_lin:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/tbb/lib/intel64/gcc4.7:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/tbb/lib/intel64/gcc4.7:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/daal/lib/intel64_lin:/home/users1/xorwndekda/intel/oneapi/compiler/2021.1.1/linux/compiler/lib/intel64_lin:/home/users1/xorwndekda/intel/oneapi/compiler/2021.1.1/linux/lib:/home/users1/xorwndekda/intel/oneapi/dal/2021.1.1/lib/intel64:/home/users1/xorwndekda/intel/oneapi/ccl/2021.1.1/lib/cpu_gpu_dpcpp:/home/users1/xorwndekda/intel/oneapi/dnnl/2021.1.1/cpu_dpcpp_gpu_dpcpp/lib:/home/users1/xorwndekda/intel/oneapi/ippcp/2021.1.1/lib/intel64:/home/users1/xorwndekda/intel/oneapi/mkl/latest/lib/intel64:/home/users1/xorwndekda/intel/oneapi/mpi/2021.1.1//libfabric/lib:/home/users1/xorwndekda/intel/oneapi/mpi/2021.1.1//lib/release:/home/users1/xorwndekda/intel/oneapi/mpi/2021.1.1//lib:/home/users1/xorwndekda/intel/oneapi/ipp/2021.1.1/lib/intel64:/home/users1/xorwndekda/intel/oneapi/vpl/2021.1.1/lib:/home/users1/xorwndekda/intel/oneapi/tbb/2021.1.1/env/../lib/intel64/gcc4.8:/home/users1/xorwndekda/intel/oneapi/clck/2021.1.1/lib/intel64
SGE_ARCH=lx26-amd64
CONDA_PROMPT_MODIFIER=(eDMFT) 
SGE_CELL=default
PDFREADER=okular
COMSUITE_BIN=/home/users1/xorwndekda/comsuite/COMSUITE/bin
RESTARTED=0
SSH_TTY=/dev/pts/16
OCTAVE_EXEC_PATH=/home/users1/xorwndekda/WIEN2K/WIEN2K_19.1_node09:/home/users1/xorwndekda/WIEN2K/WIEN2K_19.1_node09/SRC_structeditor/bin:/home/users1/xorwndekda/WIEN2K/WIEN2K_19.1_node09/SRC_IRelast/script-elastic:/home/users1/xorwndekda/opt/bin:/home/users1/xorwndekda/opt/local/mvapich2.3.3/2.3.3/bin:/home/users1/xorwndekda/bin:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/bin/intel64:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/mpi/intel64/libfabric/bin:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/mpi/intel64/bin:/home/users1/xorwndekda/intel/debugger_2019/gdb/intel64/bin:/home/users1/xorwndekda/bin:/home/users1/xorwndekda/.local/bin:/home/users1/xorwndekda/opt/bin:/home/users1/xorwndekda/WIEN2K/WIEN2K_17.1:/home/users1/xorwndekda/WIEN2K/WIEN2K_17.1/SRC_structeditor/bin:/home/users1/xorwndekda/WIEN2K/WIEN2K_17.1/SRC_IRelast/script-elastic:/home/users1/xorwndekda/intel/oneapi/compiler/2021.1.1/linux/bin/intel64:/home/users1/xorwndekda/intel/oneapi/compiler/2021.1.1/linux/bin:/home/users1/xorwndekda/intel/oneapi/compiler/2021.1.1/linux/ioc/bin:/home/users1/xorwndekda/intel/oneapi/mkl/latest/bin/intel64:/home/users1/xorwndekda/intel/oneapi/debugger/10.0.0/gdb/intel64/bin:/home/users1/xorwndekda/intel/oneapi/advisor/2021.1.1/bin64:/home/users1/xorwndekda/intel/oneapi/inspector/2021.1.1/bin64:/home/users1/xorwndekda/intel/oneapi/itac/2021.1.1/bin:/home/users1/xorwndekda/intel/oneapi/itac/2021.1.1/bin:/home/users1/xorwndekda/intel/oneapi/vtune/2021.1.1/bin64:/home/users1/xorwndekda/intel/oneapi/mpi/2021.1.1/libfabric/bin:/home/users1/xorwndekda/intel/oneapi/mpi/2021.1.1/bin:/home/users1/xorwndekda/miniconda3/bin:/home/users1/xorwndekda/intel/oneapi/intelpython/latest/condabin:/home/users1/xorwndekda/intel/oneapi/vpl/2021.1.1/bin:/home/users1/xorwndekda/intel/oneapi/dpcpp-ct/2021.1.1/bin:/home/users1/xorwndekda/intel/oneapi/dev-utilities/2021.1.1/bin:/home/users1/xorwndekda/intel/oneapi/clck/2021.1.1/bin/intel64:/home/users1/xorwndekda/comsuite/comsuite_20210226/comsuite-master/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:.:/home/users1/xorwndekda/WIEN2K/WIEN2K_17.1:.:/home/users1/xorwndekda/julia/julia-1.6.2/bin:.::
ARC=lx26-amd64
OCL_ICD_FILENAMES=/home/users1/xorwndekda/intel/oneapi/compiler/2021.1.1/linux/lib/x64/libintelocl.so
CCL_CONFIGURATION=cpu_gpu_dpcpp
USER=xorwndekda
LS_COLORS=rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.jpg=01;35:*.jpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:
IPPCRYPTOROOT=/home/users1/xorwndekda/intel/oneapi/ippcp/2021.1.1
LD_LIBRARY_PATH=/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/compiler/lib/intel64_lin:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/mpi/intel64/libfabric/lib:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/mpi/intel64/lib/release:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/mpi/intel64/lib:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/ipp/lib/intel64:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/compiler/lib/intel64_lin:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/mkl/lib/intel64_lin:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/tbb/lib/intel64/gcc4.7:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/tbb/lib/intel64/gcc4.7:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/daal/lib/intel64_lin:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/compiler/lib/intel64_lin:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/mpi/intel64/libfabric/lib:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/mpi/intel64/lib/release:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/mpi/intel64/lib:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/ipp/lib/intel64:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/compiler/lib/intel64_lin:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/mkl/lib/intel64_lin:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/tbb/lib/intel64/gcc4.7:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/tbb/lib/intel64/gcc4.7:/home/users1/xorwndekda/intel/debugger_2019/libipt/intel64/lib:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/daal/lib/intel64_lin:/home/users1/xorwndekda/intel/oneapi/compiler/2021.1.1/linux/lib:/home/users1/xorwndekda/intel/oneapi/compiler/2021.1.1/linux/lib/x64:/home/users1/xorwndekda/intel/oneapi/compiler/2021.1.1/linux/lib/emu:/home/users1/xorwndekda/intel/oneapi/compiler/2021.1.1/linux/compiler/lib/intel64_lin:/home/users1/xorwndekda/intel/oneapi/compiler/2021.1.1/linux/compiler/lib:/home/users1/xorwndekda/intel/oneapi/dal/2021.1.1/lib/intel64:/home/users1/xorwndekda/intel/oneapi/ccl/2021.1.1/lib/cpu_gpu_dpcpp:/home/users1/xorwndekda/intel/oneapi/dnnl/2021.1.1/cpu_dpcpp_gpu_dpcpp/lib:/home/users1/xorwndekda/intel/oneapi/ippcp/2021.1.1/lib/intel64:/home/users1/xorwndekda/intel/oneapi/mkl/latest/lib/intel64:/home/users1/xorwndekda/intel/oneapi/debugger/10.0.0/dep/lib:/home/users1/xorwndekda/intel/oneapi/debugger/10.0.0/libipt/intel64/lib:/home/users1/xorwndekda/intel/oneapi/debugger/10.0.0/gdb/intel64/lib:/home/users1/xorwndekda/intel/oneapi/itac/2021.1.1/slib:/home/users1/xorwndekda/intel/oneapi/mpi/2021.1.1//libfabric/lib:/home/users1/xorwndekda/intel/oneapi/mpi/2021.1.1//lib/release:/home/users1/xorwndekda/intel/oneapi/mpi/2021.1.1//lib:/home/users1/xorwndekda/intel/oneapi/ipp/2021.1.1/lib/intel64:/home/users1/xorwndekda/intel/oneapi/vpl/2021.1.1/lib:/home/users1/xorwndekda/intel/oneapi/tbb/2021.1.1/env/../lib/intel64/gcc4.8
DALROOT=/home/users1/xorwndekda/intel/oneapi/dal/2021.1.1
PSTLROOT=/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/pstl
MKL_TARGET_ARCH=intel64
SGE_TASK_LAST=undefined
CONDA_EXE=/home/users1/xorwndekda/miniconda3/bin/conda
QUEUE=all.q
FI_PROVIDER_PATH=/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/mpi/intel64/libfabric/lib/prov
CPATH=/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/ipp/include:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/mkl/include:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/pstl/include:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/tbb/include:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/tbb/include:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/daal/include:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/ipp/include:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/mkl/include:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/pstl/include:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/tbb/include:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/tbb/include:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/daal/include:/home/users1/xorwndekda/intel/oneapi/compiler/2021.1.1/linux/include:/home/users1/xorwndekda/intel/oneapi/dal/2021.1.1/include:/home/users1/xorwndekda/intel/oneapi/ccl/2021.1.1/include/cpu_gpu_dpcpp:/home/users1/xorwndekda/intel/oneapi/dnnl/2021.1.1/cpu_dpcpp_gpu_dpcpp/lib:/home/users1/xorwndekda/intel/oneapi/ippcp/2021.1.1/include:/home/users1/xorwndekda/intel/oneapi/mkl/latest/include:/home/users1/xorwndekda/intel/oneapi/dpl/2021.1.1/linux/include:/home/users1/xorwndekda/intel/oneapi/mpi/2021.1.1//include:/home/users1/xorwndekda/intel/oneapi/ipp/2021.1.1/include:/home/users1/xorwndekda/intel/oneapi/vpl/2021.1.1/include:/home/users1/xorwndekda/intel/oneapi/dpcpp-ct/2021.1.1/include:/home/users1/xorwndekda/intel/oneapi/tbb/2021.1.1/env/../include:/home/users1/xorwndekda/intel/oneapi/dev-utilities/2021.1.1/include
OPENMX_BIN=/home/users1/xorwndekda/openmx/openmx3.8/source
OCTAVE_PATH=/home/users1/xorwndekda/WIEN2K/WIEN2K_19.1_node09/SRC_structeditor/bin::
SGE_TASK_ID=undefined
IPPCP_TARGET_ARCH=intel64
_CE_CONDA=
NLSPATH=/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/compiler/lib/intel64/locale/%l_%t/%N:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/mkl/lib/intel64_lin/locale/%l_%t/%N:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/compiler/lib/intel64/locale/%l_%t/%N:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/mkl/lib/intel64_lin/locale/%l_%t/%N:/home/users1/xorwndekda/intel/debugger_2019/gdb/intel64/share/locale/%l_%t/%N:/home/users1/xorwndekda/intel/oneapi/mkl/latest/lib/intel64/locale/%l_%t/%N
SETVARS_COMPLETED=1
CONDA_PREFIX_1=/home/users1/xorwndekda/intel/oneapi/intelpython/latest
SGE_BINARY_PATH=/usr/sbin/lx26-amd64
VT_ADD_LIBS=-ldwarf -lelf -lvtunwind -lm -lpthread
MAIL=/var/mail/xorwndekda
PATH=/home/users1/xorwndekda/opt/bin:/home/users1/xorwndekda/opt/local/mvapich2.3.3/2.3.3/bin:/home/users1/xorwndekda/bin:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/bin/intel64:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/mpi/intel64/libfabric/bin:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/mpi/intel64/bin:/home/users1/xorwndekda/bin:/tmp/65758.1.all.q:/home/users1/xorwndekda/openmx/openmx3.8/source:/home/users1/xorwndekda/comsuite/COMSUITE/bin:/home/users1/xorwndekda/WIEN2K/WIEN2K+eDMFT_node09/bin.intel:/home/users1/xorwndekda/WIEN2K/WIEN2K_19.1_node09:/home/users1/xorwndekda/WIEN2K/WIEN2K_19.1_node09/SRC_structeditor/bin:/home/users1/xorwndekda/WIEN2K/WIEN2K_19.1_node09/SRC_IRelast/script-elastic:/home/users1/xorwndekda/opt/bin:/home/users1/xorwndekda/opt/local/mvapich2.3.3/2.3.3/bin:/home/users1/xorwndekda/bin:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/bin/intel64:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/mpi/intel64/libfabric/bin:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/mpi/intel64/bin:/home/users1/xorwndekda/intel/debugger_2019/gdb/intel64/bin:/home/users1/xorwndekda/bin:/home/users1/xorwndekda/.local/bin:/home/users1/xorwndekda/opt/bin:/home/users1/xorwndekda/WIEN2K/WIEN2K_17.1:/home/users1/xorwndekda/WIEN2K/WIEN2K_17.1/SRC_structeditor/bin:/home/users1/xorwndekda/WIEN2K/WIEN2K_17.1/SRC_IRelast/script-elastic:/home/users1/xorwndekda/intel/oneapi/compiler/2021.1.1/linux/bin/intel64:/home/users1/xorwndekda/intel/oneapi/compiler/2021.1.1/linux/bin:/home/users1/xorwndekda/intel/oneapi/compiler/2021.1.1/linux/ioc/bin:/home/users1/xorwndekda/intel/oneapi/mkl/latest/bin/intel64:/home/users1/xorwndekda/intel/oneapi/debugger/10.0.0/gdb/intel64/bin:/home/users1/xorwndekda/intel/oneapi/advisor/2021.1.1/bin64:/home/users1/xorwndekda/intel/oneapi/inspector/2021.1.1/bin64:/home/users1/xorwndekda/intel/oneapi/itac/2021.1.1/bin:/home/users1/xorwndekda/intel/oneapi/itac/2021.1.1/bin:/home/users1/xorwndekda/intel/oneapi/vtune/2021.1.1/bin64:/home/users1/xorwndekda/intel/oneapi/mpi/2021.1.1/libfabric/bin:/home/users1/xorwndekda/intel/oneapi/mpi/2021.1.1/bin:/home/users1/xorwndekda/miniconda3/envs/eDMFT/bin:/home/users1/xorwndekda/intel/oneapi/intelpython/latest/condabin:/home/users1/xorwndekda/intel/oneapi/vpl/2021.1.1/bin:/home/users1/xorwndekda/intel/oneapi/dpcpp-ct/2021.1.1/bin:/home/users1/xorwndekda/intel/oneapi/dev-utilities/2021.1.1/bin:/home/users1/xorwndekda/intel/oneapi/clck/2021.1.1/bin/intel64:/home/users1/xorwndekda/comsuite/comsuite_20210226/comsuite-master/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:.:/home/users1/xorwndekda/WIEN2K/WIEN2K_17.1:.:/home/users1/xorwndekda/julia/julia-1.6.2/bin:.:/home/users1/xorwndekda/WIEN2K/WIEN2K_19.1_node09:.:/home/users1/xorwndekda/WIEN2K/WIEN2K_19.1_node09:.
CONDA_PREFIX_2=/home/users1/xorwndekda/miniconda3
STRUCTEDIT_PATH=/home/users1/xorwndekda/WIEN2K/WIEN2K_19.1_node09/SRC_structeditor/bin
W2WEB_CASE_BASEDIR=/home/users1/xorwndekda/WIEN2k
SGE_STDERR_PATH=/home/users1/xorwndekda/com/codepaper/examples/reasonable_set2/NiO_AFM/SCF_DMFT/std.out2
CONDA_PREFIX=/home/users1/xorwndekda/miniconda3/envs/eDMFT
VPL_BIN=/home/users1/xorwndekda/intel/oneapi/vpl/2021.1.1/bin
TBBROOT=/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/tbb
PWD=/home/users1/xorwndekda/com/codepaper/examples/reasonable_set2/NiO_AFM/SCF_DMFT
SGE_STDOUT_PATH=/home/users1/xorwndekda/com/codepaper/examples/reasonable_set2/NiO_AFM/SCF_DMFT/std.out2
SGE_ACCOUNT=sge
SGE_RSH_COMMAND=/usr/bin/ssh
EDITOR=vim
DPCT_BUNDLE_ROOT=/home/users1/xorwndekda/intel/oneapi/dpcpp-ct/2021.1.1
DNNLROOT=/home/users1/xorwndekda/intel/oneapi/dnnl/2021.1.1/cpu_dpcpp_gpu_dpcpp
LANG=en_US.UTF-8
JOB_SCRIPT=/var/spool/gridengine/execd/node01/job_scripts/65758
JOB_NAME=run_comsuite_mvapich.mj2.sh
VPL_ROOT=/home/users1/xorwndekda/intel/oneapi/vpl/2021.1.1
VT_LIB_DIR=/home/users1/xorwndekda/intel/oneapi/itac/2021.1.1/lib
SGE_ROOT=/var/lib/gridengine
INSPECTOR_2021_DIR=/home/users1/xorwndekda/intel/oneapi/inspector/2021.1.1
DAL_MAJOR_BINARY=1
REQNAME=run_comsuite_mvapich.mj2.sh
VT_ROOT=/home/users1/xorwndekda/intel/oneapi/itac/2021.1.1
IPP_TARGET_ARCH=intel64
BERRYPI_PYTHON=/usr/bin/python2.7
DAALROOT=/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/daal
SGE_JOB_SPOOL_DIR=/var/spool/gridengine/execd/node01/active_jobs/65758.1
ENVIRONMENT=BATCH
DAL_MINOR_BINARY=0
_CE_M=
VPL_INCLUDE=/home/users1/xorwndekda/intel/oneapi/vpl/2021.1.1/include
PE_HOSTFILE=/var/spool/gridengine/execd/node01/active_jobs/65758.1/pe_hostfile
INTEL_PYTHONHOME=/home/users1/xorwndekda/intel/debugger_2019/python/intel64/
CCL_ROOT=/home/users1/xorwndekda/intel/oneapi/ccl/2021.1.1
HOME=/home/users1/xorwndekda
SHLVL=2
SGE_CWD_PATH=/home/users1/xorwndekda/com/codepaper/examples/reasonable_set2/NiO_AFM/SCF_DMFT
NQUEUES=1
LANGUAGE=en_US:en
SGE_O_LOGNAME=xorwndekda
SGE_O_MAIL=/var/mail/xorwndekda
VT_SLIB_DIR=/home/users1/xorwndekda/intel/oneapi/itac/2021.1.1/slib
WIEN_DMFT_ROOT=/home/users1/xorwndekda/WIEN2K/WIEN2K+eDMFT_node09/bin.intel
VTUNE_PROFILER_2021_DIR=/home/users1/xorwndekda/intel/oneapi/vtune/2021.1.1
TMP=/tmp/65758.1.all.q
JOB_ID=65758
PYTHONPATH=/home/users1/xorwndekda/intel/oneapi/advisor/2021.1.1/pythonapi
CONDA_PYTHON_EXE=/home/users1/xorwndekda/miniconda3/bin/python
LOGNAME=xorwndekda
APM=/home/users1/xorwndekda/intel/oneapi/advisor/2021.1.1/perfmodels
PE=orte
SSH_CONNECTION=143.248.16.166 57602 143.248.2.88 22
XDG_DATA_DIRS=/usr/local/share:/usr/share:/var/lib/snapd/desktop
CLASSPATH=/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/mpi/intel64/lib/mpi.jar:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/daal/lib/daal.jar:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/mpi/intel64/lib/mpi.jar:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/daal/lib/daal.jar:/home/users1/xorwndekda/intel/oneapi/dal/2021.1.1/lib/onedal.jar:/home/users1/xorwndekda/intel/oneapi/mpi/2021.1.1//lib/mpi.jar
SGE_TASK_FIRST=undefined
OMP_NUM_THREADS=1
CONDA_DEFAULT_ENV=eDMFT
PKG_CONFIG_PATH=/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/mkl/bin/pkgconfig:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/mkl/bin/pkgconfig:/home/users1/xorwndekda/intel/oneapi/mkl/latest/tools/pkgconfig:/home/users1/xorwndekda/intel/oneapi/advisor/2021.1.1/include/pkgconfig/lib64:/home/users1/xorwndekda/intel/oneapi/inspector/2021.1.1/include/pkgconfig/lib64:/home/users1/xorwndekda/intel/oneapi/vtune/2021.1.1/include/pkgconfig/lib64:
LESSOPEN=| /usr/bin/lesspipe %s
SGE_O_PATH=/home/users1/xorwndekda/openmx/openmx3.8/source:/home/users1/xorwndekda/comsuite/COMSUITE/bin:/home/users1/xorwndekda/WIEN2K/WIEN2K+eDMFT_node09/bin.intel:/home/users1/xorwndekda/WIEN2K/WIEN2K_19.1_node09:/home/users1/xorwndekda/WIEN2K/WIEN2K_19.1_node09/SRC_structeditor/bin:/home/users1/xorwndekda/WIEN2K/WIEN2K_19.1_node09/SRC_IRelast/script-elastic:/home/users1/xorwndekda/opt/bin:/home/users1/xorwndekda/opt/local/mvapich2.3.3/2.3.3/bin:/home/users1/xorwndekda/bin:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/bin/intel64:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/mpi/intel64/libfabric/bin:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/mpi/intel64/bin:/home/users1/xorwndekda/intel/debugger_2019/gdb/intel64/bin:/home/users1/xorwndekda/bin:/home/users1/xorwndekda/.local/bin:/home/users1/xorwndekda/opt/bin:/home/users1/xorwndekda/WIEN2K/WIEN2K_17.1:/home/users1/xorwndekda/WIEN2K/WIEN2K_17.1/SRC_structeditor/bin:/home/users1/xorwndekda/WIEN2K/WIEN2K_17.1/SRC_IRelast/script-elastic:/home/users1/xorwndekda/intel/oneapi/compiler/2021.1.1/linux/bin/intel64:/home/users1/xorwndekda/intel/oneapi/compiler/2021.1.1/linux/bin:/home/users1/xorwndekda/intel/oneapi/compiler/2021.1.1/linux/ioc/bin:/home/users1/xorwndekda/intel/oneapi/mkl/latest/bin/intel64:/home/users1/xorwndekda/intel/oneapi/debugger/10.0.0/gdb/intel64/bin:/home/users1/xorwndekda/intel/oneapi/advisor/2021.1.1/bin64:/home/users1/xorwndekda/intel/oneapi/inspector/2021.1.1/bin64:/home/users1/xorwndekda/intel/oneapi/itac/2021.1.1/bin:/home/users1/xorwndekda/intel/oneapi/itac/2021.1.1/bin:/home/users1/xorwndekda/intel/oneapi/vtune/2021.1.1/bin64:/home/users1/xorwndekda/intel/oneapi/mpi/2021.1.1/libfabric/bin:/home/users1/xorwndekda/intel/oneapi/mpi/2021.1.1/bin:/home/users1/xorwndekda/miniconda3/envs/eDMFT/bin:/home/users1/xorwndekda/intel/oneapi/intelpython/latest/condabin:/home/users1/xorwndekda/intel/oneapi/vpl/2021.1.1/bin:/home/users1/xorwndekda/intel/oneapi/dpcpp-ct/2021.1.1/bin:/home/users1/xorwndekda/intel/oneapi/dev-utilities/2021.1.1/bin:/home/users1/xorwndekda/intel/oneapi/clck/2021.1.1/bin/intel64:/home/users1/xorwndekda/comsuite/comsuite_20210226/comsuite-master/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:.:/home/users1/xorwndekda/WIEN2K/WIEN2K_17.1:.:/home/users1/xorwndekda/julia/julia-1.6.2/bin:.:/home/users1/xorwndekda/WIEN2K/WIEN2K_19.1_node09:.:/home/users1/xorwndekda/WIEN2K/WIEN2K_19.1_node09:.
WIENROOT=/home/users1/xorwndekda/WIEN2K/WIEN2K_19.1_node09
INFOPATH=/home/users1/xorwndekda/intel/documentation_2019/en/debugger/gdb-ia/info/:/home/users1/xorwndekda/intel/oneapi/debugger/10.0.0/documentation/info/
SGE_O_HOST=node00
SGE_O_SHELL=/bin/bash
CMAKE_PREFIX_PATH=/home/users1/xorwndekda/intel/oneapi/vpl:/home/users1/xorwndekda/intel/oneapi/tbb/2021.1.1/env/..:
DISPLAY=localhost:27.0
XDG_RUNTIME_DIR=/run/user/1009
ADVISOR_2021_DIR=/home/users1/xorwndekda/intel/oneapi/advisor/2021.1.1
CCL_ATL_TRANSPORT_PATH=/home/users1/xorwndekda/intel/oneapi/ccl/2021.1.1/lib/cpu_gpu_dpcpp
REQUEST=run_comsuite_mvapich.mj2.sh
ONEAPI_ROOT=/home/users1/xorwndekda/intel/oneapi
NSLOTS=56
LESSCLOSE=/usr/bin/lesspipe %s %s
SGE_STDIN_PATH=/dev/null
VPL_LIB=/home/users1/xorwndekda/intel/oneapi/vpl/2021.1.1/lib
SCRATCH=./
_SYSTEMCTL_SKIP_REDIRECT=true
I_MPI_ROOT=/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/mpi
_=/usr/bin/env
Will run command: julia_rsh -np 56 -machinefile /tmp/65758.1.all.q/machines
node01
node01
node01
node01
node01
node01
node01
node01
node01
node01
node01
node01
node01
node01
node01
node01
node01
node01
node01
node01
node01
node01
node01
node01
node01
node01
node01
node01
node01
node01
node01
node01
node01
node01
node01
node01
node01
node01
node01
node01
node01
node01
node01
node01
node01
node01
node01
node01
node01
node01
node01
node01
node01
node01
node01
node01
sh: 55: source: not found
 DFTforge Version 1.3.0
WARNING: could not import HDF5.Group into _hdf5_implementation
WARNING: could not import HDF5.Dataset into _hdf5_implementation
┌ Warning: Error requiring `HDF5` from `Plots`
│   exception =
│    LoadError: UndefVarError: Group not defined
│    Stacktrace:
│      [1] top-level scope
│        @ ~/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:161
│      [2] include(mod::Module, _path::String)
│        @ Base ./Base.jl:386
│      [3] include(x::String)
│        @ Plots ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1
│      [4] top-level scope
│        @ ~/.julia/packages/Plots/HcxwM/src/init.jl:46
│      [5] eval
│        @ ./boot.jl:360 [inlined]
│      [6] eval
│        @ ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1 [inlined]
│      [7] (::Plots.var"#285#321")()
│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:99
│      [8] err(f::Any, listener::Module, modname::String)
│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:47
│      [9] (::Plots.var"#284#320")()
│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:98
│     [10] withpath(f::Any, path::String)
│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:37
│     [11] (::Plots.var"#283#319")()
│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:97
│     [12] listenpkg(f::Any, pkg::Base.PkgId)
│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:20
│     [13] macro expansion
│        @ ~/.julia/packages/Requires/7Ncym/src/require.jl:95 [inlined]
│     [14] __init__()
│        @ Plots ~/.julia/packages/Plots/HcxwM/src/init.jl:44
│     [15] _include_from_serialized(path::String, depmods::Vector{Any})
│        @ Base ./loading.jl:696
│     [16] _require_search_from_serialized(pkg::Base.PkgId, sourcepath::String)
│        @ Base ./loading.jl:782
│     [17] _require(pkg::Base.PkgId)
│        @ Base ./loading.jl:1020
│     [18] require(uuidkey::Base.PkgId)
│        @ Base ./loading.jl:936
│     [19] require(into::Module, mod::Symbol)
│        @ Base ./loading.jl:923
│     [20] include(mod::Module, _path::String)
│        @ Base ./Base.jl:386
│     [21] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:285
│     [22] _start()
│        @ Base ./client.jl:485
│    in expression starting at /home/users1/xorwndekda/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:36
└ @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:49
      From worker 2:	WARNING: could not import HDF5.Group into _hdf5_implementation
      From worker 2:	WARNING: could not import HDF5.Dataset into _hdf5_implementation
      From worker 2:	┌ Warning: Error requiring `HDF5` from `Plots`
      From worker 2:	│   exception =
      From worker 2:	│    LoadError: UndefVarError: Group not defined
      From worker 2:	│    Stacktrace:
      From worker 2:	│      [1] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:161
      From worker 2:	│      [2] include(mod::Module, _path::String)
      From worker 2:	│        @ Base ./Base.jl:386
      From worker 2:	│      [3] include(x::String)
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1
      From worker 2:	│      [4] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/init.jl:46
      From worker 2:	│      [5] eval
      From worker 2:	│        @ ./boot.jl:360 [inlined]
      From worker 2:	│      [6] eval
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1 [inlined]
      From worker 2:	│      [7] (::Plots.var"#285#321")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:99
      From worker 2:	│      [8] err(f::Any, listener::Module, modname::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:47
      From worker 2:	│      [9] (::Plots.var"#284#320")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:98
      From worker 2:	│     [10] withpath(f::Any, path::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:37
      From worker 2:	│     [11] (::Plots.var"#283#319")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:97
      From worker 2:	│     [12] listenpkg(f::Any, pkg::Base.PkgId)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:20
      From worker 2:	│     [13] macro expansion
      From worker 2:	│        @ ~/.julia/packages/Requires/7Ncym/src/require.jl:95 [inlined]
      From worker 2:	│     [14] __init__()
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/init.jl:44
      From worker 2:	│     [15] _include_from_serialized(path::String, depmods::Vector{Any})
      From worker 2:	│        @ Base ./loading.jl:696
      From worker 2:	│     [16] _require_search_from_serialized(pkg::Base.PkgId, sourcepath::String)
      From worker 2:	│        @ Base ./loading.jl:782
      From worker 2:	│     [17] _require(pkg::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:1020
      From worker 2:	│     [18] require(uuidkey::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:936
      From worker 2:	│     [19] (::Distributed.var"#1#2"{Base.PkgId})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/Distributed.jl:79
      From worker 2:	│     [20] (::Distributed.var"#103#104"{Distributed.CallMsg{:call}})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:274
      From worker 2:	│     [21] run_work_thunk(thunk::Distributed.var"#103#104"{Distributed.CallMsg{:call}}, print_error::Bool)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:63
      From worker 2:	│     [22] run_work_thunk(rv::Distributed.RemoteValue, thunk::Function)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:72
      From worker 2:	│     [23] (::Distributed.var"#96#98"{Distributed.RemoteValue, Distributed.var"#103#104"{Distributed.CallMsg{:call}}})()
      From worker 2:	│        @ Distributed ./task.jl:411
      From worker 2:	│    in expression starting at /home/users1/xorwndekda/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:36
      From worker 2:	└ @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:49
      From worker 2:	┌ Warning: Error requiring `HDF5` from `Plots`
      From worker 2:	│   exception =
      From worker 2:	│    LoadError: UndefVarError: Group not defined
      From worker 2:	│    Stacktrace:
      From worker 2:	│      [1] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:161
      From worker 2:	│      [2] include(mod::Module, _path::String)
      From worker 2:	│        @ Base ./Base.jl:386
      From worker 2:	│      [3] include(x::String)
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1
      From worker 2:	│      [4] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/init.jl:46
      From worker 2:	│      [5] eval
      From worker 2:	│        @ ./boot.jl:360 [inlined]
      From worker 2:	│      [6] eval
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1 [inlined]
      From worker 2:	│      [7] (::Plots.var"#285#321")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:99
      From worker 2:	│      [8] err(f::Any, listener::Module, modname::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:47
      From worker 2:	│      [9] (::Plots.var"#284#320")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:98
      From worker 2:	│     [10] withpath(f::Any, path::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:37
      From worker 2:	│     [11] (::Plots.var"#283#319")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:97
      From worker 2:	│     [12] listenpkg(f::Any, pkg::Base.PkgId)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:20
      From worker 2:	│     [13] macro expansion
      From worker 2:	│        @ ~/.julia/packages/Requires/7Ncym/src/require.jl:95 [inlined]
      From worker 2:	│     [14] __init__()
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/init.jl:44
      From worker 2:	│     [15] _include_from_serialized(path::String, depmods::Vector{Any})
      From worker 2:	│        @ Base ./loading.jl:696
      From worker 2:	│     [16] _require_search_from_serialized(pkg::Base.PkgId, sourcepath::String)
      From worker 2:	│        @ Base ./loading.jl:782
      From worker 2:	│     [17] _require(pkg::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:1020
      From worker 2:	│     [18] require(uuidkey::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:936
      From worker 2:	│     [19] (::Distributed.var"#1#2"{Base.PkgId})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/Distributed.jl:79
      From worker 2:	│     [20] (::Distributed.var"#103#104"{Distributed.CallMsg{:call}})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:274
      From worker 2:	│     [21] run_work_thunk(thunk::Distributed.var"#103#104"{Distributed.CallMsg{:call}}, print_error::Bool)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:63
      From worker 2:	│     [22] run_work_thunk(rv::Distributed.RemoteValue, thunk::Function)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:72
      From worker 2:	│     [23] (::Distributed.var"#96#98"{Distributed.RemoteValue, Distributed.var"#103#104"{Distributed.CallMsg{:call}}})()
      From worker 2:	│        @ Distributed ./task.jl:411
      From worker 2:	│    in expression starting at /home/users1/xorwndekda/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:36
      From worker 2:	└ @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:49
      From worker 2:	┌ Warning: Error requiring `HDF5` from `Plots`
      From worker 2:	│   exception =
      From worker 2:	│    LoadError: UndefVarError: Group not defined
      From worker 2:	│    Stacktrace:
      From worker 2:	│      [1] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:161
      From worker 2:	│      [2] include(mod::Module, _path::String)
      From worker 2:	│        @ Base ./Base.jl:386
      From worker 2:	│      [3] include(x::String)
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1
      From worker 2:	│      [4] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/init.jl:46
      From worker 2:	│      [5] eval
      From worker 2:	│        @ ./boot.jl:360 [inlined]
      From worker 2:	│      [6] eval
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1 [inlined]
      From worker 2:	│      [7] (::Plots.var"#285#321")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:99
      From worker 2:	│      [8] err(f::Any, listener::Module, modname::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:47
      From worker 2:	│      [9] (::Plots.var"#284#320")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:98
      From worker 2:	│     [10] withpath(f::Any, path::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:37
      From worker 2:	│     [11] (::Plots.var"#283#319")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:97
      From worker 2:	│     [12] listenpkg(f::Any, pkg::Base.PkgId)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:20
      From worker 2:	│     [13] macro expansion
      From worker 2:	│        @ ~/.julia/packages/Requires/7Ncym/src/require.jl:95 [inlined]
      From worker 2:	│     [14] __init__()
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/init.jl:44
      From worker 2:	│     [15] _include_from_serialized(path::String, depmods::Vector{Any})
      From worker 2:	│        @ Base ./loading.jl:696
      From worker 2:	│     [16] _require_search_from_serialized(pkg::Base.PkgId, sourcepath::String)
      From worker 2:	│        @ Base ./loading.jl:782
      From worker 2:	│     [17] _require(pkg::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:1020
      From worker 2:	│     [18] require(uuidkey::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:936
      From worker 2:	│     [19] (::Distributed.var"#1#2"{Base.PkgId})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/Distributed.jl:79
      From worker 2:	│     [20] (::Distributed.var"#103#104"{Distributed.CallMsg{:call}})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:274
      From worker 2:	│     [21] run_work_thunk(thunk::Distributed.var"#103#104"{Distributed.CallMsg{:call}}, print_error::Bool)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:63
      From worker 2:	│     [22] run_work_thunk(rv::Distributed.RemoteValue, thunk::Function)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:72
      From worker 2:	│     [23] (::Distributed.var"#96#98"{Distributed.RemoteValue, Distributed.var"#103#104"{Distributed.CallMsg{:call}}})()
      From worker 2:	│        @ Distributed ./task.jl:411
      From worker 2:	│    in expression starting at /home/users1/xorwndekda/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:36
      From worker 2:	└ @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:49
      From worker 2:	┌ Warning: Error requiring `HDF5` from `Plots`
      From worker 2:	│   exception =
      From worker 2:	│    LoadError: UndefVarError: Group not defined
      From worker 2:	│    Stacktrace:
      From worker 2:	│      [1] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:161
      From worker 2:	│      [2] include(mod::Module, _path::String)
      From worker 2:	│        @ Base ./Base.jl:386
      From worker 2:	│      [3] include(x::String)
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1
      From worker 2:	│      [4] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/init.jl:46
      From worker 2:	│      [5] eval
      From worker 2:	│        @ ./boot.jl:360 [inlined]
      From worker 2:	│      [6] eval
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1 [inlined]
      From worker 2:	│      [7] (::Plots.var"#285#321")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:99
      From worker 2:	│      [8] err(f::Any, listener::Module, modname::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:47
      From worker 2:	│      [9] (::Plots.var"#284#320")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:98
      From worker 2:	│     [10] withpath(f::Any, path::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:37
      From worker 2:	│     [11] (::Plots.var"#283#319")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:97
      From worker 2:	│     [12] listenpkg(f::Any, pkg::Base.PkgId)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:20
      From worker 2:	│     [13] macro expansion
      From worker 2:	│        @ ~/.julia/packages/Requires/7Ncym/src/require.jl:95 [inlined]
      From worker 2:	│     [14] __init__()
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/init.jl:44
      From worker 2:	│     [15] _include_from_serialized(path::String, depmods::Vector{Any})
      From worker 2:	│        @ Base ./loading.jl:696
      From worker 2:	│     [16] _require_search_from_serialized(pkg::Base.PkgId, sourcepath::String)
      From worker 2:	│        @ Base ./loading.jl:782
      From worker 2:	│     [17] _require(pkg::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:1020
      From worker 2:	│     [18] require(uuidkey::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:936
      From worker 2:	│     [19] (::Distributed.var"#1#2"{Base.PkgId})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/Distributed.jl:79
      From worker 2:	│     [20] (::Distributed.var"#103#104"{Distributed.CallMsg{:call}})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:274
      From worker 2:	│     [21] run_work_thunk(thunk::Distributed.var"#103#104"{Distributed.CallMsg{:call}}, print_error::Bool)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:63
      From worker 2:	│     [22] run_work_thunk(rv::Distributed.RemoteValue, thunk::Function)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:72
      From worker 2:	│     [23] (::Distributed.var"#96#98"{Distributed.RemoteValue, Distributed.var"#103#104"{Distributed.CallMsg{:call}}})()
      From worker 2:	│        @ Distributed ./task.jl:411
      From worker 2:	│    in expression starting at /home/users1/xorwndekda/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:36
      From worker 2:	└ @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:49
      From worker 2:	┌ Warning: Error requiring `HDF5` from `Plots`
      From worker 2:	│   exception =
      From worker 2:	│    LoadError: UndefVarError: Group not defined
      From worker 2:	│    Stacktrace:
      From worker 2:	│      [1] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:161
      From worker 2:	│      [2] include(mod::Module, _path::String)
      From worker 2:	│        @ Base ./Base.jl:386
      From worker 2:	│      [3] include(x::String)
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1
      From worker 2:	│      [4] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/init.jl:46
      From worker 2:	│      [5] eval
      From worker 2:	│        @ ./boot.jl:360 [inlined]
      From worker 2:	│      [6] eval
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1 [inlined]
      From worker 2:	│      [7] (::Plots.var"#285#321")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:99
      From worker 2:	│      [8] err(f::Any, listener::Module, modname::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:47
      From worker 2:	│      [9] (::Plots.var"#284#320")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:98
      From worker 2:	│     [10] withpath(f::Any, path::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:37
      From worker 2:	│     [11] (::Plots.var"#283#319")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:97
      From worker 2:	│     [12] listenpkg(f::Any, pkg::Base.PkgId)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:20
      From worker 2:	│     [13] macro expansion
      From worker 2:	│        @ ~/.julia/packages/Requires/7Ncym/src/require.jl:95 [inlined]
      From worker 2:	│     [14] __init__()
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/init.jl:44
      From worker 2:	│     [15] _include_from_serialized(path::String, depmods::Vector{Any})
      From worker 2:	│        @ Base ./loading.jl:696
      From worker 2:	│     [16] _require_search_from_serialized(pkg::Base.PkgId, sourcepath::String)
      From worker 2:	│        @ Base ./loading.jl:782
      From worker 2:	│     [17] _require(pkg::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:1020
      From worker 2:	│     [18] require(uuidkey::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:936
      From worker 2:	│     [19] (::Distributed.var"#1#2"{Base.PkgId})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/Distributed.jl:79
      From worker 2:	│     [20] (::Distributed.var"#103#104"{Distributed.CallMsg{:call}})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:274
      From worker 2:	│     [21] run_work_thunk(thunk::Distributed.var"#103#104"{Distributed.CallMsg{:call}}, print_error::Bool)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:63
      From worker 2:	│     [22] run_work_thunk(rv::Distributed.RemoteValue, thunk::Function)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:72
      From worker 2:	│     [23] (::Distributed.var"#96#98"{Distributed.RemoteValue, Distributed.var"#103#104"{Distributed.CallMsg{:call}}})()
      From worker 2:	│        @ Distributed ./task.jl:411
      From worker 2:	│    in expression starting at /home/users1/xorwndekda/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:36
      From worker 2:	└ @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:49
      From worker 2:	┌ Warning: Error requiring `HDF5` from `Plots`
      From worker 2:	│   exception =
      From worker 2:	│    LoadError: UndefVarError: Group not defined
      From worker 2:	│    Stacktrace:
      From worker 2:	│      [1] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:161
      From worker 2:	│      [2] include(mod::Module, _path::String)
      From worker 2:	│        @ Base ./Base.jl:386
      From worker 2:	│      [3] include(x::String)
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1
      From worker 2:	│      [4] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/init.jl:46
      From worker 2:	│      [5] eval
      From worker 2:	│        @ ./boot.jl:360 [inlined]
      From worker 2:	│      [6] eval
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1 [inlined]
      From worker 2:	│      [7] (::Plots.var"#285#321")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:99
      From worker 2:	│      [8] err(f::Any, listener::Module, modname::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:47
      From worker 2:	│      [9] (::Plots.var"#284#320")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:98
      From worker 2:	│     [10] withpath(f::Any, path::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:37
      From worker 2:	│     [11] (::Plots.var"#283#319")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:97
      From worker 2:	│     [12] listenpkg(f::Any, pkg::Base.PkgId)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:20
      From worker 2:	│     [13] macro expansion
      From worker 2:	│        @ ~/.julia/packages/Requires/7Ncym/src/require.jl:95 [inlined]
      From worker 2:	│     [14] __init__()
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/init.jl:44
      From worker 2:	│     [15] _include_from_serialized(path::String, depmods::Vector{Any})
      From worker 2:	│        @ Base ./loading.jl:696
      From worker 2:	│     [16] _require_search_from_serialized(pkg::Base.PkgId, sourcepath::String)
      From worker 2:	│        @ Base ./loading.jl:782
      From worker 2:	│     [17] _require(pkg::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:1020
      From worker 2:	│     [18] require(uuidkey::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:936
      From worker 2:	│     [19] (::Distributed.var"#1#2"{Base.PkgId})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/Distributed.jl:79
      From worker 2:	│     [20] (::Distributed.var"#103#104"{Distributed.CallMsg{:call}})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:274
      From worker 2:	│     [21] run_work_thunk(thunk::Distributed.var"#103#104"{Distributed.CallMsg{:call}}, print_error::Bool)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:63
      From worker 2:	│     [22] run_work_thunk(rv::Distributed.RemoteValue, thunk::Function)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:72
      From worker 2:	│     [23] (::Distributed.var"#96#98"{Distributed.RemoteValue, Distributed.var"#103#104"{Distributed.CallMsg{:call}}})()
      From worker 2:	│        @ Distributed ./task.jl:411
      From worker 2:	│    in expression starting at /home/users1/xorwndekda/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:36
      From worker 2:	└ @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:49
      From worker 2:	┌ Warning: Error requiring `HDF5` from `Plots`
      From worker 2:	│   exception =
      From worker 2:	│    LoadError: UndefVarError: Group not defined
      From worker 2:	│    Stacktrace:
      From worker 2:	│      [1] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:161
      From worker 2:	│      [2] include(mod::Module, _path::String)
      From worker 2:	│        @ Base ./Base.jl:386
      From worker 2:	│      [3] include(x::String)
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1
      From worker 2:	│      [4] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/init.jl:46
      From worker 2:	│      [5] eval
      From worker 2:	│        @ ./boot.jl:360 [inlined]
      From worker 2:	│      [6] eval
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1 [inlined]
      From worker 2:	│      [7] (::Plots.var"#285#321")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:99
      From worker 2:	│      [8] err(f::Any, listener::Module, modname::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:47
      From worker 2:	│      [9] (::Plots.var"#284#320")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:98
      From worker 2:	│     [10] withpath(f::Any, path::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:37
      From worker 2:	│     [11] (::Plots.var"#283#319")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:97
      From worker 2:	│     [12] listenpkg(f::Any, pkg::Base.PkgId)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:20
      From worker 2:	│     [13] macro expansion
      From worker 2:	│        @ ~/.julia/packages/Requires/7Ncym/src/require.jl:95 [inlined]
      From worker 2:	│     [14] __init__()
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/init.jl:44
      From worker 2:	│     [15] _include_from_serialized(path::String, depmods::Vector{Any})
      From worker 2:	│        @ Base ./loading.jl:696
      From worker 2:	│     [16] _require_search_from_serialized(pkg::Base.PkgId, sourcepath::String)
      From worker 2:	│        @ Base ./loading.jl:782
      From worker 2:	│     [17] _require(pkg::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:1020
      From worker 2:	│     [18] require(uuidkey::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:936
      From worker 2:	│     [19] (::Distributed.var"#1#2"{Base.PkgId})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/Distributed.jl:79
      From worker 2:	│     [20] (::Distributed.var"#103#104"{Distributed.CallMsg{:call}})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:274
      From worker 2:	│     [21] run_work_thunk(thunk::Distributed.var"#103#104"{Distributed.CallMsg{:call}}, print_error::Bool)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:63
      From worker 2:	│     [22] run_work_thunk(rv::Distributed.RemoteValue, thunk::Function)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:72
      From worker 2:	│     [23] (::Distributed.var"#96#98"{Distributed.RemoteValue, Distributed.var"#103#104"{Distributed.CallMsg{:call}}})()
      From worker 2:	│        @ Distributed ./task.jl:411
      From worker 2:	│    in expression starting at /home/users1/xorwndekda/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:36
      From worker 2:	└ @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:49
      From worker 2:	┌ Warning: Error requiring `HDF5` from `Plots`
      From worker 2:	│   exception =
      From worker 2:	│    LoadError: UndefVarError: Group not defined
      From worker 2:	│    Stacktrace:
      From worker 2:	│      [1] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:161
      From worker 2:	│      [2] include(mod::Module, _path::String)
      From worker 2:	│        @ Base ./Base.jl:386
      From worker 2:	│      [3] include(x::String)
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1
      From worker 2:	│      [4] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/init.jl:46
      From worker 2:	│      [5] eval
      From worker 2:	│        @ ./boot.jl:360 [inlined]
      From worker 2:	│      [6] eval
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1 [inlined]
      From worker 2:	│      [7] (::Plots.var"#285#321")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:99
      From worker 2:	│      [8] err(f::Any, listener::Module, modname::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:47
      From worker 2:	│      [9] (::Plots.var"#284#320")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:98
      From worker 2:	│     [10] withpath(f::Any, path::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:37
      From worker 2:	│     [11] (::Plots.var"#283#319")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:97
      From worker 2:	│     [12] listenpkg(f::Any, pkg::Base.PkgId)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:20
      From worker 2:	│     [13] macro expansion
      From worker 2:	│        @ ~/.julia/packages/Requires/7Ncym/src/require.jl:95 [inlined]
      From worker 2:	│     [14] __init__()
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/init.jl:44
      From worker 2:	│     [15] _include_from_serialized(path::String, depmods::Vector{Any})
      From worker 2:	│        @ Base ./loading.jl:696
      From worker 2:	│     [16] _require_search_from_serialized(pkg::Base.PkgId, sourcepath::String)
      From worker 2:	│        @ Base ./loading.jl:782
      From worker 2:	│     [17] _require(pkg::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:1020
      From worker 2:	│     [18] require(uuidkey::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:936
      From worker 2:	│     [19] (::Distributed.var"#1#2"{Base.PkgId})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/Distributed.jl:79
      From worker 2:	│     [20] (::Distributed.var"#103#104"{Distributed.CallMsg{:call}})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:274
      From worker 2:	│     [21] run_work_thunk(thunk::Distributed.var"#103#104"{Distributed.CallMsg{:call}}, print_error::Bool)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:63
      From worker 2:	│     [22] run_work_thunk(rv::Distributed.RemoteValue, thunk::Function)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:72
      From worker 2:	│     [23] (::Distributed.var"#96#98"{Distributed.RemoteValue, Distributed.var"#103#104"{Distributed.CallMsg{:call}}})()
      From worker 2:	│        @ Distributed ./task.jl:411
      From worker 2:	│    in expression starting at /home/users1/xorwndekda/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:36
      From worker 2:	└ @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:49
      From worker 2:	┌ Warning: Error requiring `HDF5` from `Plots`
      From worker 2:	│   exception =
      From worker 2:	│    LoadError: UndefVarError: Group not defined
      From worker 2:	│    Stacktrace:
      From worker 2:	│      [1] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:161
      From worker 2:	│      [2] include(mod::Module, _path::String)
      From worker 2:	│        @ Base ./Base.jl:386
      From worker 2:	│      [3] include(x::String)
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1
      From worker 2:	│      [4] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/init.jl:46
      From worker 2:	│      [5] eval
      From worker 2:	│        @ ./boot.jl:360 [inlined]
      From worker 2:	│      [6] eval
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1 [inlined]
      From worker 2:	│      [7] (::Plots.var"#285#321")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:99
      From worker 2:	│      [8] err(f::Any, listener::Module, modname::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:47
      From worker 2:	│      [9] (::Plots.var"#284#320")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:98
      From worker 2:	│     [10] withpath(f::Any, path::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:37
      From worker 2:	│     [11] (::Plots.var"#283#319")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:97
      From worker 2:	│     [12] listenpkg(f::Any, pkg::Base.PkgId)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:20
      From worker 2:	│     [13] macro expansion
      From worker 2:	│        @ ~/.julia/packages/Requires/7Ncym/src/require.jl:95 [inlined]
      From worker 2:	│     [14] __init__()
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/init.jl:44
      From worker 2:	│     [15] _include_from_serialized(path::String, depmods::Vector{Any})
      From worker 2:	│        @ Base ./loading.jl:696
      From worker 2:	│     [16] _require_search_from_serialized(pkg::Base.PkgId, sourcepath::String)
      From worker 2:	│        @ Base ./loading.jl:782
      From worker 2:	│     [17] _require(pkg::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:1020
      From worker 2:	│     [18] require(uuidkey::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:936
      From worker 2:	│     [19] (::Distributed.var"#1#2"{Base.PkgId})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/Distributed.jl:79
      From worker 2:	│     [20] (::Distributed.var"#103#104"{Distributed.CallMsg{:call}})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:274
      From worker 2:	│     [21] run_work_thunk(thunk::Distributed.var"#103#104"{Distributed.CallMsg{:call}}, print_error::Bool)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:63
      From worker 2:	│     [22] run_work_thunk(rv::Distributed.RemoteValue, thunk::Function)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:72
      From worker 2:	│     [23] (::Distributed.var"#96#98"{Distributed.RemoteValue, Distributed.var"#103#104"{Distributed.CallMsg{:call}}})()
      From worker 2:	│        @ Distributed ./task.jl:411
      From worker 2:	│    in expression starting at /home/users1/xorwndekda/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:36
      From worker 2:	└ @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:49
┌ Warning: Error requiring `HDF5` from `Plots`
│   exception =
│    LoadError: UndefVarError: Group not defined
│    Stacktrace:
│      [1] top-level scope
│        @ ~/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:161
│      [2] include(mod::Module, _path::String)
│        @ Base ./Base.jl:386
│      [3] include(x::String)
│        @ Plots ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1
│      [4] top-level scope
│        @ ~/.julia/packages/Plots/HcxwM/src/init.jl:46
│      [5] eval
│        @ ./boot.jl:360 [inlined]
│      [6] eval
│        @ ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1 [inlined]
│      [7] (::Plots.var"#285#321")()
│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:99
│      [8] err(f::Any, listener::Module, modname::String)
│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:47
│      [9] (::Plots.var"#284#320")()
│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:98
│     [10] withpath(f::Any, path::String)
│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:37
│     [11] (::Plots.var"#283#319")()
│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:97
│     [12] listenpkg(f::Any, pkg::Base.PkgId)
│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:20
│     [13] macro expansion
│        @ ~/.julia/packages/Requires/7Ncym/src/require.jl:95 [inlined]
│     [14] __init__()
│        @ Plots ~/.julia/packages/Plots/HcxwM/src/init.jl:44
│     [15] _include_from_serialized(path::String, depmods::Vector{Any})
│        @ Base ./loading.jl:696
│     [16] _require_search_from_serialized(pkg::Base.PkgId, sourcepath::String)
│        @ Base ./loading.jl:782
│     [17] _require(pkg::Base.PkgId)
│        @ Base ./loading.jl:1020
│     [18] require(uuidkey::Base.PkgId)
│        @ Base ./loading.jl:936
│     [19] (::Distributed.var"#1#2"{Base.PkgId})()
│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/Distributed.jl:79
│     [20] (::Distributed.var"#103#104"{Distributed.CallMsg{:call}})()
│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:274
│     [21] run_work_thunk(thunk::Distributed.var"#103#104"{Distributed.CallMsg{:call}}, print_error::Bool)
│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:63
│     [22] run_work_thunk(rv::Distributed.RemoteValue, thunk::Function)
│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:72
│     [23] (::Distributed.var"#96#98"{Distributed.RemoteValue, Distributed.var"#103#104"{Distributed.CallMsg{:call}}})()
│        @ Distributed ./task.jl:411
│    in expression starting at /home/users1/xorwndekda/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:36
└ @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:49
      From worker 2:	┌ Warning: Error requiring `HDF5` from `Plots`
      From worker 2:	│   exception =
      From worker 2:	│    LoadError: UndefVarError: Group not defined
      From worker 2:	│    Stacktrace:
      From worker 2:	│      [1] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:161
      From worker 2:	│      [2] include(mod::Module, _path::String)
      From worker 2:	│        @ Base ./Base.jl:386
      From worker 2:	│      [3] include(x::String)
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1
      From worker 2:	│      [4] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/init.jl:46
      From worker 2:	│      [5] eval
      From worker 2:	│        @ ./boot.jl:360 [inlined]
      From worker 2:	│      [6] eval
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1 [inlined]
      From worker 2:	│      [7] (::Plots.var"#285#321")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:99
      From worker 2:	│      [8] err(f::Any, listener::Module, modname::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:47
      From worker 2:	│      [9] (::Plots.var"#284#320")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:98
      From worker 2:	│     [10] withpath(f::Any, path::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:37
      From worker 2:	│     [11] (::Plots.var"#283#319")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:97
      From worker 2:	│     [12] listenpkg(f::Any, pkg::Base.PkgId)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:20
      From worker 2:	│     [13] macro expansion
      From worker 2:	│        @ ~/.julia/packages/Requires/7Ncym/src/require.jl:95 [inlined]
      From worker 2:	│     [14] __init__()
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/init.jl:44
      From worker 2:	│     [15] _include_from_serialized(path::String, depmods::Vector{Any})
      From worker 2:	│        @ Base ./loading.jl:696
      From worker 2:	│     [16] _require_search_from_serialized(pkg::Base.PkgId, sourcepath::String)
      From worker 2:	│        @ Base ./loading.jl:782
      From worker 2:	│     [17] _require(pkg::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:1020
      From worker 2:	│     [18] require(uuidkey::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:936
      From worker 2:	│     [19] (::Distributed.var"#1#2"{Base.PkgId})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/Distributed.jl:79
      From worker 2:	│     [20] (::Distributed.var"#103#104"{Distributed.CallMsg{:call}})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:274
      From worker 2:	│     [21] run_work_thunk(thunk::Distributed.var"#103#104"{Distributed.CallMsg{:call}}, print_error::Bool)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:63
      From worker 2:	│     [22] run_work_thunk(rv::Distributed.RemoteValue, thunk::Function)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:72
      From worker 2:	│     [23] (::Distributed.var"#96#98"{Distributed.RemoteValue, Distributed.var"#103#104"{Distributed.CallMsg{:call}}})()
      From worker 2:	│        @ Distributed ./task.jl:411
      From worker 2:	│    in expression starting at /home/users1/xorwndekda/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:36
      From worker 2:	└ @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:49
      From worker 2:	┌ Warning: Error requiring `HDF5` from `Plots`
      From worker 2:	│   exception =
      From worker 2:	│    LoadError: UndefVarError: Group not defined
      From worker 2:	│    Stacktrace:
      From worker 2:	│      [1] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:161
      From worker 2:	│      [2] include(mod::Module, _path::String)
      From worker 2:	│        @ Base ./Base.jl:386
      From worker 2:	│      [3] include(x::String)
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1
      From worker 2:	│      [4] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/init.jl:46
      From worker 2:	│      [5] eval
      From worker 2:	│        @ ./boot.jl:360 [inlined]
      From worker 2:	│      [6] eval
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1 [inlined]
      From worker 2:	│      [7] (::Plots.var"#285#321")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:99
      From worker 2:	│      [8] err(f::Any, listener::Module, modname::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:47
      From worker 2:	│      [9] (::Plots.var"#284#320")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:98
      From worker 2:	│     [10] withpath(f::Any, path::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:37
      From worker 2:	│     [11] (::Plots.var"#283#319")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:97
      From worker 2:	│     [12] listenpkg(f::Any, pkg::Base.PkgId)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:20
      From worker 2:	│     [13] macro expansion
      From worker 2:	│        @ ~/.julia/packages/Requires/7Ncym/src/require.jl:95 [inlined]
      From worker 2:	│     [14] __init__()
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/init.jl:44
      From worker 2:	│     [15] _include_from_serialized(path::String, depmods::Vector{Any})
      From worker 2:	│        @ Base ./loading.jl:696
      From worker 2:	│     [16] _require_search_from_serialized(pkg::Base.PkgId, sourcepath::String)
      From worker 2:	│        @ Base ./loading.jl:782
      From worker 2:	│     [17] _require(pkg::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:1020
      From worker 2:	│     [18] require(uuidkey::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:936
      From worker 2:	│     [19] (::Distributed.var"#1#2"{Base.PkgId})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/Distributed.jl:79
      From worker 2:	│     [20] (::Distributed.var"#103#104"{Distributed.CallMsg{:call}})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:274
      From worker 2:	│     [21] run_work_thunk(thunk::Distributed.var"#103#104"{Distributed.CallMsg{:call}}, print_error::Bool)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:63
      From worker 2:	│     [22] run_work_thunk(rv::Distributed.RemoteValue, thunk::Function)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:72
      From worker 2:	│     [23] (::Distributed.var"#96#98"{Distributed.RemoteValue, Distributed.var"#103#104"{Distributed.CallMsg{:call}}})()
      From worker 2:	│        @ Distributed ./task.jl:411
      From worker 2:	│    in expression starting at /home/users1/xorwndekda/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:36
      From worker 2:	└ @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:49
      From worker 2:	┌ Warning: Error requiring `HDF5` from `Plots`
      From worker 2:	│   exception =
      From worker 2:	│    LoadError: UndefVarError: Group not defined
      From worker 2:	│    Stacktrace:
      From worker 2:	│      [1] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:161
      From worker 2:	│      [2] include(mod::Module, _path::String)
      From worker 2:	│        @ Base ./Base.jl:386
      From worker 2:	│      [3] include(x::String)
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1
      From worker 2:	│      [4] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/init.jl:46
      From worker 2:	│      [5] eval
      From worker 2:	│        @ ./boot.jl:360 [inlined]
      From worker 2:	│      [6] eval
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1 [inlined]
      From worker 2:	│      [7] (::Plots.var"#285#321")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:99
      From worker 2:	│      [8] err(f::Any, listener::Module, modname::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:47
      From worker 2:	│      [9] (::Plots.var"#284#320")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:98
      From worker 2:	│     [10] withpath(f::Any, path::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:37
      From worker 2:	│     [11] (::Plots.var"#283#319")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:97
      From worker 2:	│     [12] listenpkg(f::Any, pkg::Base.PkgId)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:20
      From worker 2:	│     [13] macro expansion
      From worker 2:	│        @ ~/.julia/packages/Requires/7Ncym/src/require.jl:95 [inlined]
      From worker 2:	│     [14] __init__()
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/init.jl:44
      From worker 2:	│     [15] _include_from_serialized(path::String, depmods::Vector{Any})
      From worker 2:	│        @ Base ./loading.jl:696
      From worker 2:	│     [16] _require_search_from_serialized(pkg::Base.PkgId, sourcepath::String)
      From worker 2:	│        @ Base ./loading.jl:782
      From worker 2:	│     [17] _require(pkg::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:1020
      From worker 2:	│     [18] require(uuidkey::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:936
      From worker 2:	│     [19] (::Distributed.var"#1#2"{Base.PkgId})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/Distributed.jl:79
      From worker 2:	│     [20] (::Distributed.var"#103#104"{Distributed.CallMsg{:call}})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:274
      From worker 2:	│     [21] run_work_thunk(thunk::Distributed.var"#103#104"{Distributed.CallMsg{:call}}, print_error::Bool)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:63
      From worker 2:	│     [22] run_work_thunk(rv::Distributed.RemoteValue, thunk::Function)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:72
      From worker 2:	│     [23] (::Distributed.var"#96#98"{Distributed.RemoteValue, Distributed.var"#103#104"{Distributed.CallMsg{:call}}})()
      From worker 2:	│        @ Distributed ./task.jl:411
      From worker 2:	│    in expression starting at /home/users1/xorwndekda/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:36
      From worker 2:	└ @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:49
      From worker 2:	┌ Warning: Error requiring `HDF5` from `Plots`
      From worker 2:	│   exception =
      From worker 2:	│    LoadError: UndefVarError: Group not defined
      From worker 2:	│    Stacktrace:
      From worker 2:	│      [1] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:161
      From worker 2:	│      [2] include(mod::Module, _path::String)
      From worker 2:	│        @ Base ./Base.jl:386
      From worker 2:	│      [3] include(x::String)
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1
      From worker 2:	│      [4] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/init.jl:46
      From worker 2:	│      [5] eval
      From worker 2:	│        @ ./boot.jl:360 [inlined]
      From worker 2:	│      [6] eval
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1 [inlined]
      From worker 2:	│      [7] (::Plots.var"#285#321")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:99
      From worker 2:	│      [8] err(f::Any, listener::Module, modname::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:47
      From worker 2:	│      [9] (::Plots.var"#284#320")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:98
      From worker 2:	│     [10] withpath(f::Any, path::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:37
      From worker 2:	│     [11] (::Plots.var"#283#319")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:97
      From worker 2:	│     [12] listenpkg(f::Any, pkg::Base.PkgId)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:20
      From worker 2:	│     [13] macro expansion
      From worker 2:	│        @ ~/.julia/packages/Requires/7Ncym/src/require.jl:95 [inlined]
      From worker 2:	│     [14] __init__()
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/init.jl:44
      From worker 2:	│     [15] _include_from_serialized(path::String, depmods::Vector{Any})
      From worker 2:	│        @ Base ./loading.jl:696
      From worker 2:	│     [16] _require_search_from_serialized(pkg::Base.PkgId, sourcepath::String)
      From worker 2:	│        @ Base ./loading.jl:782
      From worker 2:	│     [17] _require(pkg::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:1020
      From worker 2:	│     [18] require(uuidkey::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:936
      From worker 2:	│     [19] (::Distributed.var"#1#2"{Base.PkgId})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/Distributed.jl:79
      From worker 2:	│     [20] (::Distributed.var"#103#104"{Distributed.CallMsg{:call}})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:274
      From worker 2:	│     [21] run_work_thunk(thunk::Distributed.var"#103#104"{Distributed.CallMsg{:call}}, print_error::Bool)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:63
      From worker 2:	│     [22] run_work_thunk(rv::Distributed.RemoteValue, thunk::Function)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:72
      From worker 2:	│     [23] (::Distributed.var"#96#98"{Distributed.RemoteValue, Distributed.var"#103#104"{Distributed.CallMsg{:call}}})()
      From worker 2:	│        @ Distributed ./task.jl:411
      From worker 2:	│    in expression starting at /home/users1/xorwndekda/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:36
      From worker 2:	└ @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:49
      From worker 2:	┌ Warning: Error requiring `HDF5` from `Plots`
      From worker 2:	│   exception =
      From worker 2:	│    LoadError: UndefVarError: Group not defined
      From worker 2:	│    Stacktrace:
      From worker 2:	│      [1] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:161
      From worker 2:	│      [2] include(mod::Module, _path::String)
      From worker 2:	│        @ Base ./Base.jl:386
      From worker 2:	│      [3] include(x::String)
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1
      From worker 2:	│      [4] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/init.jl:46
      From worker 2:	│      [5] eval
      From worker 2:	│        @ ./boot.jl:360 [inlined]
      From worker 2:	│      [6] eval
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1 [inlined]
      From worker 2:	│      [7] (::Plots.var"#285#321")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:99
      From worker 2:	│      [8] err(f::Any, listener::Module, modname::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:47
      From worker 2:	│      [9] (::Plots.var"#284#320")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:98
      From worker 2:	│     [10] withpath(f::Any, path::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:37
      From worker 2:	│     [11] (::Plots.var"#283#319")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:97
      From worker 2:	│     [12] listenpkg(f::Any, pkg::Base.PkgId)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:20
      From worker 2:	│     [13] macro expansion
      From worker 2:	│        @ ~/.julia/packages/Requires/7Ncym/src/require.jl:95 [inlined]
      From worker 2:	│     [14] __init__()
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/init.jl:44
      From worker 2:	│     [15] _include_from_serialized(path::String, depmods::Vector{Any})
      From worker 2:	│        @ Base ./loading.jl:696
      From worker 2:	│     [16] _require_search_from_serialized(pkg::Base.PkgId, sourcepath::String)
      From worker 2:	│        @ Base ./loading.jl:782
      From worker 2:	│     [17] _require(pkg::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:1020
      From worker 2:	│     [18] require(uuidkey::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:936
      From worker 2:	│     [19] (::Distributed.var"#1#2"{Base.PkgId})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/Distributed.jl:79
      From worker 2:	│     [20] (::Distributed.var"#103#104"{Distributed.CallMsg{:call}})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:274
      From worker 2:	│     [21] run_work_thunk(thunk::Distributed.var"#103#104"{Distributed.CallMsg{:call}}, print_error::Bool)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:63
      From worker 2:	│     [22] run_work_thunk(rv::Distributed.RemoteValue, thunk::Function)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:72
      From worker 2:	│     [23] (::Distributed.var"#96#98"{Distributed.RemoteValue, Distributed.var"#103#104"{Distributed.CallMsg{:call}}})()
      From worker 2:	│        @ Distributed ./task.jl:411
      From worker 2:	│    in expression starting at /home/users1/xorwndekda/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:36
      From worker 2:	└ @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:49
      From worker 13:	WARNING: could not import HDF5.Group into _hdf5_implementation
      From worker 13:	WARNING: could not import HDF5.Dataset into _hdf5_implementation
      From worker 42:	WARNING: could not import HDF5.Group into _hdf5_implementation
      From worker 42:	WARNING: could not import HDF5.Dataset into _hdf5_implementation
      From worker 57:	WARNING: could not import HDF5.Group into _hdf5_implementation
      From worker 57:	WARNING: could not import HDF5.Dataset into _hdf5_implementation
      From worker 17:	WARNING: could not import HDF5.Group into _hdf5_implementation
      From worker 17:	WARNING: could not import HDF5.Dataset into _hdf5_implementation
      From worker 41:	WARNING: could not import HDF5.Group into _hdf5_implementation
      From worker 41:	WARNING: could not import HDF5.Dataset into _hdf5_implementation
      From worker 56:	WARNING: could not import HDF5.Group into _hdf5_implementation
      From worker 56:	WARNING: could not import HDF5.Dataset into _hdf5_implementation
      From worker 3:	WARNING: could not import HDF5.Group into _hdf5_implementation
      From worker 3:	WARNING: could not import HDF5.Dataset into _hdf5_implementation
      From worker 7:	WARNING: could not import HDF5.Group into _hdf5_implementation
      From worker 7:	WARNING: could not import HDF5.Dataset into _hdf5_implementation
      From worker 33:	WARNING: could not import HDF5.Group into _hdf5_implementation
      From worker 33:	WARNING: could not import HDF5.Dataset into _hdf5_implementation
      From worker 45:	WARNING: could not import HDF5.Group into _hdf5_implementation
      From worker 45:	WARNING: could not import HDF5.Dataset into _hdf5_implementation
      From worker 25:	WARNING: could not import HDF5.Group into _hdf5_implementation
      From worker 25:	WARNING: could not import HDF5.Dataset into _hdf5_implementation
      From worker 12:	WARNING: could not import HDF5.Group into _hdf5_implementation
      From worker 12:	WARNING: could not import HDF5.Dataset into _hdf5_implementation
      From worker 43:	WARNING: could not import HDF5.Group into _hdf5_implementation
      From worker 43:	WARNING: could not import HDF5.Dataset into _hdf5_implementation
      From worker 52:	WARNING: could not import HDF5.Group into _hdf5_implementation
      From worker 52:	WARNING: could not import HDF5.Dataset into _hdf5_implementation
      From worker 46:	WARNING: could not import HDF5.Group into _hdf5_implementation
      From worker 46:	WARNING: could not import HDF5.Dataset into _hdf5_implementation
      From worker 53:	WARNING: could not import HDF5.Group into _hdf5_implementation
      From worker 53:	WARNING: could not import HDF5.Dataset into _hdf5_implementation
      From worker 54:	WARNING: could not import HDF5.Group into _hdf5_implementation
      From worker 54:	WARNING: could not import HDF5.Dataset into _hdf5_implementation
      From worker 44:	WARNING: could not import HDF5.Group into _hdf5_implementation
      From worker 44:	WARNING: could not import HDF5.Dataset into _hdf5_implementation
      From worker 21:	WARNING: could not import HDF5.Group into _hdf5_implementation
      From worker 21:	WARNING: could not import HDF5.Dataset into _hdf5_implementation
      From worker 48:	WARNING: could not import HDF5.Group into _hdf5_implementation
      From worker 48:	WARNING: could not import HDF5.Dataset into _hdf5_implementation
      From worker 38:	WARNING: could not import HDF5.Group into _hdf5_implementation
      From worker 38:	WARNING: could not import HDF5.Dataset into _hdf5_implementation
      From worker 4:	WARNING: could not import HDF5.Group into _hdf5_implementation
      From worker 4:	WARNING: could not import HDF5.Dataset into _hdf5_implementation
      From worker 49:	WARNING: could not import HDF5.Group into _hdf5_implementation
      From worker 49:	WARNING: could not import HDF5.Dataset into _hdf5_implementation
      From worker 32:	WARNING: could not import HDF5.Group into _hdf5_implementation
      From worker 32:	WARNING: could not import HDF5.Dataset into _hdf5_implementation
      From worker 40:	WARNING: could not import HDF5.Group into _hdf5_implementation
      From worker 40:	WARNING: could not import HDF5.Dataset into _hdf5_implementation
      From worker 15:	WARNING: could not import HDF5.Group into _hdf5_implementation
      From worker 15:	WARNING: could not import HDF5.Dataset into _hdf5_implementation
      From worker 50:	WARNING: could not import HDF5.Group into _hdf5_implementation
      From worker 50:	WARNING: could not import HDF5.Dataset into _hdf5_implementation
      From worker 22:	WARNING: could not import HDF5.Group into _hdf5_implementation
      From worker 22:	WARNING: could not import HDF5.Dataset into _hdf5_implementation
      From worker 29:	WARNING: could not import HDF5.Group into _hdf5_implementation
      From worker 29:	WARNING: could not import HDF5.Dataset into _hdf5_implementation
      From worker 30:	WARNING: could not import HDF5.Group into _hdf5_implementation
      From worker 30:	WARNING: could not import HDF5.Dataset into _hdf5_implementation
      From worker 10:	WARNING: could not import HDF5.Group into _hdf5_implementation
      From worker 10:	WARNING: could not import HDF5.Dataset into _hdf5_implementation
      From worker 26:	WARNING: could not import HDF5.Group into _hdf5_implementation
      From worker 26:	WARNING: could not import HDF5.Dataset into _hdf5_implementation
      From worker 19:	WARNING: could not import HDF5.Group into _hdf5_implementation
      From worker 19:	WARNING: could not import HDF5.Dataset into _hdf5_implementation
      From worker 18:	WARNING: could not import HDF5.Group into _hdf5_implementation
      From worker 18:	WARNING: could not import HDF5.Dataset into _hdf5_implementation
      From worker 55:	WARNING: could not import HDF5.Group into _hdf5_implementation
      From worker 55:	WARNING: could not import HDF5.Dataset into _hdf5_implementation
      From worker 24:	WARNING: could not import HDF5.Group into _hdf5_implementation
      From worker 24:	WARNING: could not import HDF5.Dataset into _hdf5_implementation
      From worker 6:	WARNING: could not import HDF5.Group into _hdf5_implementation
      From worker 6:	WARNING: could not import HDF5.Dataset into _hdf5_implementation
      From worker 34:	WARNING: could not import HDF5.Group into _hdf5_implementation
      From worker 34:	WARNING: could not import HDF5.Dataset into _hdf5_implementation
      From worker 9:	WARNING: could not import HDF5.Group into _hdf5_implementation
      From worker 9:	WARNING: could not import HDF5.Dataset into _hdf5_implementation
      From worker 39:	WARNING: could not import HDF5.Group into _hdf5_implementation
      From worker 39:	WARNING: could not import HDF5.Dataset into _hdf5_implementation
      From worker 5:	WARNING: could not import HDF5.Group into _hdf5_implementation
      From worker 5:	WARNING: could not import HDF5.Dataset into _hdf5_implementation
      From worker 11:	WARNING: could not import HDF5.Group into _hdf5_implementation
      From worker 11:	WARNING: could not import HDF5.Dataset into _hdf5_implementation
      From worker 51:	WARNING: could not import HDF5.Group into _hdf5_implementation
      From worker 51:	WARNING: could not import HDF5.Dataset into _hdf5_implementation
      From worker 31:	WARNING: could not import HDF5.Group into _hdf5_implementation
      From worker 31:	WARNING: could not import HDF5.Dataset into _hdf5_implementation
      From worker 37:	WARNING: could not import HDF5.Group into _hdf5_implementation
      From worker 37:	WARNING: could not import HDF5.Dataset into _hdf5_implementation
      From worker 36:	WARNING: could not import HDF5.Group into _hdf5_implementation
      From worker 36:	WARNING: could not import HDF5.Dataset into _hdf5_implementation
      From worker 47:	WARNING: could not import HDF5.Group into _hdf5_implementation
      From worker 47:	WARNING: could not import HDF5.Dataset into _hdf5_implementation
      From worker 16:	WARNING: could not import HDF5.Group into _hdf5_implementation
      From worker 16:	WARNING: could not import HDF5.Dataset into _hdf5_implementation
      From worker 14:	WARNING: could not import HDF5.Group into _hdf5_implementation
      From worker 14:	WARNING: could not import HDF5.Dataset into _hdf5_implementation
      From worker 27:	WARNING: could not import HDF5.Group into _hdf5_implementation
      From worker 27:	WARNING: could not import HDF5.Dataset into _hdf5_implementation
      From worker 8:	WARNING: could not import HDF5.Group into _hdf5_implementation
      From worker 8:	WARNING: could not import HDF5.Dataset into _hdf5_implementation
      From worker 35:	WARNING: could not import HDF5.Group into _hdf5_implementation
      From worker 35:	WARNING: could not import HDF5.Dataset into _hdf5_implementation
      From worker 23:	WARNING: could not import HDF5.Group into _hdf5_implementation
      From worker 23:	WARNING: could not import HDF5.Dataset into _hdf5_implementation
      From worker 20:	WARNING: could not import HDF5.Group into _hdf5_implementation
      From worker 20:	WARNING: could not import HDF5.Dataset into _hdf5_implementation
      From worker 28:	WARNING: could not import HDF5.Group into _hdf5_implementation
      From worker 28:	WARNING: could not import HDF5.Dataset into _hdf5_implementation
      From worker 2:	┌ Warning: Error requiring `HDF5` from `Plots`
      From worker 2:	│   exception =
      From worker 2:	│    LoadError: UndefVarError: Group not defined
      From worker 2:	│    Stacktrace:
      From worker 2:	│      [1] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:161
      From worker 2:	│      [2] include(mod::Module, _path::String)
      From worker 2:	│        @ Base ./Base.jl:386
      From worker 2:	│      [3] include(x::String)
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1
      From worker 2:	│      [4] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/init.jl:46
      From worker 2:	│      [5] eval
      From worker 2:	│        @ ./boot.jl:360 [inlined]
      From worker 2:	│      [6] eval
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1 [inlined]
      From worker 2:	│      [7] (::Plots.var"#285#321")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:99
      From worker 2:	│      [8] err(f::Any, listener::Module, modname::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:47
      From worker 2:	│      [9] (::Plots.var"#284#320")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:98
      From worker 2:	│     [10] withpath(f::Any, path::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:37
      From worker 2:	│     [11] (::Plots.var"#283#319")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:97
      From worker 2:	│     [12] listenpkg(f::Any, pkg::Base.PkgId)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:20
      From worker 2:	│     [13] macro expansion
      From worker 2:	│        @ ~/.julia/packages/Requires/7Ncym/src/require.jl:95 [inlined]
      From worker 2:	│     [14] __init__()
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/init.jl:44
      From worker 2:	│     [15] _include_from_serialized(path::String, depmods::Vector{Any})
      From worker 2:	│        @ Base ./loading.jl:696
      From worker 2:	│     [16] _require_search_from_serialized(pkg::Base.PkgId, sourcepath::String)
      From worker 2:	│        @ Base ./loading.jl:782
      From worker 2:	│     [17] _require(pkg::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:1020
      From worker 2:	│     [18] require(uuidkey::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:936
      From worker 2:	│     [19] (::Distributed.var"#1#2"{Base.PkgId})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/Distributed.jl:79
      From worker 2:	│     [20] (::Distributed.var"#103#104"{Distributed.CallMsg{:call}})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:274
      From worker 2:	│     [21] run_work_thunk(thunk::Distributed.var"#103#104"{Distributed.CallMsg{:call}}, print_error::Bool)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:63
      From worker 2:	│     [22] run_work_thunk(rv::Distributed.RemoteValue, thunk::Function)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:72
      From worker 2:	│     [23] (::Distributed.var"#96#98"{Distributed.RemoteValue, Distributed.var"#103#104"{Distributed.CallMsg{:call}}})()
      From worker 2:	│        @ Distributed ./task.jl:411
      From worker 2:	│    in expression starting at /home/users1/xorwndekda/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:36
      From worker 2:	└ @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:49
      From worker 2:	┌ Warning: Error requiring `HDF5` from `Plots`
      From worker 2:	│   exception =
      From worker 2:	│    LoadError: UndefVarError: Group not defined
      From worker 2:	│    Stacktrace:
      From worker 2:	│      [1] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:161
      From worker 2:	│      [2] include(mod::Module, _path::String)
      From worker 2:	│        @ Base ./Base.jl:386
      From worker 2:	│      [3] include(x::String)
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1
      From worker 2:	│      [4] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/init.jl:46
      From worker 2:	│      [5] eval
      From worker 2:	│        @ ./boot.jl:360 [inlined]
      From worker 2:	│      [6] eval
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1 [inlined]
      From worker 2:	│      [7] (::Plots.var"#285#321")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:99
      From worker 2:	│      [8] err(f::Any, listener::Module, modname::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:47
      From worker 2:	│      [9] (::Plots.var"#284#320")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:98
      From worker 2:	│     [10] withpath(f::Any, path::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:37
      From worker 2:	│     [11] (::Plots.var"#283#319")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:97
      From worker 2:	│     [12] listenpkg(f::Any, pkg::Base.PkgId)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:20
      From worker 2:	│     [13] macro expansion
      From worker 2:	│        @ ~/.julia/packages/Requires/7Ncym/src/require.jl:95 [inlined]
      From worker 2:	│     [14] __init__()
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/init.jl:44
      From worker 2:	│     [15] _include_from_serialized(path::String, depmods::Vector{Any})
      From worker 2:	│        @ Base ./loading.jl:696
      From worker 2:	│     [16] _require_search_from_serialized(pkg::Base.PkgId, sourcepath::String)
      From worker 2:	│        @ Base ./loading.jl:782
      From worker 2:	│     [17] _require(pkg::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:1020
      From worker 2:	│     [18] require(uuidkey::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:936
      From worker 2:	│     [19] (::Distributed.var"#1#2"{Base.PkgId})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/Distributed.jl:79
      From worker 2:	│     [20] (::Distributed.var"#103#104"{Distributed.CallMsg{:call}})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:274
      From worker 2:	│     [21] run_work_thunk(thunk::Distributed.var"#103#104"{Distributed.CallMsg{:call}}, print_error::Bool)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:63
      From worker 2:	│     [22] run_work_thunk(rv::Distributed.RemoteValue, thunk::Function)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:72
      From worker 2:	│     [23] (::Distributed.var"#96#98"{Distributed.RemoteValue, Distributed.var"#103#104"{Distributed.CallMsg{:call}}})()
      From worker 2:	│        @ Distributed ./task.jl:411
      From worker 2:	│    in expression starting at /home/users1/xorwndekda/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:36
      From worker 2:	└ @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:49
      From worker 2:	┌ Warning: Error requiring `HDF5` from `Plots`
      From worker 2:	│   exception =
      From worker 2:	│    LoadError: UndefVarError: Group not defined
      From worker 2:	│    Stacktrace:
      From worker 2:	│      [1] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:161
      From worker 2:	│      [2] include(mod::Module, _path::String)
      From worker 2:	│        @ Base ./Base.jl:386
      From worker 2:	│      [3] include(x::String)
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1
      From worker 2:	│      [4] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/init.jl:46
      From worker 2:	│      [5] eval
      From worker 2:	│        @ ./boot.jl:360 [inlined]
      From worker 2:	│      [6] eval
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1 [inlined]
      From worker 2:	│      [7] (::Plots.var"#285#321")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:99
      From worker 2:	│      [8] err(f::Any, listener::Module, modname::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:47
      From worker 2:	│      [9] (::Plots.var"#284#320")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:98
      From worker 2:	│     [10] withpath(f::Any, path::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:37
      From worker 2:	│     [11] (::Plots.var"#283#319")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:97
      From worker 2:	│     [12] listenpkg(f::Any, pkg::Base.PkgId)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:20
      From worker 2:	│     [13] macro expansion
      From worker 2:	│        @ ~/.julia/packages/Requires/7Ncym/src/require.jl:95 [inlined]
      From worker 2:	│     [14] __init__()
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/init.jl:44
      From worker 2:	│     [15] _include_from_serialized(path::String, depmods::Vector{Any})
      From worker 2:	│        @ Base ./loading.jl:696
      From worker 2:	│     [16] _require_search_from_serialized(pkg::Base.PkgId, sourcepath::String)
      From worker 2:	│        @ Base ./loading.jl:782
      From worker 2:	│     [17] _require(pkg::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:1020
      From worker 2:	│     [18] require(uuidkey::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:936
      From worker 2:	│     [19] (::Distributed.var"#1#2"{Base.PkgId})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/Distributed.jl:79
      From worker 2:	│     [20] (::Distributed.var"#103#104"{Distributed.CallMsg{:call}})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:274
      From worker 2:	│     [21] run_work_thunk(thunk::Distributed.var"#103#104"{Distributed.CallMsg{:call}}, print_error::Bool)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:63
      From worker 2:	│     [22] run_work_thunk(rv::Distributed.RemoteValue, thunk::Function)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:72
      From worker 2:	│     [23] (::Distributed.var"#96#98"{Distributed.RemoteValue, Distributed.var"#103#104"{Distributed.CallMsg{:call}}})()
      From worker 2:	│        @ Distributed ./task.jl:411
      From worker 2:	│    in expression starting at /home/users1/xorwndekda/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:36
      From worker 2:	└ @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:49
      From worker 2:	┌ Warning: Error requiring `HDF5` from `Plots`
      From worker 2:	│   exception =
      From worker 2:	│    LoadError: UndefVarError: Group not defined
      From worker 2:	│    Stacktrace:
      From worker 2:	│      [1] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:161
      From worker 2:	│      [2] include(mod::Module, _path::String)
      From worker 2:	│        @ Base ./Base.jl:386
      From worker 2:	│      [3] include(x::String)
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1
      From worker 2:	│      [4] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/init.jl:46
      From worker 2:	│      [5] eval
      From worker 2:	│        @ ./boot.jl:360 [inlined]
      From worker 2:	│      [6] eval
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1 [inlined]
      From worker 2:	│      [7] (::Plots.var"#285#321")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:99
      From worker 2:	│      [8] err(f::Any, listener::Module, modname::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:47
      From worker 2:	│      [9] (::Plots.var"#284#320")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:98
      From worker 2:	│     [10] withpath(f::Any, path::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:37
      From worker 2:	│     [11] (::Plots.var"#283#319")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:97
      From worker 2:	│     [12] listenpkg(f::Any, pkg::Base.PkgId)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:20
      From worker 2:	│     [13] macro expansion
      From worker 2:	│        @ ~/.julia/packages/Requires/7Ncym/src/require.jl:95 [inlined]
      From worker 2:	│     [14] __init__()
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/init.jl:44
      From worker 2:	│     [15] _include_from_serialized(path::String, depmods::Vector{Any})
      From worker 2:	│        @ Base ./loading.jl:696
      From worker 2:	│     [16] _require_search_from_serialized(pkg::Base.PkgId, sourcepath::String)
      From worker 2:	│        @ Base ./loading.jl:782
      From worker 2:	│     [17] _require(pkg::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:1020
      From worker 2:	│     [18] require(uuidkey::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:936
      From worker 2:	│     [19] (::Distributed.var"#1#2"{Base.PkgId})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/Distributed.jl:79
      From worker 2:	│     [20] (::Distributed.var"#103#104"{Distributed.CallMsg{:call}})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:274
      From worker 2:	│     [21] run_work_thunk(thunk::Distributed.var"#103#104"{Distributed.CallMsg{:call}}, print_error::Bool)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:63
      From worker 2:	│     [22] run_work_thunk(rv::Distributed.RemoteValue, thunk::Function)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:72
      From worker 2:	│     [23] (::Distributed.var"#96#98"{Distributed.RemoteValue, Distributed.var"#103#104"{Distributed.CallMsg{:call}}})()
      From worker 2:	│        @ Distributed ./task.jl:411
      From worker 2:	│    in expression starting at /home/users1/xorwndekda/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:36
      From worker 2:	└ @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:49
      From worker 2:	┌ Warning: Error requiring `HDF5` from `Plots`
      From worker 2:	│   exception =
      From worker 2:	│    LoadError: UndefVarError: Group not defined
      From worker 2:	│    Stacktrace:
      From worker 2:	│      [1] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:161
      From worker 2:	│      [2] include(mod::Module, _path::String)
      From worker 2:	│        @ Base ./Base.jl:386
      From worker 2:	│      [3] include(x::String)
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1
      From worker 2:	│      [4] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/init.jl:46
      From worker 2:	│      [5] eval
      From worker 2:	│        @ ./boot.jl:360 [inlined]
      From worker 2:	│      [6] eval
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1 [inlined]
      From worker 2:	│      [7] (::Plots.var"#285#321")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:99
      From worker 2:	│      [8] err(f::Any, listener::Module, modname::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:47
      From worker 2:	│      [9] (::Plots.var"#284#320")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:98
      From worker 2:	│     [10] withpath(f::Any, path::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:37
      From worker 2:	│     [11] (::Plots.var"#283#319")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:97
      From worker 2:	│     [12] listenpkg(f::Any, pkg::Base.PkgId)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:20
      From worker 2:	│     [13] macro expansion
      From worker 2:	│        @ ~/.julia/packages/Requires/7Ncym/src/require.jl:95 [inlined]
      From worker 2:	│     [14] __init__()
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/init.jl:44
      From worker 2:	│     [15] _include_from_serialized(path::String, depmods::Vector{Any})
      From worker 2:	│        @ Base ./loading.jl:696
      From worker 2:	│     [16] _require_search_from_serialized(pkg::Base.PkgId, sourcepath::String)
      From worker 2:	│        @ Base ./loading.jl:782
      From worker 2:	│     [17] _require(pkg::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:1020
      From worker 2:	│     [18] require(uuidkey::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:936
      From worker 2:	│     [19] (::Distributed.var"#1#2"{Base.PkgId})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/Distributed.jl:79
      From worker 2:	│     [20] (::Distributed.var"#103#104"{Distributed.CallMsg{:call}})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:274
      From worker 2:	│     [21] run_work_thunk(thunk::Distributed.var"#103#104"{Distributed.CallMsg{:call}}, print_error::Bool)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:63
      From worker 2:	│     [22] run_work_thunk(rv::Distributed.RemoteValue, thunk::Function)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:72
      From worker 2:	│     [23] (::Distributed.var"#96#98"{Distributed.RemoteValue, Distributed.var"#103#104"{Distributed.CallMsg{:call}}})()
      From worker 2:	│        @ Distributed ./task.jl:411
      From worker 2:	│    in expression starting at /home/users1/xorwndekda/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:36
      From worker 2:	└ @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:49
      From worker 2:	┌ Warning: Error requiring `HDF5` from `Plots`
      From worker 2:	│   exception =
      From worker 2:	│    LoadError: UndefVarError: Group not defined
      From worker 2:	│    Stacktrace:
      From worker 2:	│      [1] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:161
      From worker 2:	│      [2] include(mod::Module, _path::String)
      From worker 2:	│        @ Base ./Base.jl:386
      From worker 2:	│      [3] include(x::String)
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1
      From worker 2:	│      [4] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/init.jl:46
      From worker 2:	│      [5] eval
      From worker 2:	│        @ ./boot.jl:360 [inlined]
      From worker 2:	│      [6] eval
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1 [inlined]
      From worker 2:	│      [7] (::Plots.var"#285#321")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:99
      From worker 2:	│      [8] err(f::Any, listener::Module, modname::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:47
      From worker 2:	│      [9] (::Plots.var"#284#320")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:98
      From worker 2:	│     [10] withpath(f::Any, path::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:37
      From worker 2:	│     [11] (::Plots.var"#283#319")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:97
      From worker 2:	│     [12] listenpkg(f::Any, pkg::Base.PkgId)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:20
      From worker 2:	│     [13] macro expansion
      From worker 2:	│        @ ~/.julia/packages/Requires/7Ncym/src/require.jl:95 [inlined]
      From worker 2:	│     [14] __init__()
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/init.jl:44
      From worker 2:	│     [15] _include_from_serialized(path::String, depmods::Vector{Any})
      From worker 2:	│        @ Base ./loading.jl:696
      From worker 2:	│     [16] _require_search_from_serialized(pkg::Base.PkgId, sourcepath::String)
      From worker 2:	│        @ Base ./loading.jl:782
      From worker 2:	│     [17] _require(pkg::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:1020
      From worker 2:	│     [18] require(uuidkey::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:936
      From worker 2:	│     [19] (::Distributed.var"#1#2"{Base.PkgId})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/Distributed.jl:79
      From worker 2:	│     [20] (::Distributed.var"#103#104"{Distributed.CallMsg{:call}})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:274
      From worker 2:	│     [21] run_work_thunk(thunk::Distributed.var"#103#104"{Distributed.CallMsg{:call}}, print_error::Bool)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:63
      From worker 2:	│     [22] run_work_thunk(rv::Distributed.RemoteValue, thunk::Function)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:72
      From worker 2:	│     [23] (::Distributed.var"#96#98"{Distributed.RemoteValue, Distributed.var"#103#104"{Distributed.CallMsg{:call}}})()
      From worker 2:	│        @ Distributed ./task.jl:411
      From worker 2:	│    in expression starting at /home/users1/xorwndekda/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:36
      From worker 2:	└ @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:49
      From worker 2:	┌ Warning: Error requiring `HDF5` from `Plots`
      From worker 2:	│   exception =
      From worker 2:	│    LoadError: UndefVarError: Group not defined
      From worker 2:	│    Stacktrace:
      From worker 2:	│      [1] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:161
      From worker 2:	│      [2] include(mod::Module, _path::String)
      From worker 2:	│        @ Base ./Base.jl:386
      From worker 2:	│      [3] include(x::String)
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1
      From worker 2:	│      [4] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/init.jl:46
      From worker 2:	│      [5] eval
      From worker 2:	│        @ ./boot.jl:360 [inlined]
      From worker 2:	│      [6] eval
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1 [inlined]
      From worker 2:	│      [7] (::Plots.var"#285#321")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:99
      From worker 2:	│      [8] err(f::Any, listener::Module, modname::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:47
      From worker 2:	│      [9] (::Plots.var"#284#320")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:98
      From worker 2:	│     [10] withpath(f::Any, path::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:37
      From worker 2:	│     [11] (::Plots.var"#283#319")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:97
      From worker 2:	│     [12] listenpkg(f::Any, pkg::Base.PkgId)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:20
      From worker 2:	│     [13] macro expansion
      From worker 2:	│        @ ~/.julia/packages/Requires/7Ncym/src/require.jl:95 [inlined]
      From worker 2:	│     [14] __init__()
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/init.jl:44
      From worker 2:	│     [15] _include_from_serialized(path::String, depmods::Vector{Any})
      From worker 2:	│        @ Base ./loading.jl:696
      From worker 2:	│     [16] _require_search_from_serialized(pkg::Base.PkgId, sourcepath::String)
      From worker 2:	│        @ Base ./loading.jl:782
      From worker 2:	│     [17] _require(pkg::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:1020
      From worker 2:	│     [18] require(uuidkey::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:936
      From worker 2:	│     [19] (::Distributed.var"#1#2"{Base.PkgId})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/Distributed.jl:79
      From worker 2:	│     [20] (::Distributed.var"#103#104"{Distributed.CallMsg{:call}})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:274
      From worker 2:	│     [21] run_work_thunk(thunk::Distributed.var"#103#104"{Distributed.CallMsg{:call}}, print_error::Bool)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:63
      From worker 2:	│     [22] run_work_thunk(rv::Distributed.RemoteValue, thunk::Function)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:72
      From worker 2:	│     [23] (::Distributed.var"#96#98"{Distributed.RemoteValue, Distributed.var"#103#104"{Distributed.CallMsg{:call}}})()
      From worker 2:	│        @ Distributed ./task.jl:411
      From worker 2:	│    in expression starting at /home/users1/xorwndekda/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:36
      From worker 2:	└ @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:49
      From worker 2:	┌ Warning: Error requiring `HDF5` from `Plots`
      From worker 2:	│   exception =
      From worker 2:	│    LoadError: UndefVarError: Group not defined
      From worker 2:	│    Stacktrace:
      From worker 2:	│      [1] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:161
      From worker 2:	│      [2] include(mod::Module, _path::String)
      From worker 2:	│        @ Base ./Base.jl:386
      From worker 2:	│      [3] include(x::String)
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1
      From worker 2:	│      [4] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/init.jl:46
      From worker 2:	│      [5] eval
      From worker 2:	│        @ ./boot.jl:360 [inlined]
      From worker 2:	│      [6] eval
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1 [inlined]
      From worker 2:	│      [7] (::Plots.var"#285#321")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:99
      From worker 2:	│      [8] err(f::Any, listener::Module, modname::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:47
      From worker 2:	│      [9] (::Plots.var"#284#320")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:98
      From worker 2:	│     [10] withpath(f::Any, path::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:37
      From worker 2:	│     [11] (::Plots.var"#283#319")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:97
      From worker 2:	│     [12] listenpkg(f::Any, pkg::Base.PkgId)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:20
      From worker 2:	│     [13] macro expansion
      From worker 2:	│        @ ~/.julia/packages/Requires/7Ncym/src/require.jl:95 [inlined]
      From worker 2:	│     [14] __init__()
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/init.jl:44
      From worker 2:	│     [15] _include_from_serialized(path::String, depmods::Vector{Any})
      From worker 2:	│        @ Base ./loading.jl:696
      From worker 2:	│     [16] _require_search_from_serialized(pkg::Base.PkgId, sourcepath::String)
      From worker 2:	│        @ Base ./loading.jl:782
      From worker 2:	│     [17] _require(pkg::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:1020
      From worker 2:	│     [18] require(uuidkey::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:936
      From worker 2:	│     [19] (::Distributed.var"#1#2"{Base.PkgId})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/Distributed.jl:79
      From worker 2:	│     [20] (::Distributed.var"#103#104"{Distributed.CallMsg{:call}})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:274
      From worker 2:	│     [21] run_work_thunk(thunk::Distributed.var"#103#104"{Distributed.CallMsg{:call}}, print_error::Bool)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:63
      From worker 2:	│     [22] run_work_thunk(rv::Distributed.RemoteValue, thunk::Function)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:72
      From worker 2:	│     [23] (::Distributed.var"#96#98"{Distributed.RemoteValue, Distributed.var"#103#104"{Distributed.CallMsg{:call}}})()
      From worker 2:	│        @ Distributed ./task.jl:411
      From worker 2:	│    in expression starting at /home/users1/xorwndekda/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:36
      From worker 2:	└ @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:49
      From worker 2:	┌ Warning: Error requiring `HDF5` from `Plots`
      From worker 2:	│   exception =
      From worker 2:	│    LoadError: UndefVarError: Group not defined
      From worker 2:	│    Stacktrace:
      From worker 2:	│      [1] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:161
      From worker 2:	│      [2] include(mod::Module, _path::String)
      From worker 2:	│        @ Base ./Base.jl:386
      From worker 2:	│      [3] include(x::String)
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1
      From worker 2:	│      [4] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/init.jl:46
      From worker 2:	│      [5] eval
      From worker 2:	│        @ ./boot.jl:360 [inlined]
      From worker 2:	│      [6] eval
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1 [inlined]
      From worker 2:	│      [7] (::Plots.var"#285#321")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:99
      From worker 2:	│      [8] err(f::Any, listener::Module, modname::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:47
      From worker 2:	│      [9] (::Plots.var"#284#320")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:98
      From worker 2:	│     [10] withpath(f::Any, path::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:37
      From worker 2:	│     [11] (::Plots.var"#283#319")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:97
      From worker 2:	│     [12] listenpkg(f::Any, pkg::Base.PkgId)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:20
      From worker 2:	│     [13] macro expansion
      From worker 2:	│        @ ~/.julia/packages/Requires/7Ncym/src/require.jl:95 [inlined]
      From worker 2:	│     [14] __init__()
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/init.jl:44
      From worker 2:	│     [15] _include_from_serialized(path::String, depmods::Vector{Any})
      From worker 2:	│        @ Base ./loading.jl:696
      From worker 2:	│     [16] _require_search_from_serialized(pkg::Base.PkgId, sourcepath::String)
      From worker 2:	│        @ Base ./loading.jl:782
      From worker 2:	│     [17] _require(pkg::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:1020
      From worker 2:	│     [18] require(uuidkey::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:936
      From worker 2:	│     [19] (::Distributed.var"#1#2"{Base.PkgId})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/Distributed.jl:79
      From worker 2:	│     [20] (::Distributed.var"#103#104"{Distributed.CallMsg{:call}})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:274
      From worker 2:	│     [21] run_work_thunk(thunk::Distributed.var"#103#104"{Distributed.CallMsg{:call}}, print_error::Bool)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:63
      From worker 2:	│     [22] run_work_thunk(rv::Distributed.RemoteValue, thunk::Function)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:72
      From worker 2:	│     [23] (::Distributed.var"#96#98"{Distributed.RemoteValue, Distributed.var"#103#104"{Distributed.CallMsg{:call}}})()
      From worker 2:	│        @ Distributed ./task.jl:411
      From worker 2:	│    in expression starting at /home/users1/xorwndekda/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:36
      From worker 2:	└ @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:49
      From worker 2:	┌ Warning: Error requiring `HDF5` from `Plots`
      From worker 2:	│   exception =
      From worker 2:	│    LoadError: UndefVarError: Group not defined
      From worker 2:	│    Stacktrace:
      From worker 2:	│      [1] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:161
      From worker 2:	│      [2] include(mod::Module, _path::String)
      From worker 2:	│        @ Base ./Base.jl:386
      From worker 2:	│      [3] include(x::String)
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1
      From worker 2:	│      [4] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/init.jl:46
      From worker 2:	│      [5] eval
      From worker 2:	│        @ ./boot.jl:360 [inlined]
      From worker 2:	│      [6] eval
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1 [inlined]
      From worker 2:	│      [7] (::Plots.var"#285#321")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:99
      From worker 2:	│      [8] err(f::Any, listener::Module, modname::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:47
      From worker 2:	│      [9] (::Plots.var"#284#320")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:98
      From worker 2:	│     [10] withpath(f::Any, path::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:37
      From worker 2:	│     [11] (::Plots.var"#283#319")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:97
      From worker 2:	│     [12] listenpkg(f::Any, pkg::Base.PkgId)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:20
      From worker 2:	│     [13] macro expansion
      From worker 2:	│        @ ~/.julia/packages/Requires/7Ncym/src/require.jl:95 [inlined]
      From worker 2:	│     [14] __init__()
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/init.jl:44
      From worker 2:	│     [15] _include_from_serialized(path::String, depmods::Vector{Any})
      From worker 2:	│        @ Base ./loading.jl:696
      From worker 2:	│     [16] _require_search_from_serialized(pkg::Base.PkgId, sourcepath::String)
      From worker 2:	│        @ Base ./loading.jl:782
      From worker 2:	│     [17] _require(pkg::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:1020
      From worker 2:	│     [18] require(uuidkey::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:936
      From worker 2:	│     [19] (::Distributed.var"#1#2"{Base.PkgId})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/Distributed.jl:79
      From worker 2:	│     [20] (::Distributed.var"#103#104"{Distributed.CallMsg{:call}})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:274
      From worker 2:	│     [21] run_work_thunk(thunk::Distributed.var"#103#104"{Distributed.CallMsg{:call}}, print_error::Bool)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:63
      From worker 2:	│     [22] run_work_thunk(rv::Distributed.RemoteValue, thunk::Function)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:72
      From worker 2:	│     [23] (::Distributed.var"#96#98"{Distributed.RemoteValue, Distributed.var"#103#104"{Distributed.CallMsg{:call}}})()
      From worker 2:	│        @ Distributed ./task.jl:411
      From worker 2:	│    in expression starting at /home/users1/xorwndekda/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:36
      From worker 2:	└ @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:49
      From worker 2:	┌ Warning: Error requiring `HDF5` from `Plots`
      From worker 2:	│   exception =
      From worker 2:	│    LoadError: UndefVarError: Group not defined
      From worker 2:	│    Stacktrace:
      From worker 2:	│      [1] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:161
      From worker 2:	│      [2] include(mod::Module, _path::String)
      From worker 2:	│        @ Base ./Base.jl:386
      From worker 2:	│      [3] include(x::String)
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1
      From worker 2:	│      [4] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/init.jl:46
      From worker 2:	│      [5] eval
      From worker 2:	│        @ ./boot.jl:360 [inlined]
      From worker 2:	│      [6] eval
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1 [inlined]
      From worker 2:	│      [7] (::Plots.var"#285#321")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:99
      From worker 2:	│      [8] err(f::Any, listener::Module, modname::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:47
      From worker 2:	│      [9] (::Plots.var"#284#320")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:98
      From worker 2:	│     [10] withpath(f::Any, path::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:37
      From worker 2:	│     [11] (::Plots.var"#283#319")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:97
      From worker 2:	│     [12] listenpkg(f::Any, pkg::Base.PkgId)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:20
      From worker 2:	│     [13] macro expansion
      From worker 2:	│        @ ~/.julia/packages/Requires/7Ncym/src/require.jl:95 [inlined]
      From worker 2:	│     [14] __init__()
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/init.jl:44
      From worker 2:	│     [15] _include_from_serialized(path::String, depmods::Vector{Any})
      From worker 2:	│        @ Base ./loading.jl:696
      From worker 2:	│     [16] _require_search_from_serialized(pkg::Base.PkgId, sourcepath::String)
      From worker 2:	│        @ Base ./loading.jl:782
      From worker 2:	│     [17] _require(pkg::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:1020
      From worker 2:	│     [18] require(uuidkey::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:936
      From worker 2:	│     [19] (::Distributed.var"#1#2"{Base.PkgId})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/Distributed.jl:79
      From worker 2:	│     [20] (::Distributed.var"#103#104"{Distributed.CallMsg{:call}})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:274
      From worker 2:	│     [21] run_work_thunk(thunk::Distributed.var"#103#104"{Distributed.CallMsg{:call}}, print_error::Bool)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:63
      From worker 2:	│     [22] run_work_thunk(rv::Distributed.RemoteValue, thunk::Function)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:72
      From worker 2:	│     [23] (::Distributed.var"#96#98"{Distributed.RemoteValue, Distributed.var"#103#104"{Distributed.CallMsg{:call}}})()
      From worker 2:	│        @ Distributed ./task.jl:411
      From worker 2:	│    in expression starting at /home/users1/xorwndekda/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:36
      From worker 2:	└ @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:49
      From worker 2:	┌ Warning: Error requiring `HDF5` from `Plots`
      From worker 2:	│   exception =
      From worker 2:	│    LoadError: UndefVarError: Group not defined
      From worker 2:	│    Stacktrace:
      From worker 2:	│      [1] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:161
      From worker 2:	│      [2] include(mod::Module, _path::String)
      From worker 2:	│        @ Base ./Base.jl:386
      From worker 2:	│      [3] include(x::String)
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1
      From worker 2:	│      [4] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/init.jl:46
      From worker 2:	│      [5] eval
      From worker 2:	│        @ ./boot.jl:360 [inlined]
      From worker 2:	│      [6] eval
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1 [inlined]
      From worker 2:	│      [7] (::Plots.var"#285#321")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:99
      From worker 2:	│      [8] err(f::Any, listener::Module, modname::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:47
      From worker 2:	│      [9] (::Plots.var"#284#320")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:98
      From worker 2:	│     [10] withpath(f::Any, path::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:37
      From worker 2:	│     [11] (::Plots.var"#283#319")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:97
      From worker 2:	│     [12] listenpkg(f::Any, pkg::Base.PkgId)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:20
      From worker 2:	│     [13] macro expansion
      From worker 2:	│        @ ~/.julia/packages/Requires/7Ncym/src/require.jl:95 [inlined]
      From worker 2:	│     [14] __init__()
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/init.jl:44
      From worker 2:	│     [15] _include_from_serialized(path::String, depmods::Vector{Any})
      From worker 2:	│        @ Base ./loading.jl:696
      From worker 2:	│     [16] _require_search_from_serialized(pkg::Base.PkgId, sourcepath::String)
      From worker 2:	│        @ Base ./loading.jl:782
      From worker 2:	│     [17] _require(pkg::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:1020
      From worker 2:	│     [18] require(uuidkey::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:936
      From worker 2:	│     [19] (::Distributed.var"#1#2"{Base.PkgId})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/Distributed.jl:79
      From worker 2:	│     [20] (::Distributed.var"#103#104"{Distributed.CallMsg{:call}})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:274
      From worker 2:	│     [21] run_work_thunk(thunk::Distributed.var"#103#104"{Distributed.CallMsg{:call}}, print_error::Bool)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:63
      From worker 2:	│     [22] run_work_thunk(rv::Distributed.RemoteValue, thunk::Function)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:72
      From worker 2:	│     [23] (::Distributed.var"#96#98"{Distributed.RemoteValue, Distributed.var"#103#104"{Distributed.CallMsg{:call}}})()
      From worker 2:	│        @ Distributed ./task.jl:411
      From worker 2:	│    in expression starting at /home/users1/xorwndekda/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:36
      From worker 2:	└ @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:49
      From worker 2:	┌ Warning: Error requiring `HDF5` from `Plots`
      From worker 2:	│   exception =
      From worker 2:	│    LoadError: UndefVarError: Group not defined
      From worker 2:	│    Stacktrace:
      From worker 2:	│      [1] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:161
      From worker 2:	│      [2] include(mod::Module, _path::String)
      From worker 2:	│        @ Base ./Base.jl:386
      From worker 2:	│      [3] include(x::String)
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1
      From worker 2:	│      [4] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/init.jl:46
      From worker 2:	│      [5] eval
      From worker 2:	│        @ ./boot.jl:360 [inlined]
      From worker 2:	│      [6] eval
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1 [inlined]
      From worker 2:	│      [7] (::Plots.var"#285#321")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:99
      From worker 2:	│      [8] err(f::Any, listener::Module, modname::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:47
      From worker 2:	│      [9] (::Plots.var"#284#320")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:98
      From worker 2:	│     [10] withpath(f::Any, path::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:37
      From worker 2:	│     [11] (::Plots.var"#283#319")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:97
      From worker 2:	│     [12] listenpkg(f::Any, pkg::Base.PkgId)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:20
      From worker 2:	│     [13] macro expansion
      From worker 2:	│        @ ~/.julia/packages/Requires/7Ncym/src/require.jl:95 [inlined]
      From worker 2:	│     [14] __init__()
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/init.jl:44
      From worker 2:	│     [15] _include_from_serialized(path::String, depmods::Vector{Any})
      From worker 2:	│        @ Base ./loading.jl:696
      From worker 2:	│     [16] _require_search_from_serialized(pkg::Base.PkgId, sourcepath::String)
      From worker 2:	│        @ Base ./loading.jl:782
      From worker 2:	│     [17] _require(pkg::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:1020
      From worker 2:	│     [18] require(uuidkey::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:936
      From worker 2:	│     [19] (::Distributed.var"#1#2"{Base.PkgId})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/Distributed.jl:79
      From worker 2:	│     [20] (::Distributed.var"#103#104"{Distributed.CallMsg{:call}})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:274
      From worker 2:	│     [21] run_work_thunk(thunk::Distributed.var"#103#104"{Distributed.CallMsg{:call}}, print_error::Bool)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:63
      From worker 2:	│     [22] run_work_thunk(rv::Distributed.RemoteValue, thunk::Function)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:72
      From worker 2:	│     [23] (::Distributed.var"#96#98"{Distributed.RemoteValue, Distributed.var"#103#104"{Distributed.CallMsg{:call}}})()
      From worker 2:	│        @ Distributed ./task.jl:411
      From worker 2:	│    in expression starting at /home/users1/xorwndekda/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:36
      From worker 2:	└ @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:49
      From worker 2:	┌ Warning: Error requiring `HDF5` from `Plots`
      From worker 2:	│   exception =
      From worker 2:	│    LoadError: UndefVarError: Group not defined
      From worker 2:	│    Stacktrace:
      From worker 2:	│      [1] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:161
      From worker 2:	│      [2] include(mod::Module, _path::String)
      From worker 2:	│        @ Base ./Base.jl:386
      From worker 2:	│      [3] include(x::String)
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1
      From worker 2:	│      [4] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/init.jl:46
      From worker 2:	│      [5] eval
      From worker 2:	│        @ ./boot.jl:360 [inlined]
      From worker 2:	│      [6] eval
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1 [inlined]
      From worker 2:	│      [7] (::Plots.var"#285#321")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:99
      From worker 2:	│      [8] err(f::Any, listener::Module, modname::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:47
      From worker 2:	│      [9] (::Plots.var"#284#320")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:98
      From worker 2:	│     [10] withpath(f::Any, path::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:37
      From worker 2:	│     [11] (::Plots.var"#283#319")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:97
      From worker 2:	│     [12] listenpkg(f::Any, pkg::Base.PkgId)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:20
      From worker 2:	│     [13] macro expansion
      From worker 2:	│        @ ~/.julia/packages/Requires/7Ncym/src/require.jl:95 [inlined]
      From worker 2:	│     [14] __init__()
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/init.jl:44
      From worker 2:	│     [15] _include_from_serialized(path::String, depmods::Vector{Any})
      From worker 2:	│        @ Base ./loading.jl:696
      From worker 2:	│     [16] _require_search_from_serialized(pkg::Base.PkgId, sourcepath::String)
      From worker 2:	│        @ Base ./loading.jl:782
      From worker 2:	│     [17] _require(pkg::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:1020
      From worker 2:	│     [18] require(uuidkey::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:936
      From worker 2:	│     [19] (::Distributed.var"#1#2"{Base.PkgId})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/Distributed.jl:79
      From worker 2:	│     [20] (::Distributed.var"#103#104"{Distributed.CallMsg{:call}})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:274
      From worker 2:	│     [21] run_work_thunk(thunk::Distributed.var"#103#104"{Distributed.CallMsg{:call}}, print_error::Bool)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:63
      From worker 2:	│     [22] run_work_thunk(rv::Distributed.RemoteValue, thunk::Function)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:72
      From worker 2:	│     [23] (::Distributed.var"#96#98"{Distributed.RemoteValue, Distributed.var"#103#104"{Distributed.CallMsg{:call}}})()
      From worker 2:	│        @ Distributed ./task.jl:411
      From worker 2:	│    in expression starting at /home/users1/xorwndekda/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:36
      From worker 2:	└ @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:49
      From worker 2:	┌ Warning: Error requiring `HDF5` from `Plots`
      From worker 2:	│   exception =
      From worker 2:	│    LoadError: UndefVarError: Group not defined
      From worker 2:	│    Stacktrace:
      From worker 2:	│      [1] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:161
      From worker 2:	│      [2] include(mod::Module, _path::String)
      From worker 2:	│        @ Base ./Base.jl:386
      From worker 2:	│      [3] include(x::String)
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1
      From worker 2:	│      [4] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/init.jl:46
      From worker 2:	│      [5] eval
      From worker 2:	│        @ ./boot.jl:360 [inlined]
      From worker 2:	│      [6] eval
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1 [inlined]
      From worker 2:	│      [7] (::Plots.var"#285#321")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:99
      From worker 2:	│      [8] err(f::Any, listener::Module, modname::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:47
      From worker 2:	│      [9] (::Plots.var"#284#320")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:98
      From worker 2:	│     [10] withpath(f::Any, path::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:37
      From worker 2:	│     [11] (::Plots.var"#283#319")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:97
      From worker 2:	│     [12] listenpkg(f::Any, pkg::Base.PkgId)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:20
      From worker 2:	│     [13] macro expansion
      From worker 2:	│        @ ~/.julia/packages/Requires/7Ncym/src/require.jl:95 [inlined]
      From worker 2:	│     [14] __init__()
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/init.jl:44
      From worker 2:	│     [15] _include_from_serialized(path::String, depmods::Vector{Any})
      From worker 2:	│        @ Base ./loading.jl:696
      From worker 2:	│     [16] _require_search_from_serialized(pkg::Base.PkgId, sourcepath::String)
      From worker 2:	│        @ Base ./loading.jl:782
      From worker 2:	│     [17] _require(pkg::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:1020
      From worker 2:	│     [18] require(uuidkey::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:936
      From worker 2:	│     [19] (::Distributed.var"#1#2"{Base.PkgId})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/Distributed.jl:79
      From worker 2:	│     [20] (::Distributed.var"#103#104"{Distributed.CallMsg{:call}})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:274
      From worker 2:	│     [21] run_work_thunk(thunk::Distributed.var"#103#104"{Distributed.CallMsg{:call}}, print_error::Bool)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:63
      From worker 2:	│     [22] run_work_thunk(rv::Distributed.RemoteValue, thunk::Function)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:72
      From worker 2:	│     [23] (::Distributed.var"#96#98"{Distributed.RemoteValue, Distributed.var"#103#104"{Distributed.CallMsg{:call}}})()
      From worker 2:	│        @ Distributed ./task.jl:411
      From worker 2:	│    in expression starting at /home/users1/xorwndekda/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:36
      From worker 2:	└ @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:49
      From worker 2:	┌ Warning: Error requiring `HDF5` from `Plots`
      From worker 2:	│   exception =
      From worker 2:	│    LoadError: UndefVarError: Group not defined
      From worker 2:	│    Stacktrace:
      From worker 2:	│      [1] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:161
      From worker 2:	│      [2] include(mod::Module, _path::String)
      From worker 2:	│        @ Base ./Base.jl:386
      From worker 2:	│      [3] include(x::String)
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1
      From worker 2:	│      [4] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/init.jl:46
      From worker 2:	│      [5] eval
      From worker 2:	│        @ ./boot.jl:360 [inlined]
      From worker 2:	│      [6] eval
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1 [inlined]
      From worker 2:	│      [7] (::Plots.var"#285#321")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:99
      From worker 2:	│      [8] err(f::Any, listener::Module, modname::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:47
      From worker 2:	│      [9] (::Plots.var"#284#320")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:98
      From worker 2:	│     [10] withpath(f::Any, path::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:37
      From worker 2:	│     [11] (::Plots.var"#283#319")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:97
      From worker 2:	│     [12] listenpkg(f::Any, pkg::Base.PkgId)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:20
      From worker 2:	│     [13] macro expansion
      From worker 2:	│        @ ~/.julia/packages/Requires/7Ncym/src/require.jl:95 [inlined]
      From worker 2:	│     [14] __init__()
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/init.jl:44
      From worker 2:	│     [15] _include_from_serialized(path::String, depmods::Vector{Any})
      From worker 2:	│        @ Base ./loading.jl:696
      From worker 2:	│     [16] _require_search_from_serialized(pkg::Base.PkgId, sourcepath::String)
      From worker 2:	│        @ Base ./loading.jl:782
      From worker 2:	│     [17] _require(pkg::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:1020
      From worker 2:	│     [18] require(uuidkey::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:936
      From worker 2:	│     [19] (::Distributed.var"#1#2"{Base.PkgId})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/Distributed.jl:79
      From worker 2:	│     [20] (::Distributed.var"#103#104"{Distributed.CallMsg{:call}})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:274
      From worker 2:	│     [21] run_work_thunk(thunk::Distributed.var"#103#104"{Distributed.CallMsg{:call}}, print_error::Bool)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:63
      From worker 2:	│     [22] run_work_thunk(rv::Distributed.RemoteValue, thunk::Function)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:72
      From worker 2:	│     [23] (::Distributed.var"#96#98"{Distributed.RemoteValue, Distributed.var"#103#104"{Distributed.CallMsg{:call}}})()
      From worker 2:	│        @ Distributed ./task.jl:411
      From worker 2:	│    in expression starting at /home/users1/xorwndekda/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:36
      From worker 2:	└ @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:49
      From worker 2:	┌ Warning: Error requiring `HDF5` from `Plots`
      From worker 2:	│   exception =
      From worker 2:	│    LoadError: UndefVarError: Group not defined
      From worker 2:	│    Stacktrace:
      From worker 2:	│      [1] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:161
      From worker 2:	│      [2] include(mod::Module, _path::String)
      From worker 2:	│        @ Base ./Base.jl:386
      From worker 2:	│      [3] include(x::String)
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1
      From worker 2:	│      [4] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/init.jl:46
      From worker 2:	│      [5] eval
      From worker 2:	│        @ ./boot.jl:360 [inlined]
      From worker 2:	│      [6] eval
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1 [inlined]
      From worker 2:	│      [7] (::Plots.var"#285#321")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:99
      From worker 2:	│      [8] err(f::Any, listener::Module, modname::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:47
      From worker 2:	│      [9] (::Plots.var"#284#320")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:98
      From worker 2:	│     [10] withpath(f::Any, path::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:37
      From worker 2:	│     [11] (::Plots.var"#283#319")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:97
      From worker 2:	│     [12] listenpkg(f::Any, pkg::Base.PkgId)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:20
      From worker 2:	│     [13] macro expansion
      From worker 2:	│        @ ~/.julia/packages/Requires/7Ncym/src/require.jl:95 [inlined]
      From worker 2:	│     [14] __init__()
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/init.jl:44
      From worker 2:	│     [15] _include_from_serialized(path::String, depmods::Vector{Any})
      From worker 2:	│        @ Base ./loading.jl:696
      From worker 2:	│     [16] _require_search_from_serialized(pkg::Base.PkgId, sourcepath::String)
      From worker 2:	│        @ Base ./loading.jl:782
      From worker 2:	│     [17] _require(pkg::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:1020
      From worker 2:	│     [18] require(uuidkey::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:936
      From worker 2:	│     [19] (::Distributed.var"#1#2"{Base.PkgId})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/Distributed.jl:79
      From worker 2:	│     [20] (::Distributed.var"#103#104"{Distributed.CallMsg{:call}})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:274
      From worker 2:	│     [21] run_work_thunk(thunk::Distributed.var"#103#104"{Distributed.CallMsg{:call}}, print_error::Bool)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:63
      From worker 2:	│     [22] run_work_thunk(rv::Distributed.RemoteValue, thunk::Function)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:72
      From worker 2:	│     [23] (::Distributed.var"#96#98"{Distributed.RemoteValue, Distributed.var"#103#104"{Distributed.CallMsg{:call}}})()
      From worker 2:	│        @ Distributed ./task.jl:411
      From worker 2:	│    in expression starting at /home/users1/xorwndekda/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:36
      From worker 2:	└ @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:49
      From worker 2:	┌ Warning: Error requiring `HDF5` from `Plots`
      From worker 2:	│   exception =
      From worker 2:	│    LoadError: UndefVarError: Group not defined
      From worker 2:	│    Stacktrace:
      From worker 2:	│      [1] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:161
      From worker 2:	│      [2] include(mod::Module, _path::String)
      From worker 2:	│        @ Base ./Base.jl:386
      From worker 2:	│      [3] include(x::String)
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1
      From worker 2:	│      [4] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/init.jl:46
      From worker 2:	│      [5] eval
      From worker 2:	│        @ ./boot.jl:360 [inlined]
      From worker 2:	│      [6] eval
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1 [inlined]
      From worker 2:	│      [7] (::Plots.var"#285#321")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:99
      From worker 2:	│      [8] err(f::Any, listener::Module, modname::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:47
      From worker 2:	│      [9] (::Plots.var"#284#320")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:98
      From worker 2:	│     [10] withpath(f::Any, path::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:37
      From worker 2:	│     [11] (::Plots.var"#283#319")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:97
      From worker 2:	│     [12] listenpkg(f::Any, pkg::Base.PkgId)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:20
      From worker 2:	│     [13] macro expansion
      From worker 2:	│        @ ~/.julia/packages/Requires/7Ncym/src/require.jl:95 [inlined]
      From worker 2:	│     [14] __init__()
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/init.jl:44
      From worker 2:	│     [15] _include_from_serialized(path::String, depmods::Vector{Any})
      From worker 2:	│        @ Base ./loading.jl:696
      From worker 2:	│     [16] _require_search_from_serialized(pkg::Base.PkgId, sourcepath::String)
      From worker 2:	│        @ Base ./loading.jl:782
      From worker 2:	│     [17] _require(pkg::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:1020
      From worker 2:	│     [18] require(uuidkey::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:936
      From worker 2:	│     [19] (::Distributed.var"#1#2"{Base.PkgId})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/Distributed.jl:79
      From worker 2:	│     [20] (::Distributed.var"#103#104"{Distributed.CallMsg{:call}})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:274
      From worker 2:	│     [21] run_work_thunk(thunk::Distributed.var"#103#104"{Distributed.CallMsg{:call}}, print_error::Bool)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:63
      From worker 2:	│     [22] run_work_thunk(rv::Distributed.RemoteValue, thunk::Function)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:72
      From worker 2:	│     [23] (::Distributed.var"#96#98"{Distributed.RemoteValue, Distributed.var"#103#104"{Distributed.CallMsg{:call}}})()
      From worker 2:	│        @ Distributed ./task.jl:411
      From worker 2:	│    in expression starting at /home/users1/xorwndekda/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:36
      From worker 2:	└ @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:49
      From worker 2:	┌ Warning: Error requiring `HDF5` from `Plots`
      From worker 2:	│   exception =
      From worker 2:	│    LoadError: UndefVarError: Group not defined
      From worker 2:	│    Stacktrace:
      From worker 2:	│      [1] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:161
      From worker 2:	│      [2] include(mod::Module, _path::String)
      From worker 2:	│        @ Base ./Base.jl:386
      From worker 2:	│      [3] include(x::String)
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1
      From worker 2:	│      [4] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/init.jl:46
      From worker 2:	│      [5] eval
      From worker 2:	│        @ ./boot.jl:360 [inlined]
      From worker 2:	│      [6] eval
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1 [inlined]
      From worker 2:	│      [7] (::Plots.var"#285#321")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:99
      From worker 2:	│      [8] err(f::Any, listener::Module, modname::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:47
      From worker 2:	│      [9] (::Plots.var"#284#320")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:98
      From worker 2:	│     [10] withpath(f::Any, path::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:37
      From worker 2:	│     [11] (::Plots.var"#283#319")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:97
      From worker 2:	│     [12] listenpkg(f::Any, pkg::Base.PkgId)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:20
      From worker 2:	│     [13] macro expansion
      From worker 2:	│        @ ~/.julia/packages/Requires/7Ncym/src/require.jl:95 [inlined]
      From worker 2:	│     [14] __init__()
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/init.jl:44
      From worker 2:	│     [15] _include_from_serialized(path::String, depmods::Vector{Any})
      From worker 2:	│        @ Base ./loading.jl:696
      From worker 2:	│     [16] _require_search_from_serialized(pkg::Base.PkgId, sourcepath::String)
      From worker 2:	│        @ Base ./loading.jl:782
      From worker 2:	│     [17] _require(pkg::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:1020
      From worker 2:	│     [18] require(uuidkey::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:936
      From worker 2:	│     [19] (::Distributed.var"#1#2"{Base.PkgId})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/Distributed.jl:79
      From worker 2:	│     [20] (::Distributed.var"#103#104"{Distributed.CallMsg{:call}})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:274
      From worker 2:	│     [21] run_work_thunk(thunk::Distributed.var"#103#104"{Distributed.CallMsg{:call}}, print_error::Bool)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:63
      From worker 2:	│     [22] run_work_thunk(rv::Distributed.RemoteValue, thunk::Function)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:72
      From worker 2:	│     [23] (::Distributed.var"#96#98"{Distributed.RemoteValue, Distributed.var"#103#104"{Distributed.CallMsg{:call}}})()
      From worker 2:	│        @ Distributed ./task.jl:411
      From worker 2:	│    in expression starting at /home/users1/xorwndekda/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:36
      From worker 2:	└ @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:49
      From worker 2:	┌ Warning: Error requiring `HDF5` from `Plots`
      From worker 2:	│   exception =
      From worker 2:	│    LoadError: UndefVarError: Group not defined
      From worker 2:	│    Stacktrace:
      From worker 2:	│      [1] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:161
      From worker 2:	│      [2] include(mod::Module, _path::String)
      From worker 2:	│        @ Base ./Base.jl:386
      From worker 2:	│      [3] include(x::String)
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1
      From worker 2:	│      [4] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/init.jl:46
      From worker 2:	│      [5] eval
      From worker 2:	│        @ ./boot.jl:360 [inlined]
      From worker 2:	│      [6] eval
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1 [inlined]
      From worker 2:	│      [7] (::Plots.var"#285#321")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:99
      From worker 2:	│      [8] err(f::Any, listener::Module, modname::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:47
      From worker 2:	│      [9] (::Plots.var"#284#320")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:98
      From worker 2:	│     [10] withpath(f::Any, path::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:37
      From worker 2:	│     [11] (::Plots.var"#283#319")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:97
      From worker 2:	│     [12] listenpkg(f::Any, pkg::Base.PkgId)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:20
      From worker 2:	│     [13] macro expansion
      From worker 2:	│        @ ~/.julia/packages/Requires/7Ncym/src/require.jl:95 [inlined]
      From worker 2:	│     [14] __init__()
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/init.jl:44
      From worker 2:	│     [15] _include_from_serialized(path::String, depmods::Vector{Any})
      From worker 2:	│        @ Base ./loading.jl:696
      From worker 2:	│     [16] _require_search_from_serialized(pkg::Base.PkgId, sourcepath::String)
      From worker 2:	│        @ Base ./loading.jl:782
      From worker 2:	│     [17] _require(pkg::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:1020
      From worker 2:	│     [18] require(uuidkey::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:936
      From worker 2:	│     [19] (::Distributed.var"#1#2"{Base.PkgId})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/Distributed.jl:79
      From worker 2:	│     [20] (::Distributed.var"#103#104"{Distributed.CallMsg{:call}})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:274
      From worker 2:	│     [21] run_work_thunk(thunk::Distributed.var"#103#104"{Distributed.CallMsg{:call}}, print_error::Bool)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:63
      From worker 2:	│     [22] run_work_thunk(rv::Distributed.RemoteValue, thunk::Function)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:72
      From worker 2:	│     [23] (::Distributed.var"#96#98"{Distributed.RemoteValue, Distributed.var"#103#104"{Distributed.CallMsg{:call}}})()
      From worker 2:	│        @ Distributed ./task.jl:411
      From worker 2:	│    in expression starting at /home/users1/xorwndekda/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:36
      From worker 2:	└ @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:49
      From worker 2:	┌ Warning: Error requiring `HDF5` from `Plots`
      From worker 2:	│   exception =
      From worker 2:	│    LoadError: UndefVarError: Group not defined
      From worker 2:	│    Stacktrace:
      From worker 2:	│      [1] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:161
      From worker 2:	│      [2] include(mod::Module, _path::String)
      From worker 2:	│        @ Base ./Base.jl:386
      From worker 2:	│      [3] include(x::String)
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1
      From worker 2:	│      [4] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/init.jl:46
      From worker 2:	│      [5] eval
      From worker 2:	│        @ ./boot.jl:360 [inlined]
      From worker 2:	│      [6] eval
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1 [inlined]
      From worker 2:	│      [7] (::Plots.var"#285#321")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:99
      From worker 2:	│      [8] err(f::Any, listener::Module, modname::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:47
      From worker 2:	│      [9] (::Plots.var"#284#320")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:98
      From worker 2:	│     [10] withpath(f::Any, path::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:37
      From worker 2:	│     [11] (::Plots.var"#283#319")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:97
      From worker 2:	│     [12] listenpkg(f::Any, pkg::Base.PkgId)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:20
      From worker 2:	│     [13] macro expansion
      From worker 2:	│        @ ~/.julia/packages/Requires/7Ncym/src/require.jl:95 [inlined]
      From worker 2:	│     [14] __init__()
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/init.jl:44
      From worker 2:	│     [15] _include_from_serialized(path::String, depmods::Vector{Any})
      From worker 2:	│        @ Base ./loading.jl:696
      From worker 2:	│     [16] _require_search_from_serialized(pkg::Base.PkgId, sourcepath::String)
      From worker 2:	│        @ Base ./loading.jl:782
      From worker 2:	│     [17] _require(pkg::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:1020
      From worker 2:	│     [18] require(uuidkey::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:936
      From worker 2:	│     [19] (::Distributed.var"#1#2"{Base.PkgId})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/Distributed.jl:79
      From worker 2:	│     [20] (::Distributed.var"#103#104"{Distributed.CallMsg{:call}})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:274
      From worker 2:	│     [21] run_work_thunk(thunk::Distributed.var"#103#104"{Distributed.CallMsg{:call}}, print_error::Bool)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:63
      From worker 2:	│     [22] run_work_thunk(rv::Distributed.RemoteValue, thunk::Function)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:72
      From worker 2:	│     [23] (::Distributed.var"#96#98"{Distributed.RemoteValue, Distributed.var"#103#104"{Distributed.CallMsg{:call}}})()
      From worker 2:	│        @ Distributed ./task.jl:411
      From worker 2:	│    in expression starting at /home/users1/xorwndekda/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:36
      From worker 2:	└ @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:49
      From worker 2:	┌ Warning: Error requiring `HDF5` from `Plots`
      From worker 2:	│   exception =
      From worker 2:	│    LoadError: UndefVarError: Group not defined
      From worker 2:	│    Stacktrace:
      From worker 2:	│      [1] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:161
      From worker 2:	│      [2] include(mod::Module, _path::String)
      From worker 2:	│        @ Base ./Base.jl:386
      From worker 2:	│      [3] include(x::String)
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1
      From worker 2:	│      [4] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/init.jl:46
      From worker 2:	│      [5] eval
      From worker 2:	│        @ ./boot.jl:360 [inlined]
      From worker 2:	│      [6] eval
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1 [inlined]
      From worker 2:	│      [7] (::Plots.var"#285#321")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:99
      From worker 2:	│      [8] err(f::Any, listener::Module, modname::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:47
      From worker 2:	│      [9] (::Plots.var"#284#320")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:98
      From worker 2:	│     [10] withpath(f::Any, path::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:37
      From worker 2:	│     [11] (::Plots.var"#283#319")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:97
      From worker 2:	│     [12] listenpkg(f::Any, pkg::Base.PkgId)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:20
      From worker 2:	│     [13] macro expansion
      From worker 2:	│        @ ~/.julia/packages/Requires/7Ncym/src/require.jl:95 [inlined]
      From worker 2:	│     [14] __init__()
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/init.jl:44
      From worker 2:	│     [15] _include_from_serialized(path::String, depmods::Vector{Any})
      From worker 2:	│        @ Base ./loading.jl:696
      From worker 2:	│     [16] _require_search_from_serialized(pkg::Base.PkgId, sourcepath::String)
      From worker 2:	│        @ Base ./loading.jl:782
      From worker 2:	│     [17] _require(pkg::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:1020
      From worker 2:	│     [18] require(uuidkey::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:936
      From worker 2:	│     [19] (::Distributed.var"#1#2"{Base.PkgId})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/Distributed.jl:79
      From worker 2:	│     [20] (::Distributed.var"#103#104"{Distributed.CallMsg{:call}})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:274
      From worker 2:	│     [21] run_work_thunk(thunk::Distributed.var"#103#104"{Distributed.CallMsg{:call}}, print_error::Bool)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:63
      From worker 2:	│     [22] run_work_thunk(rv::Distributed.RemoteValue, thunk::Function)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:72
      From worker 2:	│     [23] (::Distributed.var"#96#98"{Distributed.RemoteValue, Distributed.var"#103#104"{Distributed.CallMsg{:call}}})()
      From worker 2:	│        @ Distributed ./task.jl:411
      From worker 2:	│    in expression starting at /home/users1/xorwndekda/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:36
      From worker 2:	└ @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:49
      From worker 2:	┌ Warning: Error requiring `HDF5` from `Plots`
      From worker 2:	│   exception =
      From worker 2:	│    LoadError: UndefVarError: Group not defined
      From worker 2:	│    Stacktrace:
      From worker 2:	│      [1] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:161
      From worker 2:	│      [2] include(mod::Module, _path::String)
      From worker 2:	│        @ Base ./Base.jl:386
      From worker 2:	│      [3] include(x::String)
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1
      From worker 2:	│      [4] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/init.jl:46
      From worker 2:	│      [5] eval
      From worker 2:	│        @ ./boot.jl:360 [inlined]
      From worker 2:	│      [6] eval
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1 [inlined]
      From worker 2:	│      [7] (::Plots.var"#285#321")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:99
      From worker 2:	│      [8] err(f::Any, listener::Module, modname::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:47
      From worker 2:	│      [9] (::Plots.var"#284#320")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:98
      From worker 2:	│     [10] withpath(f::Any, path::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:37
      From worker 2:	│     [11] (::Plots.var"#283#319")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:97
      From worker 2:	│     [12] listenpkg(f::Any, pkg::Base.PkgId)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:20
      From worker 2:	│     [13] macro expansion
      From worker 2:	│        @ ~/.julia/packages/Requires/7Ncym/src/require.jl:95 [inlined]
      From worker 2:	│     [14] __init__()
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/init.jl:44
      From worker 2:	│     [15] _include_from_serialized(path::String, depmods::Vector{Any})
      From worker 2:	│        @ Base ./loading.jl:696
      From worker 2:	│     [16] _require_search_from_serialized(pkg::Base.PkgId, sourcepath::String)
      From worker 2:	│        @ Base ./loading.jl:782
      From worker 2:	│     [17] _require(pkg::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:1020
      From worker 2:	│     [18] require(uuidkey::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:936
      From worker 2:	│     [19] (::Distributed.var"#1#2"{Base.PkgId})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/Distributed.jl:79
      From worker 2:	│     [20] (::Distributed.var"#103#104"{Distributed.CallMsg{:call}})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:274
      From worker 2:	│     [21] run_work_thunk(thunk::Distributed.var"#103#104"{Distributed.CallMsg{:call}}, print_error::Bool)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:63
      From worker 2:	│     [22] run_work_thunk(rv::Distributed.RemoteValue, thunk::Function)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:72
      From worker 2:	│     [23] (::Distributed.var"#96#98"{Distributed.RemoteValue, Distributed.var"#103#104"{Distributed.CallMsg{:call}}})()
      From worker 2:	│        @ Distributed ./task.jl:411
      From worker 2:	│    in expression starting at /home/users1/xorwndekda/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:36
      From worker 2:	└ @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:49
      From worker 2:	┌ Warning: Error requiring `HDF5` from `Plots`
      From worker 2:	│   exception =
      From worker 2:	│    LoadError: UndefVarError: Group not defined
      From worker 2:	│    Stacktrace:
      From worker 2:	│      [1] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:161
      From worker 2:	│      [2] include(mod::Module, _path::String)
      From worker 2:	│        @ Base ./Base.jl:386
      From worker 2:	│      [3] include(x::String)
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1
      From worker 2:	│      [4] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/init.jl:46
      From worker 2:	│      [5] eval
      From worker 2:	│        @ ./boot.jl:360 [inlined]
      From worker 2:	│      [6] eval
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1 [inlined]
      From worker 2:	│      [7] (::Plots.var"#285#321")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:99
      From worker 2:	│      [8] err(f::Any, listener::Module, modname::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:47
      From worker 2:	│      [9] (::Plots.var"#284#320")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:98
      From worker 2:	│     [10] withpath(f::Any, path::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:37
      From worker 2:	│     [11] (::Plots.var"#283#319")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:97
      From worker 2:	│     [12] listenpkg(f::Any, pkg::Base.PkgId)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:20
      From worker 2:	│     [13] macro expansion
      From worker 2:	│        @ ~/.julia/packages/Requires/7Ncym/src/require.jl:95 [inlined]
      From worker 2:	│     [14] __init__()
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/init.jl:44
      From worker 2:	│     [15] _include_from_serialized(path::String, depmods::Vector{Any})
      From worker 2:	│        @ Base ./loading.jl:696
      From worker 2:	│     [16] _require_search_from_serialized(pkg::Base.PkgId, sourcepath::String)
      From worker 2:	│        @ Base ./loading.jl:782
      From worker 2:	│     [17] _require(pkg::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:1020
      From worker 2:	│     [18] require(uuidkey::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:936
      From worker 2:	│     [19] (::Distributed.var"#1#2"{Base.PkgId})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/Distributed.jl:79
      From worker 2:	│     [20] (::Distributed.var"#103#104"{Distributed.CallMsg{:call}})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:274
      From worker 2:	│     [21] run_work_thunk(thunk::Distributed.var"#103#104"{Distributed.CallMsg{:call}}, print_error::Bool)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:63
      From worker 2:	│     [22] run_work_thunk(rv::Distributed.RemoteValue, thunk::Function)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:72
      From worker 2:	│     [23] (::Distributed.var"#96#98"{Distributed.RemoteValue, Distributed.var"#103#104"{Distributed.CallMsg{:call}}})()
      From worker 2:	│        @ Distributed ./task.jl:411
      From worker 2:	│    in expression starting at /home/users1/xorwndekda/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:36
      From worker 2:	└ @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:49
      From worker 2:	┌ Warning: Error requiring `HDF5` from `Plots`
      From worker 2:	│   exception =
      From worker 2:	│    LoadError: UndefVarError: Group not defined
      From worker 2:	│    Stacktrace:
      From worker 2:	│      [1] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:161
      From worker 2:	│      [2] include(mod::Module, _path::String)
      From worker 2:	│        @ Base ./Base.jl:386
      From worker 2:	│      [3] include(x::String)
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1
      From worker 2:	│      [4] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/init.jl:46
      From worker 2:	│      [5] eval
      From worker 2:	│        @ ./boot.jl:360 [inlined]
      From worker 2:	│      [6] eval
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1 [inlined]
      From worker 2:	│      [7] (::Plots.var"#285#321")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:99
      From worker 2:	│      [8] err(f::Any, listener::Module, modname::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:47
      From worker 2:	│      [9] (::Plots.var"#284#320")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:98
      From worker 2:	│     [10] withpath(f::Any, path::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:37
      From worker 2:	│     [11] (::Plots.var"#283#319")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:97
      From worker 2:	│     [12] listenpkg(f::Any, pkg::Base.PkgId)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:20
      From worker 2:	│     [13] macro expansion
      From worker 2:	│        @ ~/.julia/packages/Requires/7Ncym/src/require.jl:95 [inlined]
      From worker 2:	│     [14] __init__()
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/init.jl:44
      From worker 2:	│     [15] _include_from_serialized(path::String, depmods::Vector{Any})
      From worker 2:	│        @ Base ./loading.jl:696
      From worker 2:	│     [16] _require_search_from_serialized(pkg::Base.PkgId, sourcepath::String)
      From worker 2:	│        @ Base ./loading.jl:782
      From worker 2:	│     [17] _require(pkg::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:1020
      From worker 2:	│     [18] require(uuidkey::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:936
      From worker 2:	│     [19] (::Distributed.var"#1#2"{Base.PkgId})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/Distributed.jl:79
      From worker 2:	│     [20] (::Distributed.var"#103#104"{Distributed.CallMsg{:call}})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:274
      From worker 2:	│     [21] run_work_thunk(thunk::Distributed.var"#103#104"{Distributed.CallMsg{:call}}, print_error::Bool)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:63
      From worker 2:	│     [22] run_work_thunk(rv::Distributed.RemoteValue, thunk::Function)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:72
      From worker 2:	│     [23] (::Distributed.var"#96#98"{Distributed.RemoteValue, Distributed.var"#103#104"{Distributed.CallMsg{:call}}})()
      From worker 2:	│        @ Distributed ./task.jl:411
      From worker 2:	│    in expression starting at /home/users1/xorwndekda/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:36
      From worker 2:	└ @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:49
      From worker 2:	┌ Warning: Error requiring `HDF5` from `Plots`
      From worker 2:	│   exception =
      From worker 2:	│    LoadError: UndefVarError: Group not defined
      From worker 2:	│    Stacktrace:
      From worker 2:	│      [1] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:161
      From worker 2:	│      [2] include(mod::Module, _path::String)
      From worker 2:	│        @ Base ./Base.jl:386
      From worker 2:	│      [3] include(x::String)
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1
      From worker 2:	│      [4] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/init.jl:46
      From worker 2:	│      [5] eval
      From worker 2:	│        @ ./boot.jl:360 [inlined]
      From worker 2:	│      [6] eval
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1 [inlined]
      From worker 2:	│      [7] (::Plots.var"#285#321")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:99
      From worker 2:	│      [8] err(f::Any, listener::Module, modname::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:47
      From worker 2:	│      [9] (::Plots.var"#284#320")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:98
      From worker 2:	│     [10] withpath(f::Any, path::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:37
      From worker 2:	│     [11] (::Plots.var"#283#319")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:97
      From worker 2:	│     [12] listenpkg(f::Any, pkg::Base.PkgId)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:20
      From worker 2:	│     [13] macro expansion
      From worker 2:	│        @ ~/.julia/packages/Requires/7Ncym/src/require.jl:95 [inlined]
      From worker 2:	│     [14] __init__()
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/init.jl:44
      From worker 2:	│     [15] _include_from_serialized(path::String, depmods::Vector{Any})
      From worker 2:	│        @ Base ./loading.jl:696
      From worker 2:	│     [16] _require_search_from_serialized(pkg::Base.PkgId, sourcepath::String)
      From worker 2:	│        @ Base ./loading.jl:782
      From worker 2:	│     [17] _require(pkg::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:1020
      From worker 2:	│     [18] require(uuidkey::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:936
      From worker 2:	│     [19] (::Distributed.var"#1#2"{Base.PkgId})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/Distributed.jl:79
      From worker 2:	│     [20] (::Distributed.var"#103#104"{Distributed.CallMsg{:call}})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:274
      From worker 2:	│     [21] run_work_thunk(thunk::Distributed.var"#103#104"{Distributed.CallMsg{:call}}, print_error::Bool)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:63
      From worker 2:	│     [22] run_work_thunk(rv::Distributed.RemoteValue, thunk::Function)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:72
      From worker 2:	│     [23] (::Distributed.var"#96#98"{Distributed.RemoteValue, Distributed.var"#103#104"{Distributed.CallMsg{:call}}})()
      From worker 2:	│        @ Distributed ./task.jl:411
      From worker 2:	│    in expression starting at /home/users1/xorwndekda/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:36
      From worker 2:	└ @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:49
      From worker 2:	┌ Warning: Error requiring `HDF5` from `Plots`
      From worker 2:	│   exception =
      From worker 2:	│    LoadError: UndefVarError: Group not defined
      From worker 2:	│    Stacktrace:
      From worker 2:	│      [1] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:161
      From worker 2:	│      [2] include(mod::Module, _path::String)
      From worker 2:	│        @ Base ./Base.jl:386
      From worker 2:	│      [3] include(x::String)
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1
      From worker 2:	│      [4] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/init.jl:46
      From worker 2:	│      [5] eval
      From worker 2:	│        @ ./boot.jl:360 [inlined]
      From worker 2:	│      [6] eval
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1 [inlined]
      From worker 2:	│      [7] (::Plots.var"#285#321")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:99
      From worker 2:	│      [8] err(f::Any, listener::Module, modname::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:47
      From worker 2:	│      [9] (::Plots.var"#284#320")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:98
      From worker 2:	│     [10] withpath(f::Any, path::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:37
      From worker 2:	│     [11] (::Plots.var"#283#319")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:97
      From worker 2:	│     [12] listenpkg(f::Any, pkg::Base.PkgId)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:20
      From worker 2:	│     [13] macro expansion
      From worker 2:	│        @ ~/.julia/packages/Requires/7Ncym/src/require.jl:95 [inlined]
      From worker 2:	│     [14] __init__()
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/init.jl:44
      From worker 2:	│     [15] _include_from_serialized(path::String, depmods::Vector{Any})
      From worker 2:	│        @ Base ./loading.jl:696
      From worker 2:	│     [16] _require_search_from_serialized(pkg::Base.PkgId, sourcepath::String)
      From worker 2:	│        @ Base ./loading.jl:782
      From worker 2:	│     [17] _require(pkg::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:1020
      From worker 2:	│     [18] require(uuidkey::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:936
      From worker 2:	│     [19] (::Distributed.var"#1#2"{Base.PkgId})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/Distributed.jl:79
      From worker 2:	│     [20] (::Distributed.var"#103#104"{Distributed.CallMsg{:call}})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:274
      From worker 2:	│     [21] run_work_thunk(thunk::Distributed.var"#103#104"{Distributed.CallMsg{:call}}, print_error::Bool)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:63
      From worker 2:	│     [22] run_work_thunk(rv::Distributed.RemoteValue, thunk::Function)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:72
      From worker 2:	│     [23] (::Distributed.var"#96#98"{Distributed.RemoteValue, Distributed.var"#103#104"{Distributed.CallMsg{:call}}})()
      From worker 2:	│        @ Distributed ./task.jl:411
      From worker 2:	│    in expression starting at /home/users1/xorwndekda/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:36
      From worker 2:	└ @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:49
      From worker 2:	┌ Warning: Error requiring `HDF5` from `Plots`
      From worker 2:	│   exception =
      From worker 2:	│    LoadError: UndefVarError: Group not defined
      From worker 2:	│    Stacktrace:
      From worker 2:	│      [1] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:161
      From worker 2:	│      [2] include(mod::Module, _path::String)
      From worker 2:	│        @ Base ./Base.jl:386
      From worker 2:	│      [3] include(x::String)
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1
      From worker 2:	│      [4] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/init.jl:46
      From worker 2:	│      [5] eval
      From worker 2:	│        @ ./boot.jl:360 [inlined]
      From worker 2:	│      [6] eval
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1 [inlined]
      From worker 2:	│      [7] (::Plots.var"#285#321")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:99
      From worker 2:	│      [8] err(f::Any, listener::Module, modname::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:47
      From worker 2:	│      [9] (::Plots.var"#284#320")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:98
      From worker 2:	│     [10] withpath(f::Any, path::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:37
      From worker 2:	│     [11] (::Plots.var"#283#319")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:97
      From worker 2:	│     [12] listenpkg(f::Any, pkg::Base.PkgId)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:20
      From worker 2:	│     [13] macro expansion
      From worker 2:	│        @ ~/.julia/packages/Requires/7Ncym/src/require.jl:95 [inlined]
      From worker 2:	│     [14] __init__()
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/init.jl:44
      From worker 2:	│     [15] _include_from_serialized(path::String, depmods::Vector{Any})
      From worker 2:	│        @ Base ./loading.jl:696
      From worker 2:	│     [16] _require_search_from_serialized(pkg::Base.PkgId, sourcepath::String)
      From worker 2:	│        @ Base ./loading.jl:782
      From worker 2:	│     [17] _require(pkg::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:1020
      From worker 2:	│     [18] require(uuidkey::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:936
      From worker 2:	│     [19] (::Distributed.var"#1#2"{Base.PkgId})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/Distributed.jl:79
      From worker 2:	│     [20] (::Distributed.var"#103#104"{Distributed.CallMsg{:call}})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:274
      From worker 2:	│     [21] run_work_thunk(thunk::Distributed.var"#103#104"{Distributed.CallMsg{:call}}, print_error::Bool)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:63
      From worker 2:	│     [22] run_work_thunk(rv::Distributed.RemoteValue, thunk::Function)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:72
      From worker 2:	│     [23] (::Distributed.var"#96#98"{Distributed.RemoteValue, Distributed.var"#103#104"{Distributed.CallMsg{:call}}})()
      From worker 2:	│        @ Distributed ./task.jl:411
      From worker 2:	│    in expression starting at /home/users1/xorwndekda/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:36
      From worker 2:	└ @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:49
      From worker 2:	┌ Warning: Error requiring `HDF5` from `Plots`
      From worker 2:	│   exception =
      From worker 2:	│    LoadError: UndefVarError: Group not defined
      From worker 2:	│    Stacktrace:
      From worker 2:	│      [1] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:161
      From worker 2:	│      [2] include(mod::Module, _path::String)
      From worker 2:	│        @ Base ./Base.jl:386
      From worker 2:	│      [3] include(x::String)
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1
      From worker 2:	│      [4] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/init.jl:46
      From worker 2:	│      [5] eval
      From worker 2:	│        @ ./boot.jl:360 [inlined]
      From worker 2:	│      [6] eval
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1 [inlined]
      From worker 2:	│      [7] (::Plots.var"#285#321")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:99
      From worker 2:	│      [8] err(f::Any, listener::Module, modname::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:47
      From worker 2:	│      [9] (::Plots.var"#284#320")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:98
      From worker 2:	│     [10] withpath(f::Any, path::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:37
      From worker 2:	│     [11] (::Plots.var"#283#319")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:97
      From worker 2:	│     [12] listenpkg(f::Any, pkg::Base.PkgId)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:20
      From worker 2:	│     [13] macro expansion
      From worker 2:	│        @ ~/.julia/packages/Requires/7Ncym/src/require.jl:95 [inlined]
      From worker 2:	│     [14] __init__()
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/init.jl:44
      From worker 2:	│     [15] _include_from_serialized(path::String, depmods::Vector{Any})
      From worker 2:	│        @ Base ./loading.jl:696
      From worker 2:	│     [16] _require_search_from_serialized(pkg::Base.PkgId, sourcepath::String)
      From worker 2:	│        @ Base ./loading.jl:782
      From worker 2:	│     [17] _require(pkg::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:1020
      From worker 2:	│     [18] require(uuidkey::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:936
      From worker 2:	│     [19] (::Distributed.var"#1#2"{Base.PkgId})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/Distributed.jl:79
      From worker 2:	│     [20] (::Distributed.var"#103#104"{Distributed.CallMsg{:call}})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:274
      From worker 2:	│     [21] run_work_thunk(thunk::Distributed.var"#103#104"{Distributed.CallMsg{:call}}, print_error::Bool)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:63
      From worker 2:	│     [22] run_work_thunk(rv::Distributed.RemoteValue, thunk::Function)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:72
      From worker 2:	│     [23] (::Distributed.var"#96#98"{Distributed.RemoteValue, Distributed.var"#103#104"{Distributed.CallMsg{:call}}})()
      From worker 2:	│        @ Distributed ./task.jl:411
      From worker 2:	│    in expression starting at /home/users1/xorwndekda/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:36
      From worker 2:	└ @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:49
      From worker 2:	┌ Warning: Error requiring `HDF5` from `Plots`
      From worker 2:	│   exception =
      From worker 2:	│    LoadError: UndefVarError: Group not defined
      From worker 2:	│    Stacktrace:
      From worker 2:	│      [1] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:161
      From worker 2:	│      [2] include(mod::Module, _path::String)
      From worker 2:	│        @ Base ./Base.jl:386
      From worker 2:	│      [3] include(x::String)
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1
      From worker 2:	│      [4] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/init.jl:46
      From worker 2:	│      [5] eval
      From worker 2:	│        @ ./boot.jl:360 [inlined]
      From worker 2:	│      [6] eval
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1 [inlined]
      From worker 2:	│      [7] (::Plots.var"#285#321")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:99
      From worker 2:	│      [8] err(f::Any, listener::Module, modname::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:47
      From worker 2:	│      [9] (::Plots.var"#284#320")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:98
      From worker 2:	│     [10] withpath(f::Any, path::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:37
      From worker 2:	│     [11] (::Plots.var"#283#319")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:97
      From worker 2:	│     [12] listenpkg(f::Any, pkg::Base.PkgId)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:20
      From worker 2:	│     [13] macro expansion
      From worker 2:	│        @ ~/.julia/packages/Requires/7Ncym/src/require.jl:95 [inlined]
      From worker 2:	│     [14] __init__()
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/init.jl:44
      From worker 2:	│     [15] _include_from_serialized(path::String, depmods::Vector{Any})
      From worker 2:	│        @ Base ./loading.jl:696
      From worker 2:	│     [16] _require_search_from_serialized(pkg::Base.PkgId, sourcepath::String)
      From worker 2:	│        @ Base ./loading.jl:782
      From worker 2:	│     [17] _require(pkg::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:1020
      From worker 2:	│     [18] require(uuidkey::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:936
      From worker 2:	│     [19] (::Distributed.var"#1#2"{Base.PkgId})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/Distributed.jl:79
      From worker 2:	│     [20] (::Distributed.var"#103#104"{Distributed.CallMsg{:call}})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:274
      From worker 2:	│     [21] run_work_thunk(thunk::Distributed.var"#103#104"{Distributed.CallMsg{:call}}, print_error::Bool)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:63
      From worker 2:	│     [22] run_work_thunk(rv::Distributed.RemoteValue, thunk::Function)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:72
      From worker 2:	│     [23] (::Distributed.var"#96#98"{Distributed.RemoteValue, Distributed.var"#103#104"{Distributed.CallMsg{:call}}})()
      From worker 2:	│        @ Distributed ./task.jl:411
      From worker 2:	│    in expression starting at /home/users1/xorwndekda/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:36
      From worker 2:	└ @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:49
      From worker 2:	┌ Warning: Error requiring `HDF5` from `Plots`
      From worker 2:	│   exception =
      From worker 2:	│    LoadError: UndefVarError: Group not defined
      From worker 2:	│    Stacktrace:
      From worker 2:	│      [1] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:161
      From worker 2:	│      [2] include(mod::Module, _path::String)
      From worker 2:	│        @ Base ./Base.jl:386
      From worker 2:	│      [3] include(x::String)
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1
      From worker 2:	│      [4] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/init.jl:46
      From worker 2:	│      [5] eval
      From worker 2:	│        @ ./boot.jl:360 [inlined]
      From worker 2:	│      [6] eval
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1 [inlined]
      From worker 2:	│      [7] (::Plots.var"#285#321")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:99
      From worker 2:	│      [8] err(f::Any, listener::Module, modname::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:47
      From worker 2:	│      [9] (::Plots.var"#284#320")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:98
      From worker 2:	│     [10] withpath(f::Any, path::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:37
      From worker 2:	│     [11] (::Plots.var"#283#319")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:97
      From worker 2:	│     [12] listenpkg(f::Any, pkg::Base.PkgId)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:20
      From worker 2:	│     [13] macro expansion
      From worker 2:	│        @ ~/.julia/packages/Requires/7Ncym/src/require.jl:95 [inlined]
      From worker 2:	│     [14] __init__()
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/init.jl:44
      From worker 2:	│     [15] _include_from_serialized(path::String, depmods::Vector{Any})
      From worker 2:	│        @ Base ./loading.jl:696
      From worker 2:	│     [16] _require_search_from_serialized(pkg::Base.PkgId, sourcepath::String)
      From worker 2:	│        @ Base ./loading.jl:782
      From worker 2:	│     [17] _require(pkg::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:1020
      From worker 2:	│     [18] require(uuidkey::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:936
      From worker 2:	│     [19] (::Distributed.var"#1#2"{Base.PkgId})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/Distributed.jl:79
      From worker 2:	│     [20] (::Distributed.var"#103#104"{Distributed.CallMsg{:call}})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:274
      From worker 2:	│     [21] run_work_thunk(thunk::Distributed.var"#103#104"{Distributed.CallMsg{:call}}, print_error::Bool)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:63
      From worker 2:	│     [22] run_work_thunk(rv::Distributed.RemoteValue, thunk::Function)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:72
      From worker 2:	│     [23] (::Distributed.var"#96#98"{Distributed.RemoteValue, Distributed.var"#103#104"{Distributed.CallMsg{:call}}})()
      From worker 2:	│        @ Distributed ./task.jl:411
      From worker 2:	│    in expression starting at /home/users1/xorwndekda/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:36
      From worker 2:	└ @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:49
      From worker 2:	┌ Warning: Error requiring `HDF5` from `Plots`
      From worker 2:	│   exception =
      From worker 2:	│    LoadError: UndefVarError: Group not defined
      From worker 2:	│    Stacktrace:
      From worker 2:	│      [1] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:161
      From worker 2:	│      [2] include(mod::Module, _path::String)
      From worker 2:	│        @ Base ./Base.jl:386
      From worker 2:	│      [3] include(x::String)
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1
      From worker 2:	│      [4] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/init.jl:46
      From worker 2:	│      [5] eval
      From worker 2:	│        @ ./boot.jl:360 [inlined]
      From worker 2:	│      [6] eval
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1 [inlined]
      From worker 2:	│      [7] (::Plots.var"#285#321")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:99
      From worker 2:	│      [8] err(f::Any, listener::Module, modname::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:47
      From worker 2:	│      [9] (::Plots.var"#284#320")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:98
      From worker 2:	│     [10] withpath(f::Any, path::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:37
      From worker 2:	│     [11] (::Plots.var"#283#319")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:97
      From worker 2:	│     [12] listenpkg(f::Any, pkg::Base.PkgId)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:20
      From worker 2:	│     [13] macro expansion
      From worker 2:	│        @ ~/.julia/packages/Requires/7Ncym/src/require.jl:95 [inlined]
      From worker 2:	│     [14] __init__()
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/init.jl:44
      From worker 2:	│     [15] _include_from_serialized(path::String, depmods::Vector{Any})
      From worker 2:	│        @ Base ./loading.jl:696
      From worker 2:	│     [16] _require_search_from_serialized(pkg::Base.PkgId, sourcepath::String)
      From worker 2:	│        @ Base ./loading.jl:782
      From worker 2:	│     [17] _require(pkg::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:1020
      From worker 2:	│     [18] require(uuidkey::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:936
      From worker 2:	│     [19] (::Distributed.var"#1#2"{Base.PkgId})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/Distributed.jl:79
      From worker 2:	│     [20] (::Distributed.var"#103#104"{Distributed.CallMsg{:call}})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:274
      From worker 2:	│     [21] run_work_thunk(thunk::Distributed.var"#103#104"{Distributed.CallMsg{:call}}, print_error::Bool)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:63
      From worker 2:	│     [22] run_work_thunk(rv::Distributed.RemoteValue, thunk::Function)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:72
      From worker 2:	│     [23] (::Distributed.var"#96#98"{Distributed.RemoteValue, Distributed.var"#103#104"{Distributed.CallMsg{:call}}})()
      From worker 2:	│        @ Distributed ./task.jl:411
      From worker 2:	│    in expression starting at /home/users1/xorwndekda/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:36
      From worker 2:	└ @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:49
      From worker 2:	┌ Warning: Error requiring `HDF5` from `Plots`
      From worker 2:	│   exception =
      From worker 2:	│    LoadError: UndefVarError: Group not defined
      From worker 2:	│    Stacktrace:
      From worker 2:	│      [1] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:161
      From worker 2:	│      [2] include(mod::Module, _path::String)
      From worker 2:	│        @ Base ./Base.jl:386
      From worker 2:	│      [3] include(x::String)
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1
      From worker 2:	│      [4] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/init.jl:46
      From worker 2:	│      [5] eval
      From worker 2:	│        @ ./boot.jl:360 [inlined]
      From worker 2:	│      [6] eval
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1 [inlined]
      From worker 2:	│      [7] (::Plots.var"#285#321")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:99
      From worker 2:	│      [8] err(f::Any, listener::Module, modname::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:47
      From worker 2:	│      [9] (::Plots.var"#284#320")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:98
      From worker 2:	│     [10] withpath(f::Any, path::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:37
      From worker 2:	│     [11] (::Plots.var"#283#319")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:97
      From worker 2:	│     [12] listenpkg(f::Any, pkg::Base.PkgId)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:20
      From worker 2:	│     [13] macro expansion
      From worker 2:	│        @ ~/.julia/packages/Requires/7Ncym/src/require.jl:95 [inlined]
      From worker 2:	│     [14] __init__()
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/init.jl:44
      From worker 2:	│     [15] _include_from_serialized(path::String, depmods::Vector{Any})
      From worker 2:	│        @ Base ./loading.jl:696
      From worker 2:	│     [16] _require_search_from_serialized(pkg::Base.PkgId, sourcepath::String)
      From worker 2:	│        @ Base ./loading.jl:782
      From worker 2:	│     [17] _require(pkg::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:1020
      From worker 2:	│     [18] require(uuidkey::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:936
      From worker 2:	│     [19] (::Distributed.var"#1#2"{Base.PkgId})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/Distributed.jl:79
      From worker 2:	│     [20] (::Distributed.var"#103#104"{Distributed.CallMsg{:call}})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:274
      From worker 2:	│     [21] run_work_thunk(thunk::Distributed.var"#103#104"{Distributed.CallMsg{:call}}, print_error::Bool)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:63
      From worker 2:	│     [22] run_work_thunk(rv::Distributed.RemoteValue, thunk::Function)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:72
      From worker 2:	│     [23] (::Distributed.var"#96#98"{Distributed.RemoteValue, Distributed.var"#103#104"{Distributed.CallMsg{:call}}})()
      From worker 2:	│        @ Distributed ./task.jl:411
      From worker 2:	│    in expression starting at /home/users1/xorwndekda/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:36
      From worker 2:	└ @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:49
      From worker 2:	┌ Warning: Error requiring `HDF5` from `Plots`
      From worker 2:	│   exception =
      From worker 2:	│    LoadError: UndefVarError: Group not defined
      From worker 2:	│    Stacktrace:
      From worker 2:	│      [1] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:161
      From worker 2:	│      [2] include(mod::Module, _path::String)
      From worker 2:	│        @ Base ./Base.jl:386
      From worker 2:	│      [3] include(x::String)
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1
      From worker 2:	│      [4] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/init.jl:46
      From worker 2:	│      [5] eval
      From worker 2:	│        @ ./boot.jl:360 [inlined]
      From worker 2:	│      [6] eval
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1 [inlined]
      From worker 2:	│      [7] (::Plots.var"#285#321")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:99
      From worker 2:	│      [8] err(f::Any, listener::Module, modname::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:47
      From worker 2:	│      [9] (::Plots.var"#284#320")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:98
      From worker 2:	│     [10] withpath(f::Any, path::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:37
      From worker 2:	│     [11] (::Plots.var"#283#319")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:97
      From worker 2:	│     [12] listenpkg(f::Any, pkg::Base.PkgId)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:20
      From worker 2:	│     [13] macro expansion
      From worker 2:	│        @ ~/.julia/packages/Requires/7Ncym/src/require.jl:95 [inlined]
      From worker 2:	│     [14] __init__()
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/init.jl:44
      From worker 2:	│     [15] _include_from_serialized(path::String, depmods::Vector{Any})
      From worker 2:	│        @ Base ./loading.jl:696
      From worker 2:	│     [16] _require_search_from_serialized(pkg::Base.PkgId, sourcepath::String)
      From worker 2:	│        @ Base ./loading.jl:782
      From worker 2:	│     [17] _require(pkg::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:1020
      From worker 2:	│     [18] require(uuidkey::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:936
      From worker 2:	│     [19] (::Distributed.var"#1#2"{Base.PkgId})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/Distributed.jl:79
      From worker 2:	│     [20] (::Distributed.var"#103#104"{Distributed.CallMsg{:call}})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:274
      From worker 2:	│     [21] run_work_thunk(thunk::Distributed.var"#103#104"{Distributed.CallMsg{:call}}, print_error::Bool)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:63
      From worker 2:	│     [22] run_work_thunk(rv::Distributed.RemoteValue, thunk::Function)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:72
      From worker 2:	│     [23] (::Distributed.var"#96#98"{Distributed.RemoteValue, Distributed.var"#103#104"{Distributed.CallMsg{:call}}})()
      From worker 2:	│        @ Distributed ./task.jl:411
      From worker 2:	│    in expression starting at /home/users1/xorwndekda/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:36
      From worker 2:	└ @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:49
      From worker 2:	┌ Warning: Error requiring `HDF5` from `Plots`
      From worker 2:	│   exception =
      From worker 2:	│    LoadError: UndefVarError: Group not defined
      From worker 2:	│    Stacktrace:
      From worker 2:	│      [1] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:161
      From worker 2:	│      [2] include(mod::Module, _path::String)
      From worker 2:	│        @ Base ./Base.jl:386
      From worker 2:	│      [3] include(x::String)
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1
      From worker 2:	│      [4] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/init.jl:46
      From worker 2:	│      [5] eval
      From worker 2:	│        @ ./boot.jl:360 [inlined]
      From worker 2:	│      [6] eval
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1 [inlined]
      From worker 2:	│      [7] (::Plots.var"#285#321")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:99
      From worker 2:	│      [8] err(f::Any, listener::Module, modname::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:47
      From worker 2:	│      [9] (::Plots.var"#284#320")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:98
      From worker 2:	│     [10] withpath(f::Any, path::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:37
      From worker 2:	│     [11] (::Plots.var"#283#319")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:97
      From worker 2:	│     [12] listenpkg(f::Any, pkg::Base.PkgId)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:20
      From worker 2:	│     [13] macro expansion
      From worker 2:	│        @ ~/.julia/packages/Requires/7Ncym/src/require.jl:95 [inlined]
      From worker 2:	│     [14] __init__()
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/init.jl:44
      From worker 2:	│     [15] _include_from_serialized(path::String, depmods::Vector{Any})
      From worker 2:	│        @ Base ./loading.jl:696
      From worker 2:	│     [16] _require_search_from_serialized(pkg::Base.PkgId, sourcepath::String)
      From worker 2:	│        @ Base ./loading.jl:782
      From worker 2:	│     [17] _require(pkg::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:1020
      From worker 2:	│     [18] require(uuidkey::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:936
      From worker 2:	│     [19] (::Distributed.var"#1#2"{Base.PkgId})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/Distributed.jl:79
      From worker 2:	│     [20] (::Distributed.var"#103#104"{Distributed.CallMsg{:call}})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:274
      From worker 2:	│     [21] run_work_thunk(thunk::Distributed.var"#103#104"{Distributed.CallMsg{:call}}, print_error::Bool)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:63
      From worker 2:	│     [22] run_work_thunk(rv::Distributed.RemoteValue, thunk::Function)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:72
      From worker 2:	│     [23] (::Distributed.var"#96#98"{Distributed.RemoteValue, Distributed.var"#103#104"{Distributed.CallMsg{:call}}})()
      From worker 2:	│        @ Distributed ./task.jl:411
      From worker 2:	│    in expression starting at /home/users1/xorwndekda/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:36
      From worker 2:	└ @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:49
      From worker 2:	┌ Warning: Error requiring `HDF5` from `Plots`
      From worker 2:	│   exception =
      From worker 2:	│    LoadError: UndefVarError: Group not defined
      From worker 2:	│    Stacktrace:
      From worker 2:	│      [1] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:161
      From worker 2:	│      [2] include(mod::Module, _path::String)
      From worker 2:	│        @ Base ./Base.jl:386
      From worker 2:	│      [3] include(x::String)
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1
      From worker 2:	│      [4] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/init.jl:46
      From worker 2:	│      [5] eval
      From worker 2:	│        @ ./boot.jl:360 [inlined]
      From worker 2:	│      [6] eval
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1 [inlined]
      From worker 2:	│      [7] (::Plots.var"#285#321")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:99
      From worker 2:	│      [8] err(f::Any, listener::Module, modname::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:47
      From worker 2:	│      [9] (::Plots.var"#284#320")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:98
      From worker 2:	│     [10] withpath(f::Any, path::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:37
      From worker 2:	│     [11] (::Plots.var"#283#319")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:97
      From worker 2:	│     [12] listenpkg(f::Any, pkg::Base.PkgId)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:20
      From worker 2:	│     [13] macro expansion
      From worker 2:	│        @ ~/.julia/packages/Requires/7Ncym/src/require.jl:95 [inlined]
      From worker 2:	│     [14] __init__()
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/init.jl:44
      From worker 2:	│     [15] _include_from_serialized(path::String, depmods::Vector{Any})
      From worker 2:	│        @ Base ./loading.jl:696
      From worker 2:	│     [16] _require_search_from_serialized(pkg::Base.PkgId, sourcepath::String)
      From worker 2:	│        @ Base ./loading.jl:782
      From worker 2:	│     [17] _require(pkg::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:1020
      From worker 2:	│     [18] require(uuidkey::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:936
      From worker 2:	│     [19] (::Distributed.var"#1#2"{Base.PkgId})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/Distributed.jl:79
      From worker 2:	│     [20] (::Distributed.var"#103#104"{Distributed.CallMsg{:call}})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:274
      From worker 2:	│     [21] run_work_thunk(thunk::Distributed.var"#103#104"{Distributed.CallMsg{:call}}, print_error::Bool)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:63
      From worker 2:	│     [22] run_work_thunk(rv::Distributed.RemoteValue, thunk::Function)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:72
      From worker 2:	│     [23] (::Distributed.var"#96#98"{Distributed.RemoteValue, Distributed.var"#103#104"{Distributed.CallMsg{:call}}})()
      From worker 2:	│        @ Distributed ./task.jl:411
      From worker 2:	│    in expression starting at /home/users1/xorwndekda/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:36
      From worker 2:	└ @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:49
      From worker 2:	┌ Warning: Error requiring `HDF5` from `Plots`
      From worker 2:	│   exception =
      From worker 2:	│    LoadError: UndefVarError: Group not defined
      From worker 2:	│    Stacktrace:
      From worker 2:	│      [1] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:161
      From worker 2:	│      [2] include(mod::Module, _path::String)
      From worker 2:	│        @ Base ./Base.jl:386
      From worker 2:	│      [3] include(x::String)
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1
      From worker 2:	│      [4] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/init.jl:46
      From worker 2:	│      [5] eval
      From worker 2:	│        @ ./boot.jl:360 [inlined]
      From worker 2:	│      [6] eval
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1 [inlined]
      From worker 2:	│      [7] (::Plots.var"#285#321")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:99
      From worker 2:	│      [8] err(f::Any, listener::Module, modname::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:47
      From worker 2:	│      [9] (::Plots.var"#284#320")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:98
      From worker 2:	│     [10] withpath(f::Any, path::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:37
      From worker 2:	│     [11] (::Plots.var"#283#319")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:97
      From worker 2:	│     [12] listenpkg(f::Any, pkg::Base.PkgId)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:20
      From worker 2:	│     [13] macro expansion
      From worker 2:	│        @ ~/.julia/packages/Requires/7Ncym/src/require.jl:95 [inlined]
      From worker 2:	│     [14] __init__()
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/init.jl:44
      From worker 2:	│     [15] _include_from_serialized(path::String, depmods::Vector{Any})
      From worker 2:	│        @ Base ./loading.jl:696
      From worker 2:	│     [16] _require_search_from_serialized(pkg::Base.PkgId, sourcepath::String)
      From worker 2:	│        @ Base ./loading.jl:782
      From worker 2:	│     [17] _require(pkg::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:1020
      From worker 2:	│     [18] require(uuidkey::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:936
      From worker 2:	│     [19] (::Distributed.var"#1#2"{Base.PkgId})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/Distributed.jl:79
      From worker 2:	│     [20] (::Distributed.var"#103#104"{Distributed.CallMsg{:call}})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:274
      From worker 2:	│     [21] run_work_thunk(thunk::Distributed.var"#103#104"{Distributed.CallMsg{:call}}, print_error::Bool)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:63
      From worker 2:	│     [22] run_work_thunk(rv::Distributed.RemoteValue, thunk::Function)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:72
      From worker 2:	│     [23] (::Distributed.var"#96#98"{Distributed.RemoteValue, Distributed.var"#103#104"{Distributed.CallMsg{:call}}})()
      From worker 2:	│        @ Distributed ./task.jl:411
      From worker 2:	│    in expression starting at /home/users1/xorwndekda/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:36
      From worker 2:	└ @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:49
      From worker 2:	┌ Warning: Error requiring `HDF5` from `Plots`
      From worker 2:	│   exception =
      From worker 2:	│    LoadError: UndefVarError: Group not defined
      From worker 2:	│    Stacktrace:
      From worker 2:	│      [1] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:161
      From worker 2:	│      [2] include(mod::Module, _path::String)
      From worker 2:	│        @ Base ./Base.jl:386
      From worker 2:	│      [3] include(x::String)
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1
      From worker 2:	│      [4] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/init.jl:46
      From worker 2:	│      [5] eval
      From worker 2:	│        @ ./boot.jl:360 [inlined]
      From worker 2:	│      [6] eval
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1 [inlined]
      From worker 2:	│      [7] (::Plots.var"#285#321")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:99
      From worker 2:	│      [8] err(f::Any, listener::Module, modname::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:47
      From worker 2:	│      [9] (::Plots.var"#284#320")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:98
      From worker 2:	│     [10] withpath(f::Any, path::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:37
      From worker 2:	│     [11] (::Plots.var"#283#319")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:97
      From worker 2:	│     [12] listenpkg(f::Any, pkg::Base.PkgId)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:20
      From worker 2:	│     [13] macro expansion
      From worker 2:	│        @ ~/.julia/packages/Requires/7Ncym/src/require.jl:95 [inlined]
      From worker 2:	│     [14] __init__()
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/init.jl:44
      From worker 2:	│     [15] _include_from_serialized(path::String, depmods::Vector{Any})
      From worker 2:	│        @ Base ./loading.jl:696
      From worker 2:	│     [16] _require_search_from_serialized(pkg::Base.PkgId, sourcepath::String)
      From worker 2:	│        @ Base ./loading.jl:782
      From worker 2:	│     [17] _require(pkg::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:1020
      From worker 2:	│     [18] require(uuidkey::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:936
      From worker 2:	│     [19] (::Distributed.var"#1#2"{Base.PkgId})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/Distributed.jl:79
      From worker 2:	│     [20] (::Distributed.var"#103#104"{Distributed.CallMsg{:call}})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:274
      From worker 2:	│     [21] run_work_thunk(thunk::Distributed.var"#103#104"{Distributed.CallMsg{:call}}, print_error::Bool)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:63
      From worker 2:	│     [22] run_work_thunk(rv::Distributed.RemoteValue, thunk::Function)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:72
      From worker 2:	│     [23] (::Distributed.var"#96#98"{Distributed.RemoteValue, Distributed.var"#103#104"{Distributed.CallMsg{:call}}})()
      From worker 2:	│        @ Distributed ./task.jl:411
      From worker 2:	│    in expression starting at /home/users1/xorwndekda/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:36
      From worker 2:	└ @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:49
      From worker 2:	┌ Warning: Error requiring `HDF5` from `Plots`
      From worker 2:	│   exception =
      From worker 2:	│    LoadError: UndefVarError: Group not defined
      From worker 2:	│    Stacktrace:
      From worker 2:	│      [1] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:161
      From worker 2:	│      [2] include(mod::Module, _path::String)
      From worker 2:	│        @ Base ./Base.jl:386
      From worker 2:	│      [3] include(x::String)
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1
      From worker 2:	│      [4] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/init.jl:46
      From worker 2:	│      [5] eval
      From worker 2:	│        @ ./boot.jl:360 [inlined]
      From worker 2:	│      [6] eval
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1 [inlined]
      From worker 2:	│      [7] (::Plots.var"#285#321")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:99
      From worker 2:	│      [8] err(f::Any, listener::Module, modname::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:47
      From worker 2:	│      [9] (::Plots.var"#284#320")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:98
      From worker 2:	│     [10] withpath(f::Any, path::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:37
      From worker 2:	│     [11] (::Plots.var"#283#319")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:97
      From worker 2:	│     [12] listenpkg(f::Any, pkg::Base.PkgId)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:20
      From worker 2:	│     [13] macro expansion
      From worker 2:	│        @ ~/.julia/packages/Requires/7Ncym/src/require.jl:95 [inlined]
      From worker 2:	│     [14] __init__()
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/init.jl:44
      From worker 2:	│     [15] _include_from_serialized(path::String, depmods::Vector{Any})
      From worker 2:	│        @ Base ./loading.jl:696
      From worker 2:	│     [16] _require_search_from_serialized(pkg::Base.PkgId, sourcepath::String)
      From worker 2:	│        @ Base ./loading.jl:782
      From worker 2:	│     [17] _require(pkg::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:1020
      From worker 2:	│     [18] require(uuidkey::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:936
      From worker 2:	│     [19] (::Distributed.var"#1#2"{Base.PkgId})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/Distributed.jl:79
      From worker 2:	│     [20] (::Distributed.var"#103#104"{Distributed.CallMsg{:call}})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:274
      From worker 2:	│     [21] run_work_thunk(thunk::Distributed.var"#103#104"{Distributed.CallMsg{:call}}, print_error::Bool)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:63
      From worker 2:	│     [22] run_work_thunk(rv::Distributed.RemoteValue, thunk::Function)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:72
      From worker 2:	│     [23] (::Distributed.var"#96#98"{Distributed.RemoteValue, Distributed.var"#103#104"{Distributed.CallMsg{:call}}})()
      From worker 2:	│        @ Distributed ./task.jl:411
      From worker 2:	│    in expression starting at /home/users1/xorwndekda/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:36
      From worker 2:	└ @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:49
      From worker 2:	┌ Warning: Error requiring `HDF5` from `Plots`
      From worker 2:	│   exception =
      From worker 2:	│    LoadError: UndefVarError: Group not defined
      From worker 2:	│    Stacktrace:
      From worker 2:	│      [1] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:161
      From worker 2:	│      [2] include(mod::Module, _path::String)
      From worker 2:	│        @ Base ./Base.jl:386
      From worker 2:	│      [3] include(x::String)
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1
      From worker 2:	│      [4] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/init.jl:46
      From worker 2:	│      [5] eval
      From worker 2:	│        @ ./boot.jl:360 [inlined]
      From worker 2:	│      [6] eval
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1 [inlined]
      From worker 2:	│      [7] (::Plots.var"#285#321")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:99
      From worker 2:	│      [8] err(f::Any, listener::Module, modname::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:47
      From worker 2:	│      [9] (::Plots.var"#284#320")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:98
      From worker 2:	│     [10] withpath(f::Any, path::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:37
      From worker 2:	│     [11] (::Plots.var"#283#319")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:97
      From worker 2:	│     [12] listenpkg(f::Any, pkg::Base.PkgId)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:20
      From worker 2:	│     [13] macro expansion
      From worker 2:	│        @ ~/.julia/packages/Requires/7Ncym/src/require.jl:95 [inlined]
      From worker 2:	│     [14] __init__()
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/init.jl:44
      From worker 2:	│     [15] _include_from_serialized(path::String, depmods::Vector{Any})
      From worker 2:	│        @ Base ./loading.jl:696
      From worker 2:	│     [16] _require_search_from_serialized(pkg::Base.PkgId, sourcepath::String)
      From worker 2:	│        @ Base ./loading.jl:782
      From worker 2:	│     [17] _require(pkg::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:1020
      From worker 2:	│     [18] require(uuidkey::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:936
      From worker 2:	│     [19] (::Distributed.var"#1#2"{Base.PkgId})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/Distributed.jl:79
      From worker 2:	│     [20] (::Distributed.var"#103#104"{Distributed.CallMsg{:call}})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:274
      From worker 2:	│     [21] run_work_thunk(thunk::Distributed.var"#103#104"{Distributed.CallMsg{:call}}, print_error::Bool)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:63
      From worker 2:	│     [22] run_work_thunk(rv::Distributed.RemoteValue, thunk::Function)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:72
      From worker 2:	│     [23] (::Distributed.var"#96#98"{Distributed.RemoteValue, Distributed.var"#103#104"{Distributed.CallMsg{:call}}})()
      From worker 2:	│        @ Distributed ./task.jl:411
      From worker 2:	│    in expression starting at /home/users1/xorwndekda/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:36
      From worker 2:	└ @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:49
      From worker 2:	┌ Warning: Error requiring `HDF5` from `Plots`
      From worker 2:	│   exception =
      From worker 2:	│    LoadError: UndefVarError: Group not defined
      From worker 2:	│    Stacktrace:
      From worker 2:	│      [1] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:161
      From worker 2:	│      [2] include(mod::Module, _path::String)
      From worker 2:	│        @ Base ./Base.jl:386
      From worker 2:	│      [3] include(x::String)
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1
      From worker 2:	│      [4] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/init.jl:46
      From worker 2:	│      [5] eval
      From worker 2:	│        @ ./boot.jl:360 [inlined]
      From worker 2:	│      [6] eval
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1 [inlined]
      From worker 2:	│      [7] (::Plots.var"#285#321")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:99
      From worker 2:	│      [8] err(f::Any, listener::Module, modname::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:47
      From worker 2:	│      [9] (::Plots.var"#284#320")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:98
      From worker 2:	│     [10] withpath(f::Any, path::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:37
      From worker 2:	│     [11] (::Plots.var"#283#319")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:97
      From worker 2:	│     [12] listenpkg(f::Any, pkg::Base.PkgId)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:20
      From worker 2:	│     [13] macro expansion
      From worker 2:	│        @ ~/.julia/packages/Requires/7Ncym/src/require.jl:95 [inlined]
      From worker 2:	│     [14] __init__()
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/init.jl:44
      From worker 2:	│     [15] _include_from_serialized(path::String, depmods::Vector{Any})
      From worker 2:	│        @ Base ./loading.jl:696
      From worker 2:	│     [16] _require_search_from_serialized(pkg::Base.PkgId, sourcepath::String)
      From worker 2:	│        @ Base ./loading.jl:782
      From worker 2:	│     [17] _require(pkg::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:1020
      From worker 2:	│     [18] require(uuidkey::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:936
      From worker 2:	│     [19] (::Distributed.var"#1#2"{Base.PkgId})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/Distributed.jl:79
      From worker 2:	│     [20] (::Distributed.var"#103#104"{Distributed.CallMsg{:call}})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:274
      From worker 2:	│     [21] run_work_thunk(thunk::Distributed.var"#103#104"{Distributed.CallMsg{:call}}, print_error::Bool)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:63
      From worker 2:	│     [22] run_work_thunk(rv::Distributed.RemoteValue, thunk::Function)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:72
      From worker 2:	│     [23] (::Distributed.var"#96#98"{Distributed.RemoteValue, Distributed.var"#103#104"{Distributed.CallMsg{:call}}})()
      From worker 2:	│        @ Distributed ./task.jl:411
      From worker 2:	│    in expression starting at /home/users1/xorwndekda/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:36
      From worker 2:	└ @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:49
 JX_VERSION: 0.9.3-pub+20190529
 Visit https://kaist-elst.github.io/DFTforge.jl/ for details & updates 
 Tested with Julia v1.0 and v1.1 which the most recent version of Julia in 201906 https://julialang.org/
 TOML file: nio_J_wannier.toml
/home/users1/xorwndekda/com/codepaper/examples/reasonable_set2/NiO_AFM/SCF_DMFT/wannier_hr.dat
/home/users1/xorwndekda/com/codepaper/examples/reasonable_set2/NiO_AFM/SCF_DMFT/wannier.win
/home/users1/xorwndekda/com/codepaper/examples/reasonable_set2/NiO_AFM/SCF_DMFT/wannier_hr.dat
/home/users1/xorwndekda/com/codepaper/examples/reasonable_set2/NiO_AFM/SCF_DMFT/wannier.win
Dict("result_file_up" => "/home/users1/xorwndekda/com/codepaper/examples/reasonable_set2/NiO_AFM/SCF_DMFT/wannier", "result_file_down" => "/home/users1/xorwndekda/com/codepaper/examples/reasonable_set2/NiO_AFM/SCF_DMFT/wannier")
DFTforge.DFTcommon.Wannier_OptionalInfo(4, [0.25 0.25 0.25; 0.75 0.75 0.75; 0.5 0.5 0.5; 0.0 0.0 0.0], Array{Int64, N} where N[[1, 2, 3, 4, 5, 6, 7, 8, 9], [10, 11, 12, 13, 14, 15, 16, 17, 18], [19, 20, 21, 22], [23, 24, 25, 26]])
Union{Vector{Float64}, Vector{String}}[[0.0, 0.0, 0.0], [0.5, 0.0, 0.0], ["G", "M"]]
Union{Vector{Float64}, Vector{String}}[[0.5, 0.0, 0.0], [0.33333333, 0.33333333, 0.0], ["M", "K"]]
Union{Vector{Float64}, Vector{String}}[[0.33333333, 0.33333333, 0.0], [0.0, 0.0, 0.0], ["K", "G"]]
Union{Vector{Float64}, Vector{String}}[[0.0, 0.0, 0.0], [0.0, 0.0, 0.5], ["G", "A"]]
Union{Vector{Float64}, Vector{String}}[[0.0, 0.0, 0.5], [0.5, 0.0, 0.5], ["A", "L"]]
Union{Vector{Float64}, Vector{String}}[[0.5, 0.0, 0.5], [0.33333333, 0.33333333, 0.5], ["L", "H"]]
Union{Vector{Float64}, Vector{String}}[[0.33333333, 0.33333333, 0.5], [0.0, 0.0, 0.5], ["H", "A"]]
Union{Vector{Float64}, Vector{String}}[[0.0, 0.0, 0.5], [0.5, 0.0, 0.5], ["A", "L"]]
Union{Vector{Float64}, Vector{String}}[[0.5, 0.0, 0.5], [0.5, 0.0, 0.0], ["L", "M"]]
Union{Vector{Float64}, Vector{String}}[[0.5, 0.0, 0.0], [0.33333333, 0.33333333, 0.0], ["M", "K"]]
Union{Vector{Float64}, Vector{String}}[[0.33333333, 0.33333333, 0.0], [0.33333333, 0.33333333, 0.5], ["K", "H"]]
 result file is not found result_file_up	/home/users1/xorwndekda/com/codepaper/examples/reasonable_set2/NiO_AFM/SCF_DMFT/wannier
 result file is not found result_file_down	/home/users1/xorwndekda/com/codepaper/examples/reasonable_set2/NiO_AFM/SCF_DMFT/wannier
Array{Int64, N} where N[[]] AbstractString["all"]
Array{Int64, N} where N[[]] AbstractString["all"]
Array{Int64, N} where N[[]] AbstractString["all"]
Array{Int64, N} where N[[]] AbstractString["all"]
================================================================
energy windows
energywindow_all_list: Vector{Float64}[]
energywindow_1_list: Vector{Float64}[]
energywindow_2_list: Vector{Float64}[]
energywindow_3_list: Vector{Float64}[]
energywindow_4_list: Vector{Float64}[]
================================================================
atom12_list: [(1, 1), (1, 2)]
q_point_num [10, 10, 10]	k_point_num [10, 10, 10]
DFT_type Wannier90
orbital_selection_option nomask
mask1list Array{Int64, N} where N[[]]	mask2list Array{Int64, N} where N[[]]
basisTransformbasisTransform_rule_type(false, Dict{Int64, orbital_rot_type}(), false, Dict{Int64, orbital_downfold_type}(), true, true, Vector{Any}[], custom_transfrom_type[])
jx.col.dmft.spin.wannier_0.0/wannier.hdf5
================================================================
set_current_dftdataset:3
/home/users1/xorwndekda/com/codepaper/examples/reasonable_set2/NiO_AFM/SCF_DMFT/wannier.win
fermi_energy = 0.0
/home/users1/xorwndekda/com/codepaper/examples/reasonable_set2/NiO_AFM/SCF_DMFT/wannier.win
fermi_energy = 0.0
 basisTransform_init 
 atomnum_eff 4 orbitalNums_eff [9, 9, 4, 4]
 orbitalStartIdx_list [0, 9, 18, 22]
      From worker 2:	set_current_dftdataset:5
      From worker 48:	set_current_dftdataset:5
      From worker 51:	set_current_dftdataset:5
      From worker 46:	set_current_dftdataset:5
      From worker 17:	set_current_dftdataset:5
      From worker 41:	set_current_dftdataset:5
      From worker 5:	set_current_dftdataset:5
      From worker 30:	set_current_dftdataset:5
      From worker 22:	set_current_dftdataset:5
      From worker 40:	set_current_dftdataset:5
      From worker 3:	set_current_dftdataset:5
      From worker 37:	set_current_dftdataset:5
      From worker 7:	set_current_dftdataset:5
      From worker 33:	set_current_dftdataset:5
      From worker 4:	set_current_dftdataset:5
      From worker 36:	set_current_dftdataset:5
      From worker 42:	set_current_dftdataset:5
      From worker 6:	set_current_dftdataset:5
      From worker 57:	set_current_dftdataset:5
      From worker 18:	set_current_dftdataset:5
      From worker 53:	set_current_dftdataset:5
      From worker 50:	set_current_dftdataset:5
      From worker 56:	set_current_dftdataset:5
      From worker 9:	set_current_dftdataset:5
      From worker 11:	set_current_dftdataset:5
      From worker 45:	set_current_dftdataset:5
      From worker 14:	set_current_dftdataset:5
      From worker 23:	set_current_dftdataset:5
      From worker 8:	set_current_dftdataset:5
      From worker 34:	set_current_dftdataset:5
      From worker 29:	set_current_dftdataset:5
      From worker 32:	set_current_dftdataset:5
      From worker 49:	set_current_dftdataset:5
      From worker 13:	set_current_dftdataset:5
      From worker 12:	set_current_dftdataset:5
      From worker 55:	set_current_dftdataset:5
      From worker 54:	set_current_dftdataset:5
      From worker 19:	set_current_dftdataset:5
      From worker 43:	set_current_dftdataset:5
      From worker 24:	set_current_dftdataset:5
      From worker 28:	set_current_dftdataset:5
      From worker 35:	set_current_dftdataset:5
      From worker 15:	set_current_dftdataset:5
      From worker 47:	set_current_dftdataset:5
      From worker 39:	set_current_dftdataset:5
      From worker 16:	set_current_dftdataset:5
      From worker 20:	set_current_dftdataset:5
      From worker 10:	set_current_dftdataset:5
      From worker 52:	set_current_dftdataset:5
      From worker 25:	set_current_dftdataset:5
      From worker 44:	set_current_dftdataset:5
      From worker 27:	set_current_dftdataset:5
      From worker 31:	set_current_dftdataset:5
      From worker 26:	set_current_dftdataset:5
      From worker 21:	set_current_dftdataset:5
      From worker 38:	set_current_dftdataset:5
Any[] String[] DMFT :true, Jx :false
┌ Warning: Assignment to `DMFT_loop` in soft scope is ambiguous because a global variable by the same name exists: `DMFT_loop` will be treated as a new local. Disambiguate by using `local DMFT_loop` to suppress this warning or `global DMFT_loop` to assign to the existing global variable.
└ @ ~/com/codepaper/examples/reasonable_set2/NiO_AFM/SCF_DMFT/Jx_DMFT.jl:5221
┌ Warning: Assignment to `SelfE_w_new` in soft scope is ambiguous because a global variable by the same name exists: `SelfE_w_new` will be treated as a new local. Disambiguate by using `local SelfE_w_new` to suppress this warning or `global SelfE_w_new` to assign to the existing global variable.
└ @ ~/com/codepaper/examples/reasonable_set2/NiO_AFM/SCF_DMFT/Jx_DMFT.jl:5229
┌ Warning: Assignment to `imp_totN` in soft scope is ambiguous because a global variable by the same name exists: `imp_totN` will be treated as a new local. Disambiguate by using `local imp_totN` to suppress this warning or `global imp_totN` to assign to the existing global variable.
└ @ ~/com/codepaper/examples/reasonable_set2/NiO_AFM/SCF_DMFT/Jx_DMFT.jl:5268
┌ Warning: Assignment to `imp_dc` in soft scope is ambiguous because a global variable by the same name exists: `imp_dc` will be treated as a new local. Disambiguate by using `local imp_dc` to suppress this warning or `global imp_dc` to assign to the existing global variable.
└ @ ~/com/codepaper/examples/reasonable_set2/NiO_AFM/SCF_DMFT/Jx_DMFT.jl:5269
┌ Warning: Assignment to `init_mu` in soft scope is ambiguous because a global variable by the same name exists: `init_mu` will be treated as a new local. Disambiguate by using `local init_mu` to suppress this warning or `global init_mu` to assign to the existing global variable.
└ @ ~/com/codepaper/examples/reasonable_set2/NiO_AFM/SCF_DMFT/Jx_DMFT.jl:5284
┌ Warning: Assignment to `mu` in soft scope is ambiguous because a global variable by the same name exists: `mu` will be treated as a new local. Disambiguate by using `local mu` to suppress this warning or `global mu` to assign to the existing global variable.
└ @ ~/com/codepaper/examples/reasonable_set2/NiO_AFM/SCF_DMFT/Jx_DMFT.jl:5287
┌ Warning: Assignment to `Occup` in soft scope is ambiguous because a global variable by the same name exists: `Occup` will be treated as a new local. Disambiguate by using `local Occup` to suppress this warning or `global Occup` to assign to the existing global variable.
└ @ ~/com/codepaper/examples/reasonable_set2/NiO_AFM/SCF_DMFT/Jx_DMFT.jl:5287
┌ Warning: Assignment to `H_loc` in soft scope is ambiguous because a global variable by the same name exists: `H_loc` will be treated as a new local. Disambiguate by using `local H_loc` to suppress this warning or `global H_loc` to assign to the existing global variable.
└ @ ~/com/codepaper/examples/reasonable_set2/NiO_AFM/SCF_DMFT/Jx_DMFT.jl:5287
┌ Warning: Assignment to `G_loc_iWn` in soft scope is ambiguous because a global variable by the same name exists: `G_loc_iWn` will be treated as a new local. Disambiguate by using `local G_loc_iWn` to suppress this warning or `global G_loc_iWn` to assign to the existing global variable.
└ @ timing.jl:210
┌ Warning: Assignment to `red_G_loc_iWn` in soft scope is ambiguous because a global variable by the same name exists: `red_G_loc_iWn` will be treated as a new local. Disambiguate by using `local red_G_loc_iWn` to suppress this warning or `global red_G_loc_iWn` to assign to the existing global variable.
└ @ ~/com/codepaper/examples/reasonable_set2/NiO_AFM/SCF_DMFT/Jx_DMFT.jl:5312
┌ Warning: Assignment to `G_loc_iWn_mat` in soft scope is ambiguous because a global variable by the same name exists: `G_loc_iWn_mat` will be treated as a new local. Disambiguate by using `local G_loc_iWn_mat` to suppress this warning or `global G_loc_iWn_mat` to assign to the existing global variable.
└ @ ~/com/codepaper/examples/reasonable_set2/NiO_AFM/SCF_DMFT/Jx_DMFT.jl:5318
┌ Warning: Assignment to `InvWiess_iWn_mat` in soft scope is ambiguous because a global variable by the same name exists: `InvWiess_iWn_mat` will be treated as a new local. Disambiguate by using `local InvWiess_iWn_mat` to suppress this warning or `global InvWiess_iWn_mat` to assign to the existing global variable.
└ @ ~/com/codepaper/examples/reasonable_set2/NiO_AFM/SCF_DMFT/Jx_DMFT.jl:5319
┌ Warning: Assignment to `hyb_iWn_mat` in soft scope is ambiguous because a global variable by the same name exists: `hyb_iWn_mat` will be treated as a new local. Disambiguate by using `local hyb_iWn_mat` to suppress this warning or `global hyb_iWn_mat` to assign to the existing global variable.
└ @ ~/com/codepaper/examples/reasonable_set2/NiO_AFM/SCF_DMFT/Jx_DMFT.jl:5320
┌ Warning: Assignment to `InvWiess_iWn` in soft scope is ambiguous because a global variable by the same name exists: `InvWiess_iWn` will be treated as a new local. Disambiguate by using `local InvWiess_iWn` to suppress this warning or `global InvWiess_iWn` to assign to the existing global variable.
└ @ timing.jl:210
┌ Warning: Assignment to `hyb_iWn` in soft scope is ambiguous because a global variable by the same name exists: `hyb_iWn` will be treated as a new local. Disambiguate by using `local hyb_iWn` to suppress this warning or `global hyb_iWn` to assign to the existing global variable.
└ @ timing.jl:210
┌ Warning: Assignment to `hyb` in soft scope is ambiguous because a global variable by the same name exists: `hyb` will be treated as a new local. Disambiguate by using `local hyb` to suppress this warning or `global hyb` to assign to the existing global variable.
└ @ ~/com/codepaper/examples/reasonable_set2/NiO_AFM/SCF_DMFT/Jx_DMFT.jl:5342
#####################################################
      Calculation type : self-consistent DMFT        
#####################################################



  0.315762 seconds (313.84 k allocations: 18.456 MiB, 58.60% compilation time)
  0.173415 seconds (82.85 k allocations: 4.917 MiB, 32.87% compilation time)
  0.172561 seconds (86.28 k allocations: 5.168 MiB, 38.87% compilation time)





                 =============================================  
                 ================    Jx DMFT  ================  
                 =============================================  



------------- input -------------
K-points grid : [6, 6, 6]
R-points grid : [6, 6, 6]
iW_grid_cut : 300.0
Temperature : 300.0
DMFT spin type : 2
Correlated atoms : [1, 2]
Correlated atoms equiv. : [1, -1]

Green-function basis : matsubara
Solver green cut w: 10.0
Solver Measure time: 20.0
Solver thermalization time: 1.0
First smth. step for self energy: 0
Cal. susc. ?: false
initial bias of selfE for spin-polarized : +/-0.5
self-energy simple mixing ratio of old selfE : 0.5

transform basis ?: false
consider degeneracy ?: false

double counting type: nominal

                imp [1]
U     : 7.0
J     : 0.9
interaction type  :ising
interaction parameterisation  :slater-condon
dc_n0 : 8.0,   [ nominal DC (eV) : 49.35 ]
imp-1 index :
            [1, 0, 0, 0, 0]
            [0, 1, 0, 0, 0]
            [0, 0, 2, 0, 0]
            [0, 0, 0, 1, 0]
            [0, 0, 0, 0, 2]

------------- input -------------

===== loading H_k from tight-binding parameter ... ======
  8.333649 seconds (12.93 M allocations: 1.859 GiB, 6.35% gc time, 52.27% compilation time)
  0.763507 seconds (207.93 k allocations: 261.868 MiB, 8.93% gc time, 6.91% compilation time)


  0.351909 seconds (201.11 k allocations: 13.867 MiB, 17.02% compilation time)
  0.134463 seconds (94.38 k allocations: 15.822 MiB, 7.67% compilation time)
===== Start to calculate wannier occupancy in real frequency ... ======
Passed all variables to calculate G(w) ... 
      From worker 51:	Calculating G(w) ...   20%  done
      From worker 50:	Calculating G(w) ...   20%  done
      From worker 30:	Calculating G(w) ...   40%  done
      From worker 5:	Calculating G(w) ...   40%  done
      From worker 39:	Calculating G(w) ...   60%  done
      From worker 31:	Calculating G(w) ...   60%  done
      From worker 56:	Calculating G(w) ...   80%  done
      From worker 35:	Calculating G(w) ...   80%  done
      From worker 15:	Calculating G(w) ...   100%  done
      From worker 36:	Calculating G(w) ...   100%  done


For non-mag cal, total d-orbital occupation 5 !
===============================================
orb-5, occup : 0.974597966775343
orb-6, occup : 0.9745980395983769
orb-7, occup : 0.6317287160013204
orb-8, occup : 0.9745980296443372
orb-9, occup : 0.631729110492604
--------------------------------------
latt-1, occup(up+dn) : 8.37450372502397
======================================
orb-14, occup : 0.9746360819995961
orb-15, occup : 0.9746361432683599
orb-16, occup : 0.631400488302076
orb-17, occup : 0.9746361301309495
orb-18, occup : 0.6314002844464238
--------------------------------------
latt--1, occup(up+dn) : 8.37341825629483
======================================

*------------------------------------*
Wannier-Tot-occup(up+dn):27.84778802835825
*------------------------------------*
----------------------------------------------------
Inequv. orbital index of imp. 1 :[5, 6, 7, 8, 9]
Diagonal part of Hloc : [-50.570731999999964, -50.570732, -49.850877999999994, -50.570732, -49.850879]


  0.341067 seconds (442.61 k allocations: 32.294 MiB, 98.47% compilation time)
  2.101395 seconds (6.65 M allocations: 361.476 MiB, 98.89% compilation time)
  0.067569 seconds (72.76 k allocations: 17.480 MiB, 85.48% compilation time)
===== SelfE = imp_dc block initialize ... ===== 
Impurity [1] : orbital # :2,    Spin type :2

 15.336207 seconds (1.70 M allocations: 127.512 MiB, 4.05% compilation time)
-------------------------------------
Initial latt. mu in transform basis :0.0
-------------------------------------
===== SelfE = imp_dc block initialize ... ===== 
Impurity [1] : orbital # :2,    Spin type :2

 12.960795 seconds (31.86 k allocations: 28.391 MiB)
-------------------------
Initial latt. mu :0.0
-------------------------
===== Calculating local green function ... =====
  5.914873 seconds (1.53 M allocations: 278.312 MiB, 9.00% compilation time)


===== Calculating weiss field from G_loc_iWn ... =====
  1.836808 seconds (1.97 M allocations: 112.750 MiB, 42.53% compilation time)

===== Calculating hybrid function from weiss field ... =====
  0.201908 seconds (348.22 k allocations: 22.551 MiB, 95.97% compilation time)

Writing hyb.json ...
Writing hyb.json ...
Writing params.json ...



 CTQMC run ... imp[1]
 Preparing the input file of EDFMTF : actqmc.cix ...
0.0
Br: kindx= [(7, 3), (9, 1), (5, -5), (7, -1), (6, 2), (3, -3), (5, 1), (1, -1), (4, -2), (4, 0), (3, 3), (6, -4), (4, 4), (8, -2), (7, -3), (2, 2), (10, 0), (5, 3), (1, 1), (5, -1), (6, 4), (0, 0), (8, 2), (7, 1), (2, -2), (6, 0), (9, -1), (8, 0), (4, 2), (5, -3), (5, 5), (4, -4), (3, 1), (3, -1), (6, -2), (2, 0)]
Br: Stage1: Computing F^ in direct base
Br: Stage2: Compressing F^+ according to its block diagonal form
Br: Stage3: Renumbers states -- creates superstates for ctqmc
Br: Stage4: F^dagger matrices between superstates evaluated
Have HB2
Number of operators needed 1  0
off_diagonal=0
Reading data with 1848 entries

       ============================
          DMFT_loop [1] 
       ============================

Reading SelfE_w ... imp[1]

 13.072939 seconds (31.86 k allocations: 28.391 MiB)
===== Calculating local green function ... =====
  5.129986 seconds (267.85 k allocations: 201.011 MiB)

===== Calculating weiss field from G_loc_iWn ... =====
  0.199889 seconds (228.81 k allocations: 11.962 MiB)

===== Calculating hybrid function from weiss field ... =====
  0.007167 seconds (99.35 k allocations: 8.731 MiB)

Writing hyb.json ...
Writing hyb.json ...



 CTQMC run ... imp[1]
 Preparing the input file of EDFMTF : actqmc.cix ...
0.0
Br: kindx= [(7, 3), (9, 1), (5, -5), (7, -1), (6, 2), (3, -3), (5, 1), (1, -1), (4, -2), (4, 0), (3, 3), (6, -4), (4, 4), (8, -2), (7, -3), (2, 2), (10, 0), (5, 3), (1, 1), (5, -1), (6, 4), (0, 0), (8, 2), (7, 1), (2, -2), (6, 0), (9, -1), (8, 0), (4, 2), (5, -3), (5, 5), (4, -4), (3, 1), (3, -1), (6, -2), (2, 0)]
Br: Stage1: Computing F^ in direct base
Br: Stage2: Compressing F^+ according to its block diagonal form
Br: Stage3: Renumbers states -- creates superstates for ctqmc
Br: Stage4: F^dagger matrices between superstates evaluated
Have HB2
Number of operators needed 1  0
off_diagonal=0
Reading data with 1848 entries

       ============================
          DMFT_loop [2] 
       ============================

Reading SelfE_w ... imp[1]

 12.959763 seconds (31.85 k allocations: 28.395 MiB)
===== Calculating local green function ... =====
  5.119097 seconds (267.68 k allocations: 201.009 MiB)

===== Calculating weiss field from G_loc_iWn ... =====
  0.193842 seconds (228.80 k allocations: 11.960 MiB)

===== Calculating hybrid function from weiss field ... =====
  0.006661 seconds (99.35 k allocations: 8.731 MiB)

Writing hyb.json ...
Writing hyb.json ...



 CTQMC run ... imp[1]
 Preparing the input file of EDFMTF : actqmc.cix ...
0.0
Br: kindx= [(7, 3), (9, 1), (5, -5), (7, -1), (6, 2), (3, -3), (5, 1), (1, -1), (4, -2), (4, 0), (3, 3), (6, -4), (4, 4), (8, -2), (7, -3), (2, 2), (10, 0), (5, 3), (1, 1), (5, -1), (6, 4), (0, 0), (8, 2), (7, 1), (2, -2), (6, 0), (9, -1), (8, 0), (4, 2), (5, -3), (5, 5), (4, -4), (3, 1), (3, -1), (6, -2), (2, 0)]
Br: Stage1: Computing F^ in direct base
Br: Stage2: Compressing F^+ according to its block diagonal form
Br: Stage3: Renumbers states -- creates superstates for ctqmc
Br: Stage4: F^dagger matrices between superstates evaluated
Have HB2
Number of operators needed 1  0
off_diagonal=0
Reading data with 1848 entries

       ============================
          DMFT_loop [3] 
       ============================

Reading SelfE_w ... imp[1]

 12.949574 seconds (31.84 k allocations: 28.390 MiB)
===== Calculating local green function ... =====
  5.108575 seconds (267.80 k allocations: 201.010 MiB)

===== Calculating weiss field from G_loc_iWn ... =====
  0.196087 seconds (228.81 k allocations: 11.960 MiB)

===== Calculating hybrid function from weiss field ... =====
  0.007843 seconds (99.35 k allocations: 8.731 MiB)

Writing hyb.json ...
Writing hyb.json ...



 CTQMC run ... imp[1]
 Preparing the input file of EDFMTF : actqmc.cix ...
0.0
Br: kindx= [(7, 3), (9, 1), (5, -5), (7, -1), (6, 2), (3, -3), (5, 1), (1, -1), (4, -2), (4, 0), (3, 3), (6, -4), (4, 4), (8, -2), (7, -3), (2, 2), (10, 0), (5, 3), (1, 1), (5, -1), (6, 4), (0, 0), (8, 2), (7, 1), (2, -2), (6, 0), (9, -1), (8, 0), (4, 2), (5, -3), (5, 5), (4, -4), (3, 1), (3, -1), (6, -2), (2, 0)]
Br: Stage1: Computing F^ in direct base
Br: Stage2: Compressing F^+ according to its block diagonal form
Br: Stage3: Renumbers states -- creates superstates for ctqmc
Br: Stage4: F^dagger matrices between superstates evaluated
Have HB2
Number of operators needed 1  0
off_diagonal=0
Reading data with 1848 entries

       ============================
          DMFT_loop [4] 
       ============================

Reading SelfE_w ... imp[1]

 12.998118 seconds (31.85 k allocations: 28.390 MiB)
===== Calculating local green function ... =====
  5.111980 seconds (267.79 k allocations: 201.010 MiB)

===== Calculating weiss field from G_loc_iWn ... =====
  0.214466 seconds (228.81 k allocations: 11.960 MiB)

===== Calculating hybrid function from weiss field ... =====
  0.007404 seconds (99.35 k allocations: 8.731 MiB)

Writing hyb.json ...
Writing hyb.json ...



 CTQMC run ... imp[1]
 Preparing the input file of EDFMTF : actqmc.cix ...
0.0
Br: kindx= [(7, 3), (9, 1), (5, -5), (7, -1), (6, 2), (3, -3), (5, 1), (1, -1), (4, -2), (4, 0), (3, 3), (6, -4), (4, 4), (8, -2), (7, -3), (2, 2), (10, 0), (5, 3), (1, 1), (5, -1), (6, 4), (0, 0), (8, 2), (7, 1), (2, -2), (6, 0), (9, -1), (8, 0), (4, 2), (5, -3), (5, 5), (4, -4), (3, 1), (3, -1), (6, -2), (2, 0)]
Br: Stage1: Computing F^ in direct base
Br: Stage2: Compressing F^+ according to its block diagonal form
Br: Stage3: Renumbers states -- creates superstates for ctqmc
Br: Stage4: F^dagger matrices between superstates evaluated
Have HB2
Number of operators needed 1  0
off_diagonal=0
Reading data with 1848 entries

       ============================
          DMFT_loop [5] 
       ============================

Reading SelfE_w ... imp[1]

 12.865573 seconds (31.83 k allocations: 28.390 MiB)
===== Calculating local green function ... =====
  5.104661 seconds (267.66 k allocations: 201.006 MiB)

===== Calculating weiss field from G_loc_iWn ... =====
  0.213785 seconds (228.84 k allocations: 11.965 MiB)

===== Calculating hybrid function from weiss field ... =====
  0.007294 seconds (99.35 k allocations: 8.731 MiB)

Writing hyb.json ...
Writing hyb.json ...



 CTQMC run ... imp[1]
 Preparing the input file of EDFMTF : actqmc.cix ...
0.0
Br: kindx= [(7, 3), (9, 1), (5, -5), (7, -1), (6, 2), (3, -3), (5, 1), (1, -1), (4, -2), (4, 0), (3, 3), (6, -4), (4, 4), (8, -2), (7, -3), (2, 2), (10, 0), (5, 3), (1, 1), (5, -1), (6, 4), (0, 0), (8, 2), (7, 1), (2, -2), (6, 0), (9, -1), (8, 0), (4, 2), (5, -3), (5, 5), (4, -4), (3, 1), (3, -1), (6, -2), (2, 0)]
Br: Stage1: Computing F^ in direct base
Br: Stage2: Compressing F^+ according to its block diagonal form
Br: Stage3: Renumbers states -- creates superstates for ctqmc
Br: Stage4: F^dagger matrices between superstates evaluated
Have HB2
Number of operators needed 1  0
off_diagonal=0
Reading data with 1848 entries

       ============================
          DMFT_loop [6] 
       ============================

Reading SelfE_w ... imp[1]

 12.829509 seconds (31.82 k allocations: 28.390 MiB)
===== Calculating local green function ... =====
  5.107445 seconds (267.70 k allocations: 201.007 MiB)

===== Calculating weiss field from G_loc_iWn ... =====
  0.195773 seconds (228.81 k allocations: 11.960 MiB)

===== Calculating hybrid function from weiss field ... =====
  0.008005 seconds (99.35 k allocations: 8.731 MiB)

Writing hyb.json ...
Writing hyb.json ...



 CTQMC run ... imp[1]
 Preparing the input file of EDFMTF : actqmc.cix ...
0.0
Br: kindx= [(7, 3), (9, 1), (5, -5), (7, -1), (6, 2), (3, -3), (5, 1), (1, -1), (4, -2), (4, 0), (3, 3), (6, -4), (4, 4), (8, -2), (7, -3), (2, 2), (10, 0), (5, 3), (1, 1), (5, -1), (6, 4), (0, 0), (8, 2), (7, 1), (2, -2), (6, 0), (9, -1), (8, 0), (4, 2), (5, -3), (5, 5), (4, -4), (3, 1), (3, -1), (6, -2), (2, 0)]
Br: Stage1: Computing F^ in direct base
Br: Stage2: Compressing F^+ according to its block diagonal form
Br: Stage3: Renumbers states -- creates superstates for ctqmc
Br: Stage4: F^dagger matrices between superstates evaluated
Have HB2
Number of operators needed 1  0
off_diagonal=0
Reading data with 1848 entries

       ============================
          DMFT_loop [7] 
       ============================

Reading SelfE_w ... imp[1]

 12.953139 seconds (31.83 k allocations: 28.390 MiB)
===== Calculating local green function ... =====
  5.136649 seconds (267.69 k allocations: 201.007 MiB)

===== Calculating weiss field from G_loc_iWn ... =====
  0.200744 seconds (228.81 k allocations: 11.961 MiB)

===== Calculating hybrid function from weiss field ... =====
  0.006642 seconds (99.35 k allocations: 8.731 MiB)

Writing hyb.json ...
Writing hyb.json ...



 CTQMC run ... imp[1]
 Preparing the input file of EDFMTF : actqmc.cix ...
0.0
Br: kindx= [(7, 3), (9, 1), (5, -5), (7, -1), (6, 2), (3, -3), (5, 1), (1, -1), (4, -2), (4, 0), (3, 3), (6, -4), (4, 4), (8, -2), (7, -3), (2, 2), (10, 0), (5, 3), (1, 1), (5, -1), (6, 4), (0, 0), (8, 2), (7, 1), (2, -2), (6, 0), (9, -1), (8, 0), (4, 2), (5, -3), (5, 5), (4, -4), (3, 1), (3, -1), (6, -2), (2, 0)]
Br: Stage1: Computing F^ in direct base
Br: Stage2: Compressing F^+ according to its block diagonal form
Br: Stage3: Renumbers states -- creates superstates for ctqmc
Br: Stage4: F^dagger matrices between superstates evaluated
Have HB2
Number of operators needed 1  0
off_diagonal=0
Reading data with 1848 entries

       ============================
          DMFT_loop [8] 
       ============================

Reading SelfE_w ... imp[1]

 12.927480 seconds (31.85 k allocations: 28.395 MiB)
===== Calculating local green function ... =====
  5.129844 seconds (267.82 k allocations: 201.013 MiB)

===== Calculating weiss field from G_loc_iWn ... =====
  0.194533 seconds (228.80 k allocations: 11.957 MiB)

===== Calculating hybrid function from weiss field ... =====
  0.007956 seconds (99.35 k allocations: 8.731 MiB)

Writing hyb.json ...
Writing hyb.json ...



 CTQMC run ... imp[1]
 Preparing the input file of EDFMTF : actqmc.cix ...
0.0
Br: kindx= [(7, 3), (9, 1), (5, -5), (7, -1), (6, 2), (3, -3), (5, 1), (1, -1), (4, -2), (4, 0), (3, 3), (6, -4), (4, 4), (8, -2), (7, -3), (2, 2), (10, 0), (5, 3), (1, 1), (5, -1), (6, 4), (0, 0), (8, 2), (7, 1), (2, -2), (6, 0), (9, -1), (8, 0), (4, 2), (5, -3), (5, 5), (4, -4), (3, 1), (3, -1), (6, -2), (2, 0)]
Br: Stage1: Computing F^ in direct base
Br: Stage2: Compressing F^+ according to its block diagonal form
Br: Stage3: Renumbers states -- creates superstates for ctqmc
Br: Stage4: F^dagger matrices between superstates evaluated
Have HB2
Number of operators needed 1  0
off_diagonal=0
Reading data with 1848 entries

       ============================
          DMFT_loop [9] 
       ============================

Reading SelfE_w ... imp[1]

 12.994967 seconds (31.86 k allocations: 28.391 MiB)
===== Calculating local green function ... =====
  5.119306 seconds (267.73 k allocations: 201.008 MiB)

===== Calculating weiss field from G_loc_iWn ... =====
  0.192730 seconds (228.79 k allocations: 11.960 MiB)

===== Calculating hybrid function from weiss field ... =====
  0.006614 seconds (99.35 k allocations: 8.731 MiB)

Writing hyb.json ...
Writing hyb.json ...



 CTQMC run ... imp[1]
 Preparing the input file of EDFMTF : actqmc.cix ...
0.0
Br: kindx= [(7, 3), (9, 1), (5, -5), (7, -1), (6, 2), (3, -3), (5, 1), (1, -1), (4, -2), (4, 0), (3, 3), (6, -4), (4, 4), (8, -2), (7, -3), (2, 2), (10, 0), (5, 3), (1, 1), (5, -1), (6, 4), (0, 0), (8, 2), (7, 1), (2, -2), (6, 0), (9, -1), (8, 0), (4, 2), (5, -3), (5, 5), (4, -4), (3, 1), (3, -1), (6, -2), (2, 0)]
Br: Stage1: Computing F^ in direct base
Br: Stage2: Compressing F^+ according to its block diagonal form
Br: Stage3: Renumbers states -- creates superstates for ctqmc
Br: Stage4: F^dagger matrices between superstates evaluated
Have HB2
Number of operators needed 1  0
off_diagonal=0
Reading data with 1848 entries

       ============================
          DMFT_loop [10] 
       ============================

Reading SelfE_w ... imp[1]

 12.981983 seconds (31.84 k allocations: 28.390 MiB)
===== Calculating local green function ... =====
  5.121208 seconds (267.76 k allocations: 201.009 MiB)

===== Calculating weiss field from G_loc_iWn ... =====
  0.198565 seconds (228.80 k allocations: 11.959 MiB)

===== Calculating hybrid function from weiss field ... =====
  0.006721 seconds (99.35 k allocations: 8.731 MiB)

Writing hyb.json ...
Writing hyb.json ...



 CTQMC run ... imp[1]
 Preparing the input file of EDFMTF : actqmc.cix ...
0.0
Br: kindx= [(7, 3), (9, 1), (5, -5), (7, -1), (6, 2), (3, -3), (5, 1), (1, -1), (4, -2), (4, 0), (3, 3), (6, -4), (4, 4), (8, -2), (7, -3), (2, 2), (10, 0), (5, 3), (1, 1), (5, -1), (6, 4), (0, 0), (8, 2), (7, 1), (2, -2), (6, 0), (9, -1), (8, 0), (4, 2), (5, -3), (5, 5), (4, -4), (3, 1), (3, -1), (6, -2), (2, 0)]
Br: Stage1: Computing F^ in direct base
Br: Stage2: Compressing F^+ according to its block diagonal form
Br: Stage3: Renumbers states -- creates superstates for ctqmc
Br: Stage4: F^dagger matrices between superstates evaluated
Have HB2
Number of operators needed 1  0
off_diagonal=0
Reading data with 1848 entries

       ============================
          DMFT_loop [11] 
       ============================

Reading SelfE_w ... imp[1]

 12.955291 seconds (31.84 k allocations: 28.392 MiB)
===== Calculating local green function ... =====
  5.121770 seconds (267.81 k allocations: 201.009 MiB)

===== Calculating weiss field from G_loc_iWn ... =====
  0.196148 seconds (228.79 k allocations: 11.958 MiB)

===== Calculating hybrid function from weiss field ... =====
  0.007350 seconds (99.35 k allocations: 8.731 MiB)

Writing hyb.json ...
Writing hyb.json ...



 CTQMC run ... imp[1]
 Preparing the input file of EDFMTF : actqmc.cix ...
0.0
Br: kindx= [(7, 3), (9, 1), (5, -5), (7, -1), (6, 2), (3, -3), (5, 1), (1, -1), (4, -2), (4, 0), (3, 3), (6, -4), (4, 4), (8, -2), (7, -3), (2, 2), (10, 0), (5, 3), (1, 1), (5, -1), (6, 4), (0, 0), (8, 2), (7, 1), (2, -2), (6, 0), (9, -1), (8, 0), (4, 2), (5, -3), (5, 5), (4, -4), (3, 1), (3, -1), (6, -2), (2, 0)]
Br: Stage1: Computing F^ in direct base
Br: Stage2: Compressing F^+ according to its block diagonal form
Br: Stage3: Renumbers states -- creates superstates for ctqmc
Br: Stage4: F^dagger matrices between superstates evaluated
Have HB2
Number of operators needed 1  0
off_diagonal=0
Reading data with 1848 entries

       ============================
          DMFT_loop [12] 
       ============================

Reading SelfE_w ... imp[1]

 12.935249 seconds (31.84 k allocations: 28.387 MiB)
===== Calculating local green function ... =====
  5.119211 seconds (267.76 k allocations: 201.010 MiB)

===== Calculating weiss field from G_loc_iWn ... =====
  0.209470 seconds (228.82 k allocations: 11.963 MiB)

===== Calculating hybrid function from weiss field ... =====
  0.007126 seconds (99.35 k allocations: 8.731 MiB)

Writing hyb.json ...
Writing hyb.json ...



 CTQMC run ... imp[1]
 Preparing the input file of EDFMTF : actqmc.cix ...
0.0
Br: kindx= [(7, 3), (9, 1), (5, -5), (7, -1), (6, 2), (3, -3), (5, 1), (1, -1), (4, -2), (4, 0), (3, 3), (6, -4), (4, 4), (8, -2), (7, -3), (2, 2), (10, 0), (5, 3), (1, 1), (5, -1), (6, 4), (0, 0), (8, 2), (7, 1), (2, -2), (6, 0), (9, -1), (8, 0), (4, 2), (5, -3), (5, 5), (4, -4), (3, 1), (3, -1), (6, -2), (2, 0)]
Br: Stage1: Computing F^ in direct base
Br: Stage2: Compressing F^+ according to its block diagonal form
Br: Stage3: Renumbers states -- creates superstates for ctqmc
Br: Stage4: F^dagger matrices between superstates evaluated
Have HB2
Number of operators needed 1  0
off_diagonal=0
Reading data with 1848 entries

       ============================
          DMFT_loop [13] 
       ============================

Reading SelfE_w ... imp[1]

 12.982154 seconds (31.84 k allocations: 28.390 MiB)
===== Calculating local green function ... =====
  5.117510 seconds (267.73 k allocations: 201.008 MiB)

===== Calculating weiss field from G_loc_iWn ... =====
  0.189240 seconds (228.80 k allocations: 11.961 MiB)

===== Calculating hybrid function from weiss field ... =====
  0.006618 seconds (99.35 k allocations: 8.731 MiB)

Writing hyb.json ...
Writing hyb.json ...



 CTQMC run ... imp[1]
 Preparing the input file of EDFMTF : actqmc.cix ...
0.0
Br: kindx= [(7, 3), (9, 1), (5, -5), (7, -1), (6, 2), (3, -3), (5, 1), (1, -1), (4, -2), (4, 0), (3, 3), (6, -4), (4, 4), (8, -2), (7, -3), (2, 2), (10, 0), (5, 3), (1, 1), (5, -1), (6, 4), (0, 0), (8, 2), (7, 1), (2, -2), (6, 0), (9, -1), (8, 0), (4, 2), (5, -3), (5, 5), (4, -4), (3, 1), (3, -1), (6, -2), (2, 0)]
Br: Stage1: Computing F^ in direct base
Br: Stage2: Compressing F^+ according to its block diagonal form
Br: Stage3: Renumbers states -- creates superstates for ctqmc
Br: Stage4: F^dagger matrices between superstates evaluated
Have HB2
Number of operators needed 1  0
off_diagonal=0
Reading data with 1848 entries

       ============================
          DMFT_loop [14] 
       ============================

Reading SelfE_w ... imp[1]

 12.987974 seconds (31.86 k allocations: 28.395 MiB)
===== Calculating local green function ... =====
  5.140962 seconds (267.81 k allocations: 201.013 MiB)

===== Calculating weiss field from G_loc_iWn ... =====
  0.199229 seconds (228.81 k allocations: 11.960 MiB)

===== Calculating hybrid function from weiss field ... =====
  0.007170 seconds (99.35 k allocations: 8.731 MiB)

Writing hyb.json ...
Writing hyb.json ...



 CTQMC run ... imp[1]
 Preparing the input file of EDFMTF : actqmc.cix ...
0.0
Br: kindx= [(7, 3), (9, 1), (5, -5), (7, -1), (6, 2), (3, -3), (5, 1), (1, -1), (4, -2), (4, 0), (3, 3), (6, -4), (4, 4), (8, -2), (7, -3), (2, 2), (10, 0), (5, 3), (1, 1), (5, -1), (6, 4), (0, 0), (8, 2), (7, 1), (2, -2), (6, 0), (9, -1), (8, 0), (4, 2), (5, -3), (5, 5), (4, -4), (3, 1), (3, -1), (6, -2), (2, 0)]
Br: Stage1: Computing F^ in direct base
Br: Stage2: Compressing F^+ according to its block diagonal form
Br: Stage3: Renumbers states -- creates superstates for ctqmc
Br: Stage4: F^dagger matrices between superstates evaluated
Have HB2
Number of operators needed 1  0
off_diagonal=0
Reading data with 1848 entries

       ============================
          DMFT_loop [15] 
       ============================

Reading SelfE_w ... imp[1]

 12.994495 seconds (31.87 k allocations: 28.395 MiB)
===== Calculating local green function ... =====
  5.158503 seconds (267.66 k allocations: 201.009 MiB)

===== Calculating weiss field from G_loc_iWn ... =====
  0.199268 seconds (228.80 k allocations: 11.959 MiB)

===== Calculating hybrid function from weiss field ... =====
  0.007134 seconds (99.35 k allocations: 8.731 MiB)

Writing hyb.json ...
Writing hyb.json ...



 CTQMC run ... imp[1]
 Preparing the input file of EDFMTF : actqmc.cix ...
0.0
Br: kindx= [(7, 3), (9, 1), (5, -5), (7, -1), (6, 2), (3, -3), (5, 1), (1, -1), (4, -2), (4, 0), (3, 3), (6, -4), (4, 4), (8, -2), (7, -3), (2, 2), (10, 0), (5, 3), (1, 1), (5, -1), (6, 4), (0, 0), (8, 2), (7, 1), (2, -2), (6, 0), (9, -1), (8, 0), (4, 2), (5, -3), (5, 5), (4, -4), (3, 1), (3, -1), (6, -2), (2, 0)]
Br: Stage1: Computing F^ in direct base
Br: Stage2: Compressing F^+ according to its block diagonal form
Br: Stage3: Renumbers states -- creates superstates for ctqmc
Br: Stage4: F^dagger matrices between superstates evaluated
Have HB2
Number of operators needed 1  0
off_diagonal=0
Reading data with 1848 entries

       ============================
          DMFT_loop [16] 
       ============================

Reading SelfE_w ... imp[1]

 12.946123 seconds (31.83 k allocations: 28.387 MiB)
===== Calculating local green function ... =====
  5.109652 seconds (267.73 k allocations: 201.009 MiB)

===== Calculating weiss field from G_loc_iWn ... =====
  0.199468 seconds (228.80 k allocations: 11.959 MiB)

===== Calculating hybrid function from weiss field ... =====
  0.007194 seconds (99.35 k allocations: 8.731 MiB)

Writing hyb.json ...
Writing hyb.json ...



 CTQMC run ... imp[1]
 Preparing the input file of EDFMTF : actqmc.cix ...
0.0
Br: kindx= [(7, 3), (9, 1), (5, -5), (7, -1), (6, 2), (3, -3), (5, 1), (1, -1), (4, -2), (4, 0), (3, 3), (6, -4), (4, 4), (8, -2), (7, -3), (2, 2), (10, 0), (5, 3), (1, 1), (5, -1), (6, 4), (0, 0), (8, 2), (7, 1), (2, -2), (6, 0), (9, -1), (8, 0), (4, 2), (5, -3), (5, 5), (4, -4), (3, 1), (3, -1), (6, -2), (2, 0)]
Br: Stage1: Computing F^ in direct base
Br: Stage2: Compressing F^+ according to its block diagonal form
Br: Stage3: Renumbers states -- creates superstates for ctqmc
Br: Stage4: F^dagger matrices between superstates evaluated
Have HB2
Number of operators needed 1  0
off_diagonal=0
Reading data with 1848 entries

       ============================
          DMFT_loop [17] 
       ============================

Reading SelfE_w ... imp[1]

 12.953537 seconds (31.83 k allocations: 28.392 MiB)
===== Calculating local green function ... =====
  5.144609 seconds (267.85 k allocations: 201.011 MiB)

===== Calculating weiss field from G_loc_iWn ... =====
  0.197488 seconds (228.80 k allocations: 11.960 MiB)

===== Calculating hybrid function from weiss field ... =====
  0.007399 seconds (99.35 k allocations: 8.731 MiB)

Writing hyb.json ...
Writing hyb.json ...



 CTQMC run ... imp[1]
 Preparing the input file of EDFMTF : actqmc.cix ...
0.0
Br: kindx= [(7, 3), (9, 1), (5, -5), (7, -1), (6, 2), (3, -3), (5, 1), (1, -1), (4, -2), (4, 0), (3, 3), (6, -4), (4, 4), (8, -2), (7, -3), (2, 2), (10, 0), (5, 3), (1, 1), (5, -1), (6, 4), (0, 0), (8, 2), (7, 1), (2, -2), (6, 0), (9, -1), (8, 0), (4, 2), (5, -3), (5, 5), (4, -4), (3, 1), (3, -1), (6, -2), (2, 0)]
Br: Stage1: Computing F^ in direct base
Br: Stage2: Compressing F^+ according to its block diagonal form
Br: Stage3: Renumbers states -- creates superstates for ctqmc
Br: Stage4: F^dagger matrices between superstates evaluated
Have HB2
Number of operators needed 1  0
off_diagonal=0
Reading data with 1848 entries

       ============================
          DMFT_loop [18] 
       ============================

Reading SelfE_w ... imp[1]

 13.151361 seconds (31.86 k allocations: 28.387 MiB)
===== Calculating local green function ... =====
  5.130244 seconds (267.79 k allocations: 201.011 MiB)

===== Calculating weiss field from G_loc_iWn ... =====
  0.195476 seconds (228.81 k allocations: 11.962 MiB)

===== Calculating hybrid function from weiss field ... =====
  0.006660 seconds (99.35 k allocations: 8.731 MiB)

Writing hyb.json ...
Writing hyb.json ...



 CTQMC run ... imp[1]
 Preparing the input file of EDFMTF : actqmc.cix ...
0.0
Br: kindx= [(7, 3), (9, 1), (5, -5), (7, -1), (6, 2), (3, -3), (5, 1), (1, -1), (4, -2), (4, 0), (3, 3), (6, -4), (4, 4), (8, -2), (7, -3), (2, 2), (10, 0), (5, 3), (1, 1), (5, -1), (6, 4), (0, 0), (8, 2), (7, 1), (2, -2), (6, 0), (9, -1), (8, 0), (4, 2), (5, -3), (5, 5), (4, -4), (3, 1), (3, -1), (6, -2), (2, 0)]
Br: Stage1: Computing F^ in direct base
Br: Stage2: Compressing F^+ according to its block diagonal form
Br: Stage3: Renumbers states -- creates superstates for ctqmc
Br: Stage4: F^dagger matrices between superstates evaluated
Have HB2
Number of operators needed 1  0
off_diagonal=0
Reading data with 1848 entries

       ============================
          DMFT_loop [19] 
       ============================

Reading SelfE_w ... imp[1]

 12.995509 seconds (31.84 k allocations: 28.390 MiB)
===== Calculating local green function ... =====
  5.143389 seconds (267.76 k allocations: 201.009 MiB)

===== Calculating weiss field from G_loc_iWn ... =====
  0.192025 seconds (228.79 k allocations: 11.958 MiB)

===== Calculating hybrid function from weiss field ... =====
  0.006626 seconds (99.35 k allocations: 8.731 MiB)

Writing hyb.json ...
Writing hyb.json ...



 CTQMC run ... imp[1]
 Preparing the input file of EDFMTF : actqmc.cix ...
0.0
Br: kindx= [(7, 3), (9, 1), (5, -5), (7, -1), (6, 2), (3, -3), (5, 1), (1, -1), (4, -2), (4, 0), (3, 3), (6, -4), (4, 4), (8, -2), (7, -3), (2, 2), (10, 0), (5, 3), (1, 1), (5, -1), (6, 4), (0, 0), (8, 2), (7, 1), (2, -2), (6, 0), (9, -1), (8, 0), (4, 2), (5, -3), (5, 5), (4, -4), (3, 1), (3, -1), (6, -2), (2, 0)]
Br: Stage1: Computing F^ in direct base
Br: Stage2: Compressing F^+ according to its block diagonal form
Br: Stage3: Renumbers states -- creates superstates for ctqmc
Br: Stage4: F^dagger matrices between superstates evaluated
Have HB2
Number of operators needed 1  0
off_diagonal=0
Reading data with 1848 entries

       ============================
          DMFT_loop [20] 
       ============================

Reading SelfE_w ... imp[1]

 12.982939 seconds (31.84 k allocations: 28.390 MiB)
===== Calculating local green function ... =====
  5.113414 seconds (267.70 k allocations: 201.007 MiB)

===== Calculating weiss field from G_loc_iWn ... =====
  0.198365 seconds (228.80 k allocations: 11.959 MiB)

===== Calculating hybrid function from weiss field ... =====
  0.007967 seconds (99.35 k allocations: 8.731 MiB)

Writing hyb.json ...
Writing hyb.json ...



 CTQMC run ... imp[1]
 Preparing the input file of EDFMTF : actqmc.cix ...
0.0
Br: kindx= [(7, 3), (9, 1), (5, -5), (7, -1), (6, 2), (3, -3), (5, 1), (1, -1), (4, -2), (4, 0), (3, 3), (6, -4), (4, 4), (8, -2), (7, -3), (2, 2), (10, 0), (5, 3), (1, 1), (5, -1), (6, 4), (0, 0), (8, 2), (7, 1), (2, -2), (6, 0), (9, -1), (8, 0), (4, 2), (5, -3), (5, 5), (4, -4), (3, 1), (3, -1), (6, -2), (2, 0)]
Br: Stage1: Computing F^ in direct base
Br: Stage2: Compressing F^+ according to its block diagonal form
Br: Stage3: Renumbers states -- creates superstates for ctqmc
Br: Stage4: F^dagger matrices between superstates evaluated
Have HB2
Number of operators needed 1  0
off_diagonal=0
Reading data with 1848 entries

       ============================
          DMFT_loop [21] 
       ============================

Reading SelfE_w ... imp[1]

 12.959671 seconds (31.83 k allocations: 28.387 MiB)
===== Calculating local green function ... =====
  5.141011 seconds (267.72 k allocations: 201.009 MiB)

===== Calculating weiss field from G_loc_iWn ... =====
  0.196432 seconds (228.81 k allocations: 11.959 MiB)

===== Calculating hybrid function from weiss field ... =====
  0.006665 seconds (99.35 k allocations: 8.731 MiB)

Writing hyb.json ...
Writing hyb.json ...



 CTQMC run ... imp[1]
 Preparing the input file of EDFMTF : actqmc.cix ...
0.0
Br: kindx= [(7, 3), (9, 1), (5, -5), (7, -1), (6, 2), (3, -3), (5, 1), (1, -1), (4, -2), (4, 0), (3, 3), (6, -4), (4, 4), (8, -2), (7, -3), (2, 2), (10, 0), (5, 3), (1, 1), (5, -1), (6, 4), (0, 0), (8, 2), (7, 1), (2, -2), (6, 0), (9, -1), (8, 0), (4, 2), (5, -3), (5, 5), (4, -4), (3, 1), (3, -1), (6, -2), (2, 0)]
Br: Stage1: Computing F^ in direct base
Br: Stage2: Compressing F^+ according to its block diagonal form
Br: Stage3: Renumbers states -- creates superstates for ctqmc
Br: Stage4: F^dagger matrices between superstates evaluated
Have HB2
Number of operators needed 1  0
off_diagonal=0
Reading data with 1848 entries

       ============================
          DMFT_loop [22] 
       ============================

Reading SelfE_w ... imp[1]

 13.053154 seconds (31.85 k allocations: 28.390 MiB)
===== Calculating local green function ... =====
  5.136034 seconds (267.71 k allocations: 201.008 MiB)

===== Calculating weiss field from G_loc_iWn ... =====
  0.194703 seconds (228.80 k allocations: 11.963 MiB)

===== Calculating hybrid function from weiss field ... =====
  0.006640 seconds (99.35 k allocations: 8.731 MiB)

Writing hyb.json ...
Writing hyb.json ...



 CTQMC run ... imp[1]
 Preparing the input file of EDFMTF : actqmc.cix ...
0.0
Br: kindx= [(7, 3), (9, 1), (5, -5), (7, -1), (6, 2), (3, -3), (5, 1), (1, -1), (4, -2), (4, 0), (3, 3), (6, -4), (4, 4), (8, -2), (7, -3), (2, 2), (10, 0), (5, 3), (1, 1), (5, -1), (6, 4), (0, 0), (8, 2), (7, 1), (2, -2), (6, 0), (9, -1), (8, 0), (4, 2), (5, -3), (5, 5), (4, -4), (3, 1), (3, -1), (6, -2), (2, 0)]
Br: Stage1: Computing F^ in direct base
Br: Stage2: Compressing F^+ according to its block diagonal form
Br: Stage3: Renumbers states -- creates superstates for ctqmc
Br: Stage4: F^dagger matrices between superstates evaluated
Have HB2
Number of operators needed 1  0
off_diagonal=0
Reading data with 1848 entries

       ============================
          DMFT_loop [23] 
       ============================

Reading SelfE_w ... imp[1]

 13.023097 seconds (31.85 k allocations: 28.390 MiB)
===== Calculating local green function ... =====
  5.114881 seconds (267.70 k allocations: 201.007 MiB)

===== Calculating weiss field from G_loc_iWn ... =====
  0.202211 seconds (228.82 k allocations: 11.963 MiB)

===== Calculating hybrid function from weiss field ... =====
  0.008910 seconds (99.35 k allocations: 8.731 MiB)

Writing hyb.json ...
Writing hyb.json ...



 CTQMC run ... imp[1]
 Preparing the input file of EDFMTF : actqmc.cix ...
0.0
Br: kindx= [(7, 3), (9, 1), (5, -5), (7, -1), (6, 2), (3, -3), (5, 1), (1, -1), (4, -2), (4, 0), (3, 3), (6, -4), (4, 4), (8, -2), (7, -3), (2, 2), (10, 0), (5, 3), (1, 1), (5, -1), (6, 4), (0, 0), (8, 2), (7, 1), (2, -2), (6, 0), (9, -1), (8, 0), (4, 2), (5, -3), (5, 5), (4, -4), (3, 1), (3, -1), (6, -2), (2, 0)]
Br: Stage1: Computing F^ in direct base
Br: Stage2: Compressing F^+ according to its block diagonal form
Br: Stage3: Renumbers states -- creates superstates for ctqmc
Br: Stage4: F^dagger matrices between superstates evaluated
Have HB2
Number of operators needed 1  0
off_diagonal=0
Reading data with 1848 entries

       ============================
          DMFT_loop [24] 
       ============================

Reading SelfE_w ... imp[1]

 12.988090 seconds (31.85 k allocations: 28.395 MiB)
===== Calculating local green function ... =====
  5.150702 seconds (267.70 k allocations: 201.010 MiB)

===== Calculating weiss field from G_loc_iWn ... =====
  0.194530 seconds (228.81 k allocations: 11.962 MiB)

===== Calculating hybrid function from weiss field ... =====
  0.006663 seconds (99.35 k allocations: 8.731 MiB)

Writing hyb.json ...
Writing hyb.json ...



 CTQMC run ... imp[1]
 Preparing the input file of EDFMTF : actqmc.cix ...
0.0
Br: kindx= [(7, 3), (9, 1), (5, -5), (7, -1), (6, 2), (3, -3), (5, 1), (1, -1), (4, -2), (4, 0), (3, 3), (6, -4), (4, 4), (8, -2), (7, -3), (2, 2), (10, 0), (5, 3), (1, 1), (5, -1), (6, 4), (0, 0), (8, 2), (7, 1), (2, -2), (6, 0), (9, -1), (8, 0), (4, 2), (5, -3), (5, 5), (4, -4), (3, 1), (3, -1), (6, -2), (2, 0)]
Br: Stage1: Computing F^ in direct base
Br: Stage2: Compressing F^+ according to its block diagonal form
Br: Stage3: Renumbers states -- creates superstates for ctqmc
Br: Stage4: F^dagger matrices between superstates evaluated
Have HB2
Number of operators needed 1  0
off_diagonal=0
Reading data with 1848 entries

       ============================
          DMFT_loop [25] 
       ============================

Reading SelfE_w ... imp[1]

 12.963215 seconds (31.84 k allocations: 28.390 MiB)
===== Calculating local green function ... =====
  5.138069 seconds (267.71 k allocations: 201.007 MiB)

===== Calculating weiss field from G_loc_iWn ... =====
  0.192583 seconds (228.80 k allocations: 11.964 MiB)

===== Calculating hybrid function from weiss field ... =====
  0.007009 seconds (99.35 k allocations: 8.731 MiB)

Writing hyb.json ...
Writing hyb.json ...



 CTQMC run ... imp[1]
 Preparing the input file of EDFMTF : actqmc.cix ...
0.0
Br: kindx= [(7, 3), (9, 1), (5, -5), (7, -1), (6, 2), (3, -3), (5, 1), (1, -1), (4, -2), (4, 0), (3, 3), (6, -4), (4, 4), (8, -2), (7, -3), (2, 2), (10, 0), (5, 3), (1, 1), (5, -1), (6, 4), (0, 0), (8, 2), (7, 1), (2, -2), (6, 0), (9, -1), (8, 0), (4, 2), (5, -3), (5, 5), (4, -4), (3, 1), (3, -1), (6, -2), (2, 0)]
Br: Stage1: Computing F^ in direct base
Br: Stage2: Compressing F^+ according to its block diagonal form
Br: Stage3: Renumbers states -- creates superstates for ctqmc
Br: Stage4: F^dagger matrices between superstates evaluated
Have HB2
Number of operators needed 1  0
off_diagonal=0
Reading data with 1848 entries

       ============================
          DMFT_loop [26] 
       ============================

Reading SelfE_w ... imp[1]

 12.998201 seconds (31.86 k allocations: 28.391 MiB)
===== Calculating local green function ... =====
  5.132739 seconds (267.71 k allocations: 201.007 MiB)

===== Calculating weiss field from G_loc_iWn ... =====
  0.191778 seconds (228.81 k allocations: 11.963 MiB)

===== Calculating hybrid function from weiss field ... =====
  0.007955 seconds (99.35 k allocations: 8.731 MiB)

Writing hyb.json ...
Writing hyb.json ...



 CTQMC run ... imp[1]
 Preparing the input file of EDFMTF : actqmc.cix ...
0.0
Br: kindx= [(7, 3), (9, 1), (5, -5), (7, -1), (6, 2), (3, -3), (5, 1), (1, -1), (4, -2), (4, 0), (3, 3), (6, -4), (4, 4), (8, -2), (7, -3), (2, 2), (10, 0), (5, 3), (1, 1), (5, -1), (6, 4), (0, 0), (8, 2), (7, 1), (2, -2), (6, 0), (9, -1), (8, 0), (4, 2), (5, -3), (5, 5), (4, -4), (3, 1), (3, -1), (6, -2), (2, 0)]
Br: Stage1: Computing F^ in direct base
Br: Stage2: Compressing F^+ according to its block diagonal form
Br: Stage3: Renumbers states -- creates superstates for ctqmc
Br: Stage4: F^dagger matrices between superstates evaluated
Have HB2
Number of operators needed 1  0
off_diagonal=0
Reading data with 1848 entries

       ============================
          DMFT_loop [27] 
       ============================

Reading SelfE_w ... imp[1]

 13.020939 seconds (31.84 k allocations: 28.390 MiB)
===== Calculating local green function ... =====
  5.147652 seconds (267.73 k allocations: 201.008 MiB)

===== Calculating weiss field from G_loc_iWn ... =====
  0.199972 seconds (228.80 k allocations: 11.960 MiB)

===== Calculating hybrid function from weiss field ... =====
  0.007931 seconds (99.35 k allocations: 8.731 MiB)

Writing hyb.json ...
Writing hyb.json ...



 CTQMC run ... imp[1]
 Preparing the input file of EDFMTF : actqmc.cix ...
0.0
Br: kindx= [(7, 3), (9, 1), (5, -5), (7, -1), (6, 2), (3, -3), (5, 1), (1, -1), (4, -2), (4, 0), (3, 3), (6, -4), (4, 4), (8, -2), (7, -3), (2, 2), (10, 0), (5, 3), (1, 1), (5, -1), (6, 4), (0, 0), (8, 2), (7, 1), (2, -2), (6, 0), (9, -1), (8, 0), (4, 2), (5, -3), (5, 5), (4, -4), (3, 1), (3, -1), (6, -2), (2, 0)]
Br: Stage1: Computing F^ in direct base
Br: Stage2: Compressing F^+ according to its block diagonal form
Br: Stage3: Renumbers states -- creates superstates for ctqmc
Br: Stage4: F^dagger matrices between superstates evaluated
Have HB2
Number of operators needed 1  0
off_diagonal=0
Reading data with 1848 entries

       ============================
          DMFT_loop [28] 
       ============================

Reading SelfE_w ... imp[1]

 13.101045 seconds (31.86 k allocations: 28.393 MiB)
===== Calculating local green function ... =====
  5.144644 seconds (267.73 k allocations: 201.007 MiB)

===== Calculating weiss field from G_loc_iWn ... =====
  0.192292 seconds (228.79 k allocations: 11.962 MiB)

===== Calculating hybrid function from weiss field ... =====
  0.006885 seconds (99.35 k allocations: 8.731 MiB)

Writing hyb.json ...
Writing hyb.json ...



 CTQMC run ... imp[1]
 Preparing the input file of EDFMTF : actqmc.cix ...
0.0
Br: kindx= [(7, 3), (9, 1), (5, -5), (7, -1), (6, 2), (3, -3), (5, 1), (1, -1), (4, -2), (4, 0), (3, 3), (6, -4), (4, 4), (8, -2), (7, -3), (2, 2), (10, 0), (5, 3), (1, 1), (5, -1), (6, 4), (0, 0), (8, 2), (7, 1), (2, -2), (6, 0), (9, -1), (8, 0), (4, 2), (5, -3), (5, 5), (4, -4), (3, 1), (3, -1), (6, -2), (2, 0)]
Br: Stage1: Computing F^ in direct base
Br: Stage2: Compressing F^+ according to its block diagonal form
Br: Stage3: Renumbers states -- creates superstates for ctqmc
Br: Stage4: F^dagger matrices between superstates evaluated
Have HB2
Number of operators needed 1  0
off_diagonal=0
Reading data with 1848 entries

       ============================
          DMFT_loop [29] 
       ============================

Reading SelfE_w ... imp[1]

 13.023521 seconds (31.85 k allocations: 28.390 MiB)
===== Calculating local green function ... =====
  5.122398 seconds (267.79 k allocations: 201.010 MiB)

===== Calculating weiss field from G_loc_iWn ... =====
  0.196816 seconds (228.81 k allocations: 11.962 MiB)

===== Calculating hybrid function from weiss field ... =====
  0.007494 seconds (99.35 k allocations: 8.731 MiB)

Writing hyb.json ...
Writing hyb.json ...



 CTQMC run ... imp[1]
 Preparing the input file of EDFMTF : actqmc.cix ...
0.0
Br: kindx= [(7, 3), (9, 1), (5, -5), (7, -1), (6, 2), (3, -3), (5, 1), (1, -1), (4, -2), (4, 0), (3, 3), (6, -4), (4, 4), (8, -2), (7, -3), (2, 2), (10, 0), (5, 3), (1, 1), (5, -1), (6, 4), (0, 0), (8, 2), (7, 1), (2, -2), (6, 0), (9, -1), (8, 0), (4, 2), (5, -3), (5, 5), (4, -4), (3, 1), (3, -1), (6, -2), (2, 0)]
Br: Stage1: Computing F^ in direct base
Br: Stage2: Compressing F^+ according to its block diagonal form
Br: Stage3: Renumbers states -- creates superstates for ctqmc
Br: Stage4: F^dagger matrices between superstates evaluated
Have HB2
Number of operators needed 1  0
off_diagonal=0
Reading data with 1848 entries

       ============================
          DMFT_loop [30] 
       ============================

Reading SelfE_w ... imp[1]

 12.967674 seconds (31.84 k allocations: 28.392 MiB)
===== Calculating local green function ... =====
  5.153005 seconds (267.70 k allocations: 201.006 MiB)

===== Calculating weiss field from G_loc_iWn ... =====
  0.212802 seconds (228.85 k allocations: 11.967 MiB)

===== Calculating hybrid function from weiss field ... =====
  0.006975 seconds (99.35 k allocations: 8.731 MiB)

Writing hyb.json ...
Writing hyb.json ...



 CTQMC run ... imp[1]
 Preparing the input file of EDFMTF : actqmc.cix ...
0.0
Br: kindx= [(7, 3), (9, 1), (5, -5), (7, -1), (6, 2), (3, -3), (5, 1), (1, -1), (4, -2), (4, 0), (3, 3), (6, -4), (4, 4), (8, -2), (7, -3), (2, 2), (10, 0), (5, 3), (1, 1), (5, -1), (6, 4), (0, 0), (8, 2), (7, 1), (2, -2), (6, 0), (9, -1), (8, 0), (4, 2), (5, -3), (5, 5), (4, -4), (3, 1), (3, -1), (6, -2), (2, 0)]
Br: Stage1: Computing F^ in direct base
Br: Stage2: Compressing F^+ according to its block diagonal form
Br: Stage3: Renumbers states -- creates superstates for ctqmc
Br: Stage4: F^dagger matrices between superstates evaluated
Have HB2
Number of operators needed 1  0
off_diagonal=0
Reading data with 1848 entries

       ============================
          DMFT_loop [31] 
       ============================

Reading SelfE_w ... imp[1]

 12.969528 seconds (31.84 k allocations: 28.390 MiB)
===== Calculating local green function ... =====
  5.147464 seconds (267.75 k allocations: 201.009 MiB)

===== Calculating weiss field from G_loc_iWn ... =====
  0.197334 seconds (228.81 k allocations: 11.960 MiB)

===== Calculating hybrid function from weiss field ... =====
  0.006560 seconds (99.35 k allocations: 8.731 MiB)

Writing hyb.json ...
Writing hyb.json ...



 CTQMC run ... imp[1]
 Preparing the input file of EDFMTF : actqmc.cix ...
0.0
Br: kindx= [(7, 3), (9, 1), (5, -5), (7, -1), (6, 2), (3, -3), (5, 1), (1, -1), (4, -2), (4, 0), (3, 3), (6, -4), (4, 4), (8, -2), (7, -3), (2, 2), (10, 0), (5, 3), (1, 1), (5, -1), (6, 4), (0, 0), (8, 2), (7, 1), (2, -2), (6, 0), (9, -1), (8, 0), (4, 2), (5, -3), (5, 5), (4, -4), (3, 1), (3, -1), (6, -2), (2, 0)]
Br: Stage1: Computing F^ in direct base
Br: Stage2: Compressing F^+ according to its block diagonal form
Br: Stage3: Renumbers states -- creates superstates for ctqmc
Br: Stage4: F^dagger matrices between superstates evaluated
Have HB2
Number of operators needed 1  0
off_diagonal=0
Reading data with 1848 entries

       ============================
          DMFT_loop [32] 
       ============================

Reading SelfE_w ... imp[1]

 13.057768 seconds (31.87 k allocations: 28.391 MiB)
===== Calculating local green function ... =====
  5.148005 seconds (267.70 k allocations: 201.007 MiB)

===== Calculating weiss field from G_loc_iWn ... =====
  0.196350 seconds (228.80 k allocations: 11.958 MiB)

===== Calculating hybrid function from weiss field ... =====
  0.006774 seconds (99.35 k allocations: 8.731 MiB)

Writing hyb.json ...
Writing hyb.json ...



 CTQMC run ... imp[1]
 Preparing the input file of EDFMTF : actqmc.cix ...
0.0
Br: kindx= [(7, 3), (9, 1), (5, -5), (7, -1), (6, 2), (3, -3), (5, 1), (1, -1), (4, -2), (4, 0), (3, 3), (6, -4), (4, 4), (8, -2), (7, -3), (2, 2), (10, 0), (5, 3), (1, 1), (5, -1), (6, 4), (0, 0), (8, 2), (7, 1), (2, -2), (6, 0), (9, -1), (8, 0), (4, 2), (5, -3), (5, 5), (4, -4), (3, 1), (3, -1), (6, -2), (2, 0)]
Br: Stage1: Computing F^ in direct base
Br: Stage2: Compressing F^+ according to its block diagonal form
Br: Stage3: Renumbers states -- creates superstates for ctqmc
Br: Stage4: F^dagger matrices between superstates evaluated
Have HB2
Number of operators needed 1  0
off_diagonal=0
Reading data with 1848 entries

       ============================
          DMFT_loop [33] 
       ============================

Reading SelfE_w ... imp[1]

 13.042412 seconds (31.86 k allocations: 28.391 MiB)
===== Calculating local green function ... =====
  5.142219 seconds (267.77 k allocations: 201.009 MiB)

===== Calculating weiss field from G_loc_iWn ... =====
  0.191419 seconds (228.78 k allocations: 11.961 MiB)

===== Calculating hybrid function from weiss field ... =====
  0.006707 seconds (99.35 k allocations: 8.731 MiB)

Writing hyb.json ...
Writing hyb.json ...



 CTQMC run ... imp[1]
 Preparing the input file of EDFMTF : actqmc.cix ...
0.0
Br: kindx= [(7, 3), (9, 1), (5, -5), (7, -1), (6, 2), (3, -3), (5, 1), (1, -1), (4, -2), (4, 0), (3, 3), (6, -4), (4, 4), (8, -2), (7, -3), (2, 2), (10, 0), (5, 3), (1, 1), (5, -1), (6, 4), (0, 0), (8, 2), (7, 1), (2, -2), (6, 0), (9, -1), (8, 0), (4, 2), (5, -3), (5, 5), (4, -4), (3, 1), (3, -1), (6, -2), (2, 0)]
Br: Stage1: Computing F^ in direct base
Br: Stage2: Compressing F^+ according to its block diagonal form
Br: Stage3: Renumbers states -- creates superstates for ctqmc
Br: Stage4: F^dagger matrices between superstates evaluated
Have HB2
Number of operators needed 1  0
off_diagonal=0
Reading data with 1848 entries

       ============================
          DMFT_loop [34] 
       ============================

Reading SelfE_w ... imp[1]

 12.919394 seconds (31.83 k allocations: 28.390 MiB)
===== Calculating local green function ... =====
  5.124553 seconds (267.70 k allocations: 201.007 MiB)

===== Calculating weiss field from G_loc_iWn ... =====
  0.204310 seconds (228.80 k allocations: 11.959 MiB)

===== Calculating hybrid function from weiss field ... =====
  0.008681 seconds (99.35 k allocations: 8.731 MiB)

Writing hyb.json ...
Writing hyb.json ...



 CTQMC run ... imp[1]
 Preparing the input file of EDFMTF : actqmc.cix ...
0.0
Br: kindx= [(7, 3), (9, 1), (5, -5), (7, -1), (6, 2), (3, -3), (5, 1), (1, -1), (4, -2), (4, 0), (3, 3), (6, -4), (4, 4), (8, -2), (7, -3), (2, 2), (10, 0), (5, 3), (1, 1), (5, -1), (6, 4), (0, 0), (8, 2), (7, 1), (2, -2), (6, 0), (9, -1), (8, 0), (4, 2), (5, -3), (5, 5), (4, -4), (3, 1), (3, -1), (6, -2), (2, 0)]
Br: Stage1: Computing F^ in direct base
Br: Stage2: Compressing F^+ according to its block diagonal form
Br: Stage3: Renumbers states -- creates superstates for ctqmc
Br: Stage4: F^dagger matrices between superstates evaluated
Have HB2
Number of operators needed 1  0
off_diagonal=0
Reading data with 1848 entries

       ============================
          DMFT_loop [35] 
       ============================

Reading SelfE_w ... imp[1]

 12.940025 seconds (31.84 k allocations: 28.390 MiB)
===== Calculating local green function ... =====
  5.142738 seconds (267.72 k allocations: 201.009 MiB)

===== Calculating weiss field from G_loc_iWn ... =====
  0.210762 seconds (228.82 k allocations: 11.961 MiB)

===== Calculating hybrid function from weiss field ... =====
  0.006658 seconds (99.35 k allocations: 8.731 MiB)

Writing hyb.json ...
Writing hyb.json ...



 CTQMC run ... imp[1]
 Preparing the input file of EDFMTF : actqmc.cix ...
0.0
Br: kindx= [(7, 3), (9, 1), (5, -5), (7, -1), (6, 2), (3, -3), (5, 1), (1, -1), (4, -2), (4, 0), (3, 3), (6, -4), (4, 4), (8, -2), (7, -3), (2, 2), (10, 0), (5, 3), (1, 1), (5, -1), (6, 4), (0, 0), (8, 2), (7, 1), (2, -2), (6, 0), (9, -1), (8, 0), (4, 2), (5, -3), (5, 5), (4, -4), (3, 1), (3, -1), (6, -2), (2, 0)]
Br: Stage1: Computing F^ in direct base
Br: Stage2: Compressing F^+ according to its block diagonal form
Br: Stage3: Renumbers states -- creates superstates for ctqmc
Br: Stage4: F^dagger matrices between superstates evaluated
Have HB2
Number of operators needed 1  0
off_diagonal=0
Reading data with 1848 entries

       ============================
          DMFT_loop [36] 
       ============================

Reading SelfE_w ... imp[1]

 13.199075 seconds (31.84 k allocations: 28.387 MiB)
===== Calculating local green function ... =====
  5.131561 seconds (267.75 k allocations: 201.010 MiB)

===== Calculating weiss field from G_loc_iWn ... =====
  0.209827 seconds (228.81 k allocations: 11.959 MiB)

===== Calculating hybrid function from weiss field ... =====
  0.006729 seconds (99.35 k allocations: 8.731 MiB)

Writing hyb.json ...
Writing hyb.json ...



 CTQMC run ... imp[1]
 Preparing the input file of EDFMTF : actqmc.cix ...
0.0
Br: kindx= [(7, 3), (9, 1), (5, -5), (7, -1), (6, 2), (3, -3), (5, 1), (1, -1), (4, -2), (4, 0), (3, 3), (6, -4), (4, 4), (8, -2), (7, -3), (2, 2), (10, 0), (5, 3), (1, 1), (5, -1), (6, 4), (0, 0), (8, 2), (7, 1), (2, -2), (6, 0), (9, -1), (8, 0), (4, 2), (5, -3), (5, 5), (4, -4), (3, 1), (3, -1), (6, -2), (2, 0)]
Br: Stage1: Computing F^ in direct base
Br: Stage2: Compressing F^+ according to its block diagonal form
Br: Stage3: Renumbers states -- creates superstates for ctqmc
Br: Stage4: F^dagger matrices between superstates evaluated
Have HB2
Number of operators needed 1  0
off_diagonal=0
Reading data with 1848 entries

       ============================
          DMFT_loop [37] 
       ============================

Reading SelfE_w ... imp[1]

 13.031948 seconds (31.85 k allocations: 28.392 MiB)
===== Calculating local green function ... =====
  5.117451 seconds (267.76 k allocations: 201.008 MiB)

===== Calculating weiss field from G_loc_iWn ... =====
  0.202141 seconds (228.82 k allocations: 11.962 MiB)

===== Calculating hybrid function from weiss field ... =====
  0.007329 seconds (99.35 k allocations: 8.731 MiB)

Writing hyb.json ...
Writing hyb.json ...



 CTQMC run ... imp[1]
 Preparing the input file of EDFMTF : actqmc.cix ...
0.0
Br: kindx= [(7, 3), (9, 1), (5, -5), (7, -1), (6, 2), (3, -3), (5, 1), (1, -1), (4, -2), (4, 0), (3, 3), (6, -4), (4, 4), (8, -2), (7, -3), (2, 2), (10, 0), (5, 3), (1, 1), (5, -1), (6, 4), (0, 0), (8, 2), (7, 1), (2, -2), (6, 0), (9, -1), (8, 0), (4, 2), (5, -3), (5, 5), (4, -4), (3, 1), (3, -1), (6, -2), (2, 0)]
Br: Stage1: Computing F^ in direct base
Br: Stage2: Compressing F^+ according to its block diagonal form
Br: Stage3: Renumbers states -- creates superstates for ctqmc
Br: Stage4: F^dagger matrices between superstates evaluated
Have HB2
Number of operators needed 1  0
off_diagonal=0
Reading data with 1848 entries

       ============================
          DMFT_loop [38] 
       ============================

Reading SelfE_w ... imp[1]

 12.960422 seconds (31.84 k allocations: 28.390 MiB)
===== Calculating local green function ... =====
  5.111816 seconds (267.70 k allocations: 201.007 MiB)

===== Calculating weiss field from G_loc_iWn ... =====
  0.203669 seconds (228.84 k allocations: 11.961 MiB)

===== Calculating hybrid function from weiss field ... =====
  0.007135 seconds (99.35 k allocations: 8.731 MiB)

Writing hyb.json ...
Writing hyb.json ...



 CTQMC run ... imp[1]
 Preparing the input file of EDFMTF : actqmc.cix ...
0.0
Br: kindx= [(7, 3), (9, 1), (5, -5), (7, -1), (6, 2), (3, -3), (5, 1), (1, -1), (4, -2), (4, 0), (3, 3), (6, -4), (4, 4), (8, -2), (7, -3), (2, 2), (10, 0), (5, 3), (1, 1), (5, -1), (6, 4), (0, 0), (8, 2), (7, 1), (2, -2), (6, 0), (9, -1), (8, 0), (4, 2), (5, -3), (5, 5), (4, -4), (3, 1), (3, -1), (6, -2), (2, 0)]
Br: Stage1: Computing F^ in direct base
Br: Stage2: Compressing F^+ according to its block diagonal form
Br: Stage3: Renumbers states -- creates superstates for ctqmc
Br: Stage4: F^dagger matrices between superstates evaluated
Have HB2
Number of operators needed 1  0
off_diagonal=0
Reading data with 1848 entries

       ============================
          DMFT_loop [39] 
       ============================

Reading SelfE_w ... imp[1]

 13.003098 seconds (31.85 k allocations: 28.390 MiB)
===== Calculating local green function ... =====
  5.117940 seconds (267.80 k allocations: 201.011 MiB)

===== Calculating weiss field from G_loc_iWn ... =====
  0.217305 seconds (228.86 k allocations: 11.965 MiB)

===== Calculating hybrid function from weiss field ... =====
  0.006684 seconds (99.35 k allocations: 8.731 MiB)

Writing hyb.json ...
Writing hyb.json ...



 CTQMC run ... imp[1]
 Preparing the input file of EDFMTF : actqmc.cix ...
0.0
Br: kindx= [(7, 3), (9, 1), (5, -5), (7, -1), (6, 2), (3, -3), (5, 1), (1, -1), (4, -2), (4, 0), (3, 3), (6, -4), (4, 4), (8, -2), (7, -3), (2, 2), (10, 0), (5, 3), (1, 1), (5, -1), (6, 4), (0, 0), (8, 2), (7, 1), (2, -2), (6, 0), (9, -1), (8, 0), (4, 2), (5, -3), (5, 5), (4, -4), (3, 1), (3, -1), (6, -2), (2, 0)]
Br: Stage1: Computing F^ in direct base
Br: Stage2: Compressing F^+ according to its block diagonal form
Br: Stage3: Renumbers states -- creates superstates for ctqmc
Br: Stage4: F^dagger matrices between superstates evaluated
Have HB2
Number of operators needed 1  0
off_diagonal=0
Reading data with 1848 entries

       ============================
          DMFT_loop [40] 
       ============================

Reading SelfE_w ... imp[1]

 13.333426 seconds (31.88 k allocations: 28.396 MiB)
===== Calculating local green function ... =====
  5.137513 seconds (267.75 k allocations: 201.011 MiB)

===== Calculating weiss field from G_loc_iWn ... =====
  0.195502 seconds (228.80 k allocations: 11.960 MiB)

===== Calculating hybrid function from weiss field ... =====
  0.006674 seconds (99.35 k allocations: 8.731 MiB)

Writing hyb.json ...
Writing hyb.json ...



 CTQMC run ... imp[1]
 Preparing the input file of EDFMTF : actqmc.cix ...
0.0
Br: kindx= [(7, 3), (9, 1), (5, -5), (7, -1), (6, 2), (3, -3), (5, 1), (1, -1), (4, -2), (4, 0), (3, 3), (6, -4), (4, 4), (8, -2), (7, -3), (2, 2), (10, 0), (5, 3), (1, 1), (5, -1), (6, 4), (0, 0), (8, 2), (7, 1), (2, -2), (6, 0), (9, -1), (8, 0), (4, 2), (5, -3), (5, 5), (4, -4), (3, 1), (3, -1), (6, -2), (2, 0)]
Br: Stage1: Computing F^ in direct base
Br: Stage2: Compressing F^+ according to its block diagonal form
Br: Stage3: Renumbers states -- creates superstates for ctqmc
Br: Stage4: F^dagger matrices between superstates evaluated
Have HB2
Number of operators needed 1  0
off_diagonal=0
Reading data with 1848 entries

       ============================
          DMFT_loop [41] 
       ============================

Reading SelfE_w ... imp[1]

 13.027301 seconds (31.85 k allocations: 28.392 MiB)
===== Calculating local green function ... =====
  5.076633 seconds (267.75 k allocations: 201.008 MiB)

===== Calculating weiss field from G_loc_iWn ... =====
  0.188508 seconds (228.80 k allocations: 11.959 MiB)

===== Calculating hybrid function from weiss field ... =====
  0.006729 seconds (99.35 k allocations: 8.731 MiB)

Writing hyb.json ...
Writing hyb.json ...



 CTQMC run ... imp[1]
 Preparing the input file of EDFMTF : actqmc.cix ...
0.0
Br: kindx= [(7, 3), (9, 1), (5, -5), (7, -1), (6, 2), (3, -3), (5, 1), (1, -1), (4, -2), (4, 0), (3, 3), (6, -4), (4, 4), (8, -2), (7, -3), (2, 2), (10, 0), (5, 3), (1, 1), (5, -1), (6, 4), (0, 0), (8, 2), (7, 1), (2, -2), (6, 0), (9, -1), (8, 0), (4, 2), (5, -3), (5, 5), (4, -4), (3, 1), (3, -1), (6, -2), (2, 0)]
Br: Stage1: Computing F^ in direct base
Br: Stage2: Compressing F^+ according to its block diagonal form
Br: Stage3: Renumbers states -- creates superstates for ctqmc
Br: Stage4: F^dagger matrices between superstates evaluated
Have HB2
Number of operators needed 1  0
off_diagonal=0
Reading data with 1848 entries

       ============================
          DMFT_loop [42] 
       ============================

Reading SelfE_w ... imp[1]

 13.028849 seconds (31.85 k allocations: 28.387 MiB)
===== Calculating local green function ... =====
  5.108103 seconds (267.78 k allocations: 201.011 MiB)

===== Calculating weiss field from G_loc_iWn ... =====
  0.209719 seconds (228.82 k allocations: 11.962 MiB)

===== Calculating hybrid function from weiss field ... =====
  0.006676 seconds (99.35 k allocations: 8.731 MiB)

Writing hyb.json ...
Writing hyb.json ...



 CTQMC run ... imp[1]
 Preparing the input file of EDFMTF : actqmc.cix ...
0.0
Br: kindx= [(7, 3), (9, 1), (5, -5), (7, -1), (6, 2), (3, -3), (5, 1), (1, -1), (4, -2), (4, 0), (3, 3), (6, -4), (4, 4), (8, -2), (7, -3), (2, 2), (10, 0), (5, 3), (1, 1), (5, -1), (6, 4), (0, 0), (8, 2), (7, 1), (2, -2), (6, 0), (9, -1), (8, 0), (4, 2), (5, -3), (5, 5), (4, -4), (3, 1), (3, -1), (6, -2), (2, 0)]
Br: Stage1: Computing F^ in direct base
Br: Stage2: Compressing F^+ according to its block diagonal form
Br: Stage3: Renumbers states -- creates superstates for ctqmc
Br: Stage4: F^dagger matrices between superstates evaluated
Have HB2
Number of operators needed 1  0
off_diagonal=0
Reading data with 1848 entries

       ============================
          DMFT_loop [43] 
       ============================

Reading SelfE_w ... imp[1]

 13.068663 seconds (31.86 k allocations: 28.395 MiB)
===== Calculating local green function ... =====
  5.101759 seconds (267.71 k allocations: 201.010 MiB)

===== Calculating weiss field from G_loc_iWn ... =====
  0.193904 seconds (228.81 k allocations: 11.961 MiB)

===== Calculating hybrid function from weiss field ... =====
  0.006636 seconds (99.35 k allocations: 8.731 MiB)

Writing hyb.json ...
Writing hyb.json ...



 CTQMC run ... imp[1]
 Preparing the input file of EDFMTF : actqmc.cix ...
0.0
Br: kindx= [(7, 3), (9, 1), (5, -5), (7, -1), (6, 2), (3, -3), (5, 1), (1, -1), (4, -2), (4, 0), (3, 3), (6, -4), (4, 4), (8, -2), (7, -3), (2, 2), (10, 0), (5, 3), (1, 1), (5, -1), (6, 4), (0, 0), (8, 2), (7, 1), (2, -2), (6, 0), (9, -1), (8, 0), (4, 2), (5, -3), (5, 5), (4, -4), (3, 1), (3, -1), (6, -2), (2, 0)]
Br: Stage1: Computing F^ in direct base
Br: Stage2: Compressing F^+ according to its block diagonal form
Br: Stage3: Renumbers states -- creates superstates for ctqmc
Br: Stage4: F^dagger matrices between superstates evaluated
Have HB2
Number of operators needed 1  0
off_diagonal=0
Reading data with 1848 entries

       ============================
          DMFT_loop [44] 
       ============================

Reading SelfE_w ... imp[1]

 12.825486 seconds (31.82 k allocations: 28.389 MiB)
===== Calculating local green function ... =====
  5.070074 seconds (267.64 k allocations: 201.005 MiB)

===== Calculating weiss field from G_loc_iWn ... =====
  0.198221 seconds (228.81 k allocations: 11.963 MiB)

===== Calculating hybrid function from weiss field ... =====
  0.007141 seconds (99.35 k allocations: 8.731 MiB)

Writing hyb.json ...
Writing hyb.json ...



 CTQMC run ... imp[1]
 Preparing the input file of EDFMTF : actqmc.cix ...
0.0
Br: kindx= [(7, 3), (9, 1), (5, -5), (7, -1), (6, 2), (3, -3), (5, 1), (1, -1), (4, -2), (4, 0), (3, 3), (6, -4), (4, 4), (8, -2), (7, -3), (2, 2), (10, 0), (5, 3), (1, 1), (5, -1), (6, 4), (0, 0), (8, 2), (7, 1), (2, -2), (6, 0), (9, -1), (8, 0), (4, 2), (5, -3), (5, 5), (4, -4), (3, 1), (3, -1), (6, -2), (2, 0)]
Br: Stage1: Computing F^ in direct base
Br: Stage2: Compressing F^+ according to its block diagonal form
Br: Stage3: Renumbers states -- creates superstates for ctqmc
Br: Stage4: F^dagger matrices between superstates evaluated
Have HB2
Number of operators needed 1  0
off_diagonal=0
Reading data with 1848 entries

       ============================
          DMFT_loop [45] 
       ============================

Reading SelfE_w ... imp[1]

 12.919982 seconds (31.84 k allocations: 28.390 MiB)
===== Calculating local green function ... =====
  5.103537 seconds (267.69 k allocations: 201.007 MiB)

===== Calculating weiss field from G_loc_iWn ... =====
  0.188109 seconds (228.78 k allocations: 11.957 MiB)

===== Calculating hybrid function from weiss field ... =====
  0.007055 seconds (99.35 k allocations: 8.731 MiB)

Writing hyb.json ...
Writing hyb.json ...



 CTQMC run ... imp[1]
 Preparing the input file of EDFMTF : actqmc.cix ...
0.0
Br: kindx= [(7, 3), (9, 1), (5, -5), (7, -1), (6, 2), (3, -3), (5, 1), (1, -1), (4, -2), (4, 0), (3, 3), (6, -4), (4, 4), (8, -2), (7, -3), (2, 2), (10, 0), (5, 3), (1, 1), (5, -1), (6, 4), (0, 0), (8, 2), (7, 1), (2, -2), (6, 0), (9, -1), (8, 0), (4, 2), (5, -3), (5, 5), (4, -4), (3, 1), (3, -1), (6, -2), (2, 0)]
Br: Stage1: Computing F^ in direct base
Br: Stage2: Compressing F^+ according to its block diagonal form
Br: Stage3: Renumbers states -- creates superstates for ctqmc
Br: Stage4: F^dagger matrices between superstates evaluated
Have HB2
Number of operators needed 1  0
off_diagonal=0
Reading data with 1848 entries

       ============================
          DMFT_loop [46] 
       ============================

Reading SelfE_w ... imp[1]

 12.873844 seconds (31.84 k allocations: 28.392 MiB)
===== Calculating local green function ... =====
  5.117710 seconds (267.79 k allocations: 201.009 MiB)

===== Calculating weiss field from G_loc_iWn ... =====
  0.198759 seconds (228.80 k allocations: 11.961 MiB)

===== Calculating hybrid function from weiss field ... =====
  0.006672 seconds (99.35 k allocations: 8.731 MiB)

Writing hyb.json ...
Writing hyb.json ...



 CTQMC run ... imp[1]
 Preparing the input file of EDFMTF : actqmc.cix ...
0.0
Br: kindx= [(7, 3), (9, 1), (5, -5), (7, -1), (6, 2), (3, -3), (5, 1), (1, -1), (4, -2), (4, 0), (3, 3), (6, -4), (4, 4), (8, -2), (7, -3), (2, 2), (10, 0), (5, 3), (1, 1), (5, -1), (6, 4), (0, 0), (8, 2), (7, 1), (2, -2), (6, 0), (9, -1), (8, 0), (4, 2), (5, -3), (5, 5), (4, -4), (3, 1), (3, -1), (6, -2), (2, 0)]
Br: Stage1: Computing F^ in direct base
Br: Stage2: Compressing F^+ according to its block diagonal form
Br: Stage3: Renumbers states -- creates superstates for ctqmc
Br: Stage4: F^dagger matrices between superstates evaluated
Have HB2
Number of operators needed 1  0
off_diagonal=0
Reading data with 1848 entries

       ============================
          DMFT_loop [47] 
       ============================

Reading SelfE_w ... imp[1]

 12.886962 seconds (31.84 k allocations: 28.390 MiB)
===== Calculating local green function ... =====
  5.112920 seconds (267.75 k allocations: 201.009 MiB)

===== Calculating weiss field from G_loc_iWn ... =====
  0.197173 seconds (228.81 k allocations: 11.961 MiB)

===== Calculating hybrid function from weiss field ... =====
  0.006837 seconds (99.35 k allocations: 8.731 MiB)

Writing hyb.json ...
Writing hyb.json ...



 CTQMC run ... imp[1]
 Preparing the input file of EDFMTF : actqmc.cix ...
0.0
Br: kindx= [(7, 3), (9, 1), (5, -5), (7, -1), (6, 2), (3, -3), (5, 1), (1, -1), (4, -2), (4, 0), (3, 3), (6, -4), (4, 4), (8, -2), (7, -3), (2, 2), (10, 0), (5, 3), (1, 1), (5, -1), (6, 4), (0, 0), (8, 2), (7, 1), (2, -2), (6, 0), (9, -1), (8, 0), (4, 2), (5, -3), (5, 5), (4, -4), (3, 1), (3, -1), (6, -2), (2, 0)]
Br: Stage1: Computing F^ in direct base
Br: Stage2: Compressing F^+ according to its block diagonal form
Br: Stage3: Renumbers states -- creates superstates for ctqmc
Br: Stage4: F^dagger matrices between superstates evaluated
Have HB2
Number of operators needed 1  0
off_diagonal=0
Reading data with 1848 entries

       ============================
          DMFT_loop [48] 
       ============================

Reading SelfE_w ... imp[1]

 12.825132 seconds (31.84 k allocations: 28.392 MiB)
===== Calculating local green function ... =====
  5.115491 seconds (267.72 k allocations: 201.007 MiB)

===== Calculating weiss field from G_loc_iWn ... =====
  0.194398 seconds (228.79 k allocations: 11.961 MiB)

===== Calculating hybrid function from weiss field ... =====
  0.006717 seconds (99.35 k allocations: 8.731 MiB)

Writing hyb.json ...
Writing hyb.json ...



 CTQMC run ... imp[1]
 Preparing the input file of EDFMTF : actqmc.cix ...
0.0
Br: kindx= [(7, 3), (9, 1), (5, -5), (7, -1), (6, 2), (3, -3), (5, 1), (1, -1), (4, -2), (4, 0), (3, 3), (6, -4), (4, 4), (8, -2), (7, -3), (2, 2), (10, 0), (5, 3), (1, 1), (5, -1), (6, 4), (0, 0), (8, 2), (7, 1), (2, -2), (6, 0), (9, -1), (8, 0), (4, 2), (5, -3), (5, 5), (4, -4), (3, 1), (3, -1), (6, -2), (2, 0)]
Br: Stage1: Computing F^ in direct base
Br: Stage2: Compressing F^+ according to its block diagonal form
Br: Stage3: Renumbers states -- creates superstates for ctqmc
Br: Stage4: F^dagger matrices between superstates evaluated
Have HB2
Number of operators needed 1  0
off_diagonal=0
Reading data with 1848 entries

       ============================
          DMFT_loop [49] 
       ============================

Reading SelfE_w ... imp[1]

 12.837377 seconds (31.84 k allocations: 28.390 MiB)
===== Calculating local green function ... =====
  5.105114 seconds (267.77 k allocations: 201.009 MiB)

===== Calculating weiss field from G_loc_iWn ... =====
  0.197156 seconds (228.81 k allocations: 11.961 MiB)

===== Calculating hybrid function from weiss field ... =====
  0.006680 seconds (99.35 k allocations: 8.731 MiB)

Writing hyb.json ...
Writing hyb.json ...



 CTQMC run ... imp[1]
 Preparing the input file of EDFMTF : actqmc.cix ...
0.0
Br: kindx= [(7, 3), (9, 1), (5, -5), (7, -1), (6, 2), (3, -3), (5, 1), (1, -1), (4, -2), (4, 0), (3, 3), (6, -4), (4, 4), (8, -2), (7, -3), (2, 2), (10, 0), (5, 3), (1, 1), (5, -1), (6, 4), (0, 0), (8, 2), (7, 1), (2, -2), (6, 0), (9, -1), (8, 0), (4, 2), (5, -3), (5, 5), (4, -4), (3, 1), (3, -1), (6, -2), (2, 0)]
Br: Stage1: Computing F^ in direct base
Br: Stage2: Compressing F^+ according to its block diagonal form
Br: Stage3: Renumbers states -- creates superstates for ctqmc
Br: Stage4: F^dagger matrices between superstates evaluated
Have HB2
Number of operators needed 1  0
off_diagonal=0
Reading data with 1848 entries

       ============================
          DMFT_loop [50] 
       ============================

Reading SelfE_w ... imp[1]

 13.032148 seconds (31.88 k allocations: 28.396 MiB)
===== Calculating local green function ... =====
  5.116042 seconds (267.77 k allocations: 201.012 MiB)

===== Calculating weiss field from G_loc_iWn ... =====
  0.197754 seconds (228.81 k allocations: 11.961 MiB)

===== Calculating hybrid function from weiss field ... =====
  0.006745 seconds (99.35 k allocations: 8.731 MiB)

Writing hyb.json ...
Writing hyb.json ...



 CTQMC run ... imp[1]
 Preparing the input file of EDFMTF : actqmc.cix ...
0.0
Br: kindx= [(7, 3), (9, 1), (5, -5), (7, -1), (6, 2), (3, -3), (5, 1), (1, -1), (4, -2), (4, 0), (3, 3), (6, -4), (4, 4), (8, -2), (7, -3), (2, 2), (10, 0), (5, 3), (1, 1), (5, -1), (6, 4), (0, 0), (8, 2), (7, 1), (2, -2), (6, 0), (9, -1), (8, 0), (4, 2), (5, -3), (5, 5), (4, -4), (3, 1), (3, -1), (6, -2), (2, 0)]
Br: Stage1: Computing F^ in direct base
Br: Stage2: Compressing F^+ according to its block diagonal form
Br: Stage3: Renumbers states -- creates superstates for ctqmc
Br: Stage4: F^dagger matrices between superstates evaluated
Have HB2
Number of operators needed 1  0
off_diagonal=0
Reading data with 1848 entries
