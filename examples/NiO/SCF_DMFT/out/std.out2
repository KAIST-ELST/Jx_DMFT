


56

name: name2: nt:  
WIENROOT = /home/users1/xorwndekda/WIEN2K/WIEN2K_19.1_node09
WIEN_DMFT_ROOT = /home/users1/xorwndekda/WIEN2K/WIEN2K+eDMFT_node09/bin.intel
COMSUITE_BIN = /home/users1/xorwndekda/comsuite/COMSUITE/bin
MKLROOT=/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/mkl
CPLUS_INCLUDE_PATH=/home/users1/xorwndekda/intel/oneapi/clck/2021.1.1/include
MANPATH=/home/users1/xorwndekda/intel/man/common:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/mpi/man:/home/users1/xorwndekda/intel/man/common:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/mpi/man:/home/users1/xorwndekda/intel/documentation_2019/en/debugger/gdb-ia/man/:/home/users1/xorwndekda/intel/oneapi/debugger/10.0.0/documentation/man:/home/users1/xorwndekda/intel/oneapi/itac/2021.1.1/man:/home/users1/xorwndekda/intel/oneapi/mpi/2021.1.1/man:/home/users1/xorwndekda/intel/oneapi/clck/2021.1.1/man::::::/home/users1/xorwndekda/intel/oneapi/compiler/2021.1.1/documentation/en/man/common
XDG_SESSION_ID=3949
HOSTNAME=node02
VT_MPI=impi4
SGE_EXECD_PIDFILE=/var/run/gridengine/execd.pid
SGE_TASK_STEPSIZE=undefined
IPPROOT=/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/ipp
INTEL_LICENSE_FILE=/opt/intel/licenses:/home/users1/xorwndekda/intel/licenses:/home/users1/xorwndekda/intel/oneapi/clck/2021.1.1/licensing:/opt/intel/licenses:/home/users1/xorwndekda/intel/licenses:/Users/Shared/Library/Application Support/Intel/Licenses:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/licenses:/opt/intel/licenses:/home/users1/xorwndekda/intel/licenses:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/licenses:/opt/intel/licenses:/home/users1/xorwndekda/intel/licenses
SHELL=/bin/bash
CLCK_ROOT=/home/users1/xorwndekda/intel/oneapi/clck/2021.1.1
TERM=xterm-256color
NHOSTS=1
SGE_O_WORKDIR=/home/users1/xorwndekda/com/codepaper/examples/reasonable_set2/NiO/SCF_DMFT
TMPDIR=/tmp/65759.1.all.q
SSH_CLIENT=143.248.16.166 57602 22
SGE_O_HOME=/home/users1/xorwndekda
CONDA_SHLVL=3
BERRYPI_PATH=/home/users1/xorwndekda/WIEN2K/WIEN2K_19.1_node09/SRC_BerryPI/BerryPI
LIBRARY_PATH=/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/mpi/intel64/libfabric/lib:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/ipp/lib/intel64:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/compiler/lib/intel64_lin:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/mkl/lib/intel64_lin:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/tbb/lib/intel64/gcc4.7:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/tbb/lib/intel64/gcc4.7:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/daal/lib/intel64_lin:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/mpi/intel64/libfabric/lib:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/ipp/lib/intel64:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/compiler/lib/intel64_lin:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/mkl/lib/intel64_lin:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/tbb/lib/intel64/gcc4.7:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/tbb/lib/intel64/gcc4.7:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/daal/lib/intel64_lin:/home/users1/xorwndekda/intel/oneapi/compiler/2021.1.1/linux/compiler/lib/intel64_lin:/home/users1/xorwndekda/intel/oneapi/compiler/2021.1.1/linux/lib:/home/users1/xorwndekda/intel/oneapi/dal/2021.1.1/lib/intel64:/home/users1/xorwndekda/intel/oneapi/ccl/2021.1.1/lib/cpu_gpu_dpcpp:/home/users1/xorwndekda/intel/oneapi/dnnl/2021.1.1/cpu_dpcpp_gpu_dpcpp/lib:/home/users1/xorwndekda/intel/oneapi/ippcp/2021.1.1/lib/intel64:/home/users1/xorwndekda/intel/oneapi/mkl/latest/lib/intel64:/home/users1/xorwndekda/intel/oneapi/mpi/2021.1.1//libfabric/lib:/home/users1/xorwndekda/intel/oneapi/mpi/2021.1.1//lib/release:/home/users1/xorwndekda/intel/oneapi/mpi/2021.1.1//lib:/home/users1/xorwndekda/intel/oneapi/ipp/2021.1.1/lib/intel64:/home/users1/xorwndekda/intel/oneapi/vpl/2021.1.1/lib:/home/users1/xorwndekda/intel/oneapi/tbb/2021.1.1/env/../lib/intel64/gcc4.8:/home/users1/xorwndekda/intel/oneapi/clck/2021.1.1/lib/intel64
SGE_ARCH=lx26-amd64
CONDA_PROMPT_MODIFIER=(eDMFT) 
SGE_CELL=default
PDFREADER=okular
COMSUITE_BIN=/home/users1/xorwndekda/comsuite/COMSUITE/bin
RESTARTED=0
SSH_TTY=/dev/pts/16
OCTAVE_EXEC_PATH=/home/users1/xorwndekda/WIEN2K/WIEN2K_19.1_node09:/home/users1/xorwndekda/WIEN2K/WIEN2K_19.1_node09/SRC_structeditor/bin:/home/users1/xorwndekda/WIEN2K/WIEN2K_19.1_node09/SRC_IRelast/script-elastic:/home/users1/xorwndekda/opt/bin:/home/users1/xorwndekda/opt/local/mvapich2.3.3/2.3.3/bin:/home/users1/xorwndekda/bin:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/bin/intel64:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/mpi/intel64/libfabric/bin:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/mpi/intel64/bin:/home/users1/xorwndekda/intel/debugger_2019/gdb/intel64/bin:/home/users1/xorwndekda/bin:/home/users1/xorwndekda/.local/bin:/home/users1/xorwndekda/opt/bin:/home/users1/xorwndekda/WIEN2K/WIEN2K_17.1:/home/users1/xorwndekda/WIEN2K/WIEN2K_17.1/SRC_structeditor/bin:/home/users1/xorwndekda/WIEN2K/WIEN2K_17.1/SRC_IRelast/script-elastic:/home/users1/xorwndekda/intel/oneapi/compiler/2021.1.1/linux/bin/intel64:/home/users1/xorwndekda/intel/oneapi/compiler/2021.1.1/linux/bin:/home/users1/xorwndekda/intel/oneapi/compiler/2021.1.1/linux/ioc/bin:/home/users1/xorwndekda/intel/oneapi/mkl/latest/bin/intel64:/home/users1/xorwndekda/intel/oneapi/debugger/10.0.0/gdb/intel64/bin:/home/users1/xorwndekda/intel/oneapi/advisor/2021.1.1/bin64:/home/users1/xorwndekda/intel/oneapi/inspector/2021.1.1/bin64:/home/users1/xorwndekda/intel/oneapi/itac/2021.1.1/bin:/home/users1/xorwndekda/intel/oneapi/itac/2021.1.1/bin:/home/users1/xorwndekda/intel/oneapi/vtune/2021.1.1/bin64:/home/users1/xorwndekda/intel/oneapi/mpi/2021.1.1/libfabric/bin:/home/users1/xorwndekda/intel/oneapi/mpi/2021.1.1/bin:/home/users1/xorwndekda/miniconda3/bin:/home/users1/xorwndekda/intel/oneapi/intelpython/latest/condabin:/home/users1/xorwndekda/intel/oneapi/vpl/2021.1.1/bin:/home/users1/xorwndekda/intel/oneapi/dpcpp-ct/2021.1.1/bin:/home/users1/xorwndekda/intel/oneapi/dev-utilities/2021.1.1/bin:/home/users1/xorwndekda/intel/oneapi/clck/2021.1.1/bin/intel64:/home/users1/xorwndekda/comsuite/comsuite_20210226/comsuite-master/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:.:/home/users1/xorwndekda/WIEN2K/WIEN2K_17.1:.:/home/users1/xorwndekda/julia/julia-1.6.2/bin:.::
ARC=lx26-amd64
OCL_ICD_FILENAMES=/home/users1/xorwndekda/intel/oneapi/compiler/2021.1.1/linux/lib/x64/libintelocl.so
CCL_CONFIGURATION=cpu_gpu_dpcpp
USER=xorwndekda
LS_COLORS=rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.jpg=01;35:*.jpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:
IPPCRYPTOROOT=/home/users1/xorwndekda/intel/oneapi/ippcp/2021.1.1
LD_LIBRARY_PATH=/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/compiler/lib/intel64_lin:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/mpi/intel64/libfabric/lib:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/mpi/intel64/lib/release:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/mpi/intel64/lib:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/ipp/lib/intel64:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/compiler/lib/intel64_lin:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/mkl/lib/intel64_lin:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/tbb/lib/intel64/gcc4.7:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/tbb/lib/intel64/gcc4.7:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/daal/lib/intel64_lin:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/compiler/lib/intel64_lin:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/mpi/intel64/libfabric/lib:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/mpi/intel64/lib/release:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/mpi/intel64/lib:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/ipp/lib/intel64:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/compiler/lib/intel64_lin:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/mkl/lib/intel64_lin:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/tbb/lib/intel64/gcc4.7:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/tbb/lib/intel64/gcc4.7:/home/users1/xorwndekda/intel/debugger_2019/libipt/intel64/lib:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/daal/lib/intel64_lin:/home/users1/xorwndekda/intel/oneapi/compiler/2021.1.1/linux/lib:/home/users1/xorwndekda/intel/oneapi/compiler/2021.1.1/linux/lib/x64:/home/users1/xorwndekda/intel/oneapi/compiler/2021.1.1/linux/lib/emu:/home/users1/xorwndekda/intel/oneapi/compiler/2021.1.1/linux/compiler/lib/intel64_lin:/home/users1/xorwndekda/intel/oneapi/compiler/2021.1.1/linux/compiler/lib:/home/users1/xorwndekda/intel/oneapi/dal/2021.1.1/lib/intel64:/home/users1/xorwndekda/intel/oneapi/ccl/2021.1.1/lib/cpu_gpu_dpcpp:/home/users1/xorwndekda/intel/oneapi/dnnl/2021.1.1/cpu_dpcpp_gpu_dpcpp/lib:/home/users1/xorwndekda/intel/oneapi/ippcp/2021.1.1/lib/intel64:/home/users1/xorwndekda/intel/oneapi/mkl/latest/lib/intel64:/home/users1/xorwndekda/intel/oneapi/debugger/10.0.0/dep/lib:/home/users1/xorwndekda/intel/oneapi/debugger/10.0.0/libipt/intel64/lib:/home/users1/xorwndekda/intel/oneapi/debugger/10.0.0/gdb/intel64/lib:/home/users1/xorwndekda/intel/oneapi/itac/2021.1.1/slib:/home/users1/xorwndekda/intel/oneapi/mpi/2021.1.1//libfabric/lib:/home/users1/xorwndekda/intel/oneapi/mpi/2021.1.1//lib/release:/home/users1/xorwndekda/intel/oneapi/mpi/2021.1.1//lib:/home/users1/xorwndekda/intel/oneapi/ipp/2021.1.1/lib/intel64:/home/users1/xorwndekda/intel/oneapi/vpl/2021.1.1/lib:/home/users1/xorwndekda/intel/oneapi/tbb/2021.1.1/env/../lib/intel64/gcc4.8
DALROOT=/home/users1/xorwndekda/intel/oneapi/dal/2021.1.1
PSTLROOT=/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/pstl
MKL_TARGET_ARCH=intel64
SGE_TASK_LAST=undefined
CONDA_EXE=/home/users1/xorwndekda/miniconda3/bin/conda
QUEUE=all.q
FI_PROVIDER_PATH=/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/mpi/intel64/libfabric/lib/prov
CPATH=/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/ipp/include:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/mkl/include:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/pstl/include:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/tbb/include:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/tbb/include:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/daal/include:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/ipp/include:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/mkl/include:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/pstl/include:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/tbb/include:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/tbb/include:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/daal/include:/home/users1/xorwndekda/intel/oneapi/compiler/2021.1.1/linux/include:/home/users1/xorwndekda/intel/oneapi/dal/2021.1.1/include:/home/users1/xorwndekda/intel/oneapi/ccl/2021.1.1/include/cpu_gpu_dpcpp:/home/users1/xorwndekda/intel/oneapi/dnnl/2021.1.1/cpu_dpcpp_gpu_dpcpp/lib:/home/users1/xorwndekda/intel/oneapi/ippcp/2021.1.1/include:/home/users1/xorwndekda/intel/oneapi/mkl/latest/include:/home/users1/xorwndekda/intel/oneapi/dpl/2021.1.1/linux/include:/home/users1/xorwndekda/intel/oneapi/mpi/2021.1.1//include:/home/users1/xorwndekda/intel/oneapi/ipp/2021.1.1/include:/home/users1/xorwndekda/intel/oneapi/vpl/2021.1.1/include:/home/users1/xorwndekda/intel/oneapi/dpcpp-ct/2021.1.1/include:/home/users1/xorwndekda/intel/oneapi/tbb/2021.1.1/env/../include:/home/users1/xorwndekda/intel/oneapi/dev-utilities/2021.1.1/include
OPENMX_BIN=/home/users1/xorwndekda/openmx/openmx3.8/source
OCTAVE_PATH=/home/users1/xorwndekda/WIEN2K/WIEN2K_19.1_node09/SRC_structeditor/bin::
SGE_TASK_ID=undefined
IPPCP_TARGET_ARCH=intel64
_CE_CONDA=
NLSPATH=/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/compiler/lib/intel64/locale/%l_%t/%N:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/mkl/lib/intel64_lin/locale/%l_%t/%N:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/compiler/lib/intel64/locale/%l_%t/%N:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/mkl/lib/intel64_lin/locale/%l_%t/%N:/home/users1/xorwndekda/intel/debugger_2019/gdb/intel64/share/locale/%l_%t/%N:/home/users1/xorwndekda/intel/oneapi/mkl/latest/lib/intel64/locale/%l_%t/%N
SETVARS_COMPLETED=1
CONDA_PREFIX_1=/home/users1/xorwndekda/intel/oneapi/intelpython/latest
SGE_BINARY_PATH=/usr/sbin/lx26-amd64
VT_ADD_LIBS=-ldwarf -lelf -lvtunwind -lm -lpthread
MAIL=/var/mail/xorwndekda
PATH=/home/users1/xorwndekda/opt/bin:/home/users1/xorwndekda/opt/local/mvapich2.3.3/2.3.3/bin:/home/users1/xorwndekda/bin:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/bin/intel64:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/mpi/intel64/libfabric/bin:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/mpi/intel64/bin:/home/users1/xorwndekda/bin:/tmp/65759.1.all.q:/home/users1/xorwndekda/openmx/openmx3.8/source:/home/users1/xorwndekda/comsuite/COMSUITE/bin:/home/users1/xorwndekda/WIEN2K/WIEN2K+eDMFT_node09/bin.intel:/home/users1/xorwndekda/WIEN2K/WIEN2K_19.1_node09:/home/users1/xorwndekda/WIEN2K/WIEN2K_19.1_node09/SRC_structeditor/bin:/home/users1/xorwndekda/WIEN2K/WIEN2K_19.1_node09/SRC_IRelast/script-elastic:/home/users1/xorwndekda/opt/bin:/home/users1/xorwndekda/opt/local/mvapich2.3.3/2.3.3/bin:/home/users1/xorwndekda/bin:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/bin/intel64:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/mpi/intel64/libfabric/bin:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/mpi/intel64/bin:/home/users1/xorwndekda/intel/debugger_2019/gdb/intel64/bin:/home/users1/xorwndekda/bin:/home/users1/xorwndekda/.local/bin:/home/users1/xorwndekda/opt/bin:/home/users1/xorwndekda/WIEN2K/WIEN2K_17.1:/home/users1/xorwndekda/WIEN2K/WIEN2K_17.1/SRC_structeditor/bin:/home/users1/xorwndekda/WIEN2K/WIEN2K_17.1/SRC_IRelast/script-elastic:/home/users1/xorwndekda/intel/oneapi/compiler/2021.1.1/linux/bin/intel64:/home/users1/xorwndekda/intel/oneapi/compiler/2021.1.1/linux/bin:/home/users1/xorwndekda/intel/oneapi/compiler/2021.1.1/linux/ioc/bin:/home/users1/xorwndekda/intel/oneapi/mkl/latest/bin/intel64:/home/users1/xorwndekda/intel/oneapi/debugger/10.0.0/gdb/intel64/bin:/home/users1/xorwndekda/intel/oneapi/advisor/2021.1.1/bin64:/home/users1/xorwndekda/intel/oneapi/inspector/2021.1.1/bin64:/home/users1/xorwndekda/intel/oneapi/itac/2021.1.1/bin:/home/users1/xorwndekda/intel/oneapi/itac/2021.1.1/bin:/home/users1/xorwndekda/intel/oneapi/vtune/2021.1.1/bin64:/home/users1/xorwndekda/intel/oneapi/mpi/2021.1.1/libfabric/bin:/home/users1/xorwndekda/intel/oneapi/mpi/2021.1.1/bin:/home/users1/xorwndekda/miniconda3/envs/eDMFT/bin:/home/users1/xorwndekda/intel/oneapi/intelpython/latest/condabin:/home/users1/xorwndekda/intel/oneapi/vpl/2021.1.1/bin:/home/users1/xorwndekda/intel/oneapi/dpcpp-ct/2021.1.1/bin:/home/users1/xorwndekda/intel/oneapi/dev-utilities/2021.1.1/bin:/home/users1/xorwndekda/intel/oneapi/clck/2021.1.1/bin/intel64:/home/users1/xorwndekda/comsuite/comsuite_20210226/comsuite-master/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:.:/home/users1/xorwndekda/WIEN2K/WIEN2K_17.1:.:/home/users1/xorwndekda/julia/julia-1.6.2/bin:.:/home/users1/xorwndekda/WIEN2K/WIEN2K_19.1_node09:.:/home/users1/xorwndekda/WIEN2K/WIEN2K_19.1_node09:.
CONDA_PREFIX_2=/home/users1/xorwndekda/miniconda3
STRUCTEDIT_PATH=/home/users1/xorwndekda/WIEN2K/WIEN2K_19.1_node09/SRC_structeditor/bin
W2WEB_CASE_BASEDIR=/home/users1/xorwndekda/WIEN2k
SGE_STDERR_PATH=/home/users1/xorwndekda/com/codepaper/examples/reasonable_set2/NiO/SCF_DMFT/std.out2
CONDA_PREFIX=/home/users1/xorwndekda/miniconda3/envs/eDMFT
VPL_BIN=/home/users1/xorwndekda/intel/oneapi/vpl/2021.1.1/bin
TBBROOT=/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/tbb
PWD=/home/users1/xorwndekda/com/codepaper/examples/reasonable_set2/NiO/SCF_DMFT
SGE_STDOUT_PATH=/home/users1/xorwndekda/com/codepaper/examples/reasonable_set2/NiO/SCF_DMFT/std.out2
SGE_ACCOUNT=sge
SGE_RSH_COMMAND=/usr/bin/ssh
EDITOR=vim
DPCT_BUNDLE_ROOT=/home/users1/xorwndekda/intel/oneapi/dpcpp-ct/2021.1.1
DNNLROOT=/home/users1/xorwndekda/intel/oneapi/dnnl/2021.1.1/cpu_dpcpp_gpu_dpcpp
LANG=en_US.UTF-8
JOB_SCRIPT=/var/spool/gridengine/execd/node02/job_scripts/65759
JOB_NAME=run_comsuite_mvapich.mj2.sh
VPL_ROOT=/home/users1/xorwndekda/intel/oneapi/vpl/2021.1.1
VT_LIB_DIR=/home/users1/xorwndekda/intel/oneapi/itac/2021.1.1/lib
SGE_ROOT=/var/lib/gridengine
INSPECTOR_2021_DIR=/home/users1/xorwndekda/intel/oneapi/inspector/2021.1.1
DAL_MAJOR_BINARY=1
REQNAME=run_comsuite_mvapich.mj2.sh
VT_ROOT=/home/users1/xorwndekda/intel/oneapi/itac/2021.1.1
IPP_TARGET_ARCH=intel64
BERRYPI_PYTHON=/usr/bin/python2.7
DAALROOT=/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/daal
SGE_JOB_SPOOL_DIR=/var/spool/gridengine/execd/node02/active_jobs/65759.1
ENVIRONMENT=BATCH
DAL_MINOR_BINARY=0
_CE_M=
VPL_INCLUDE=/home/users1/xorwndekda/intel/oneapi/vpl/2021.1.1/include
PE_HOSTFILE=/var/spool/gridengine/execd/node02/active_jobs/65759.1/pe_hostfile
INTEL_PYTHONHOME=/home/users1/xorwndekda/intel/debugger_2019/python/intel64/
CCL_ROOT=/home/users1/xorwndekda/intel/oneapi/ccl/2021.1.1
HOME=/home/users1/xorwndekda
SHLVL=2
SGE_CWD_PATH=/home/users1/xorwndekda/com/codepaper/examples/reasonable_set2/NiO/SCF_DMFT
NQUEUES=1
LANGUAGE=en_US:en
SGE_O_LOGNAME=xorwndekda
SGE_O_MAIL=/var/mail/xorwndekda
VT_SLIB_DIR=/home/users1/xorwndekda/intel/oneapi/itac/2021.1.1/slib
WIEN_DMFT_ROOT=/home/users1/xorwndekda/WIEN2K/WIEN2K+eDMFT_node09/bin.intel
VTUNE_PROFILER_2021_DIR=/home/users1/xorwndekda/intel/oneapi/vtune/2021.1.1
TMP=/tmp/65759.1.all.q
JOB_ID=65759
PYTHONPATH=/home/users1/xorwndekda/intel/oneapi/advisor/2021.1.1/pythonapi
CONDA_PYTHON_EXE=/home/users1/xorwndekda/miniconda3/bin/python
LOGNAME=xorwndekda
APM=/home/users1/xorwndekda/intel/oneapi/advisor/2021.1.1/perfmodels
PE=orte
SSH_CONNECTION=143.248.16.166 57602 143.248.2.88 22
XDG_DATA_DIRS=/usr/local/share:/usr/share:/var/lib/snapd/desktop
CLASSPATH=/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/mpi/intel64/lib/mpi.jar:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/daal/lib/daal.jar:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/mpi/intel64/lib/mpi.jar:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/daal/lib/daal.jar:/home/users1/xorwndekda/intel/oneapi/dal/2021.1.1/lib/onedal.jar:/home/users1/xorwndekda/intel/oneapi/mpi/2021.1.1//lib/mpi.jar
SGE_TASK_FIRST=undefined
OMP_NUM_THREADS=1
CONDA_DEFAULT_ENV=eDMFT
PKG_CONFIG_PATH=/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/mkl/bin/pkgconfig:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/mkl/bin/pkgconfig:/home/users1/xorwndekda/intel/oneapi/mkl/latest/tools/pkgconfig:/home/users1/xorwndekda/intel/oneapi/advisor/2021.1.1/include/pkgconfig/lib64:/home/users1/xorwndekda/intel/oneapi/inspector/2021.1.1/include/pkgconfig/lib64:/home/users1/xorwndekda/intel/oneapi/vtune/2021.1.1/include/pkgconfig/lib64:
LESSOPEN=| /usr/bin/lesspipe %s
SGE_O_PATH=/home/users1/xorwndekda/openmx/openmx3.8/source:/home/users1/xorwndekda/comsuite/COMSUITE/bin:/home/users1/xorwndekda/WIEN2K/WIEN2K+eDMFT_node09/bin.intel:/home/users1/xorwndekda/WIEN2K/WIEN2K_19.1_node09:/home/users1/xorwndekda/WIEN2K/WIEN2K_19.1_node09/SRC_structeditor/bin:/home/users1/xorwndekda/WIEN2K/WIEN2K_19.1_node09/SRC_IRelast/script-elastic:/home/users1/xorwndekda/opt/bin:/home/users1/xorwndekda/opt/local/mvapich2.3.3/2.3.3/bin:/home/users1/xorwndekda/bin:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/bin/intel64:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/mpi/intel64/libfabric/bin:/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/mpi/intel64/bin:/home/users1/xorwndekda/intel/debugger_2019/gdb/intel64/bin:/home/users1/xorwndekda/bin:/home/users1/xorwndekda/.local/bin:/home/users1/xorwndekda/opt/bin:/home/users1/xorwndekda/WIEN2K/WIEN2K_17.1:/home/users1/xorwndekda/WIEN2K/WIEN2K_17.1/SRC_structeditor/bin:/home/users1/xorwndekda/WIEN2K/WIEN2K_17.1/SRC_IRelast/script-elastic:/home/users1/xorwndekda/intel/oneapi/compiler/2021.1.1/linux/bin/intel64:/home/users1/xorwndekda/intel/oneapi/compiler/2021.1.1/linux/bin:/home/users1/xorwndekda/intel/oneapi/compiler/2021.1.1/linux/ioc/bin:/home/users1/xorwndekda/intel/oneapi/mkl/latest/bin/intel64:/home/users1/xorwndekda/intel/oneapi/debugger/10.0.0/gdb/intel64/bin:/home/users1/xorwndekda/intel/oneapi/advisor/2021.1.1/bin64:/home/users1/xorwndekda/intel/oneapi/inspector/2021.1.1/bin64:/home/users1/xorwndekda/intel/oneapi/itac/2021.1.1/bin:/home/users1/xorwndekda/intel/oneapi/itac/2021.1.1/bin:/home/users1/xorwndekda/intel/oneapi/vtune/2021.1.1/bin64:/home/users1/xorwndekda/intel/oneapi/mpi/2021.1.1/libfabric/bin:/home/users1/xorwndekda/intel/oneapi/mpi/2021.1.1/bin:/home/users1/xorwndekda/miniconda3/envs/eDMFT/bin:/home/users1/xorwndekda/intel/oneapi/intelpython/latest/condabin:/home/users1/xorwndekda/intel/oneapi/vpl/2021.1.1/bin:/home/users1/xorwndekda/intel/oneapi/dpcpp-ct/2021.1.1/bin:/home/users1/xorwndekda/intel/oneapi/dev-utilities/2021.1.1/bin:/home/users1/xorwndekda/intel/oneapi/clck/2021.1.1/bin/intel64:/home/users1/xorwndekda/comsuite/comsuite_20210226/comsuite-master/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:.:/home/users1/xorwndekda/WIEN2K/WIEN2K_17.1:.:/home/users1/xorwndekda/julia/julia-1.6.2/bin:.:/home/users1/xorwndekda/WIEN2K/WIEN2K_19.1_node09:.:/home/users1/xorwndekda/WIEN2K/WIEN2K_19.1_node09:.
WIENROOT=/home/users1/xorwndekda/WIEN2K/WIEN2K_19.1_node09
INFOPATH=/home/users1/xorwndekda/intel/documentation_2019/en/debugger/gdb-ia/info/:/home/users1/xorwndekda/intel/oneapi/debugger/10.0.0/documentation/info/
SGE_O_HOST=node00
SGE_O_SHELL=/bin/bash
CMAKE_PREFIX_PATH=/home/users1/xorwndekda/intel/oneapi/vpl:/home/users1/xorwndekda/intel/oneapi/tbb/2021.1.1/env/..:
DISPLAY=localhost:27.0
XDG_RUNTIME_DIR=/run/user/1009
ADVISOR_2021_DIR=/home/users1/xorwndekda/intel/oneapi/advisor/2021.1.1
CCL_ATL_TRANSPORT_PATH=/home/users1/xorwndekda/intel/oneapi/ccl/2021.1.1/lib/cpu_gpu_dpcpp
REQUEST=run_comsuite_mvapich.mj2.sh
ONEAPI_ROOT=/home/users1/xorwndekda/intel/oneapi
NSLOTS=56
LESSCLOSE=/usr/bin/lesspipe %s %s
SGE_STDIN_PATH=/dev/null
VPL_LIB=/home/users1/xorwndekda/intel/oneapi/vpl/2021.1.1/lib
SCRATCH=./
_SYSTEMCTL_SKIP_REDIRECT=true
I_MPI_ROOT=/home/users1/xorwndekda/intel/compilers_and_libraries_2019.4.243/linux/mpi
_=/usr/bin/env
Will run command: julia_rsh -np 56 -machinefile /tmp/65759.1.all.q/machines
node02
node02
node02
node02
node02
node02
node02
node02
node02
node02
node02
node02
node02
node02
node02
node02
node02
node02
node02
node02
node02
node02
node02
node02
node02
node02
node02
node02
node02
node02
node02
node02
node02
node02
node02
node02
node02
node02
node02
node02
node02
node02
node02
node02
node02
node02
node02
node02
node02
node02
node02
node02
node02
node02
node02
node02
sh: 55: source: not found
 DFTforge Version 1.3.0
WARNING: could not import HDF5.Group into _hdf5_implementation
WARNING: could not import HDF5.Dataset into _hdf5_implementation
┌ Warning: Error requiring `HDF5` from `Plots`
│   exception =
│    LoadError: UndefVarError: Group not defined
│    Stacktrace:
│      [1] top-level scope
│        @ ~/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:161
│      [2] include(mod::Module, _path::String)
│        @ Base ./Base.jl:386
│      [3] include(x::String)
│        @ Plots ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1
│      [4] top-level scope
│        @ ~/.julia/packages/Plots/HcxwM/src/init.jl:46
│      [5] eval
│        @ ./boot.jl:360 [inlined]
│      [6] eval
│        @ ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1 [inlined]
│      [7] (::Plots.var"#285#321")()
│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:99
│      [8] err(f::Any, listener::Module, modname::String)
│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:47
│      [9] (::Plots.var"#284#320")()
│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:98
│     [10] withpath(f::Any, path::String)
│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:37
│     [11] (::Plots.var"#283#319")()
│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:97
│     [12] listenpkg(f::Any, pkg::Base.PkgId)
│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:20
│     [13] macro expansion
│        @ ~/.julia/packages/Requires/7Ncym/src/require.jl:95 [inlined]
│     [14] __init__()
│        @ Plots ~/.julia/packages/Plots/HcxwM/src/init.jl:44
│     [15] _include_from_serialized(path::String, depmods::Vector{Any})
│        @ Base ./loading.jl:696
│     [16] _require_search_from_serialized(pkg::Base.PkgId, sourcepath::String)
│        @ Base ./loading.jl:782
│     [17] _require(pkg::Base.PkgId)
│        @ Base ./loading.jl:1020
│     [18] require(uuidkey::Base.PkgId)
│        @ Base ./loading.jl:936
│     [19] require(into::Module, mod::Symbol)
│        @ Base ./loading.jl:923
│     [20] include(mod::Module, _path::String)
│        @ Base ./Base.jl:386
│     [21] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:285
│     [22] _start()
│        @ Base ./client.jl:485
│    in expression starting at /home/users1/xorwndekda/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:36
└ @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:49
      From worker 2:	WARNING: could not import HDF5.Group into _hdf5_implementation
      From worker 2:	WARNING: could not import HDF5.Dataset into _hdf5_implementation
      From worker 2:	┌ Warning: Error requiring `HDF5` from `Plots`
      From worker 2:	│   exception =
      From worker 2:	│    LoadError: UndefVarError: Group not defined
      From worker 2:	│    Stacktrace:
      From worker 2:	│      [1] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:161
      From worker 2:	│      [2] include(mod::Module, _path::String)
      From worker 2:	│        @ Base ./Base.jl:386
      From worker 2:	│      [3] include(x::String)
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1
      From worker 2:	│      [4] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/init.jl:46
      From worker 2:	│      [5] eval
      From worker 2:	│        @ ./boot.jl:360 [inlined]
      From worker 2:	│      [6] eval
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1 [inlined]
      From worker 2:	│      [7] (::Plots.var"#285#321")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:99
      From worker 2:	│      [8] err(f::Any, listener::Module, modname::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:47
      From worker 2:	│      [9] (::Plots.var"#284#320")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:98
      From worker 2:	│     [10] withpath(f::Any, path::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:37
      From worker 2:	│     [11] (::Plots.var"#283#319")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:97
      From worker 2:	│     [12] listenpkg(f::Any, pkg::Base.PkgId)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:20
      From worker 2:	│     [13] macro expansion
      From worker 2:	│        @ ~/.julia/packages/Requires/7Ncym/src/require.jl:95 [inlined]
      From worker 2:	│     [14] __init__()
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/init.jl:44
      From worker 2:	│     [15] _include_from_serialized(path::String, depmods::Vector{Any})
      From worker 2:	│        @ Base ./loading.jl:696
      From worker 2:	│     [16] _require_search_from_serialized(pkg::Base.PkgId, sourcepath::String)
      From worker 2:	│        @ Base ./loading.jl:782
      From worker 2:	│     [17] _require(pkg::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:1020
      From worker 2:	│     [18] require(uuidkey::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:936
      From worker 2:	│     [19] (::Distributed.var"#1#2"{Base.PkgId})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/Distributed.jl:79
      From worker 2:	│     [20] (::Distributed.var"#103#104"{Distributed.CallMsg{:call}})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:274
      From worker 2:	│     [21] run_work_thunk(thunk::Distributed.var"#103#104"{Distributed.CallMsg{:call}}, print_error::Bool)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:63
      From worker 2:	│     [22] run_work_thunk(rv::Distributed.RemoteValue, thunk::Function)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:72
      From worker 2:	│     [23] (::Distributed.var"#96#98"{Distributed.RemoteValue, Distributed.var"#103#104"{Distributed.CallMsg{:call}}})()
      From worker 2:	│        @ Distributed ./task.jl:411
      From worker 2:	│    in expression starting at /home/users1/xorwndekda/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:36
      From worker 2:	└ @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:49
      From worker 2:	┌ Warning: Error requiring `HDF5` from `Plots`
      From worker 2:	│   exception =
      From worker 2:	│    LoadError: UndefVarError: Group not defined
      From worker 2:	│    Stacktrace:
      From worker 2:	│      [1] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:161
      From worker 2:	│      [2] include(mod::Module, _path::String)
      From worker 2:	│        @ Base ./Base.jl:386
      From worker 2:	│      [3] include(x::String)
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1
      From worker 2:	│      [4] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/init.jl:46
      From worker 2:	│      [5] eval
      From worker 2:	│        @ ./boot.jl:360 [inlined]
      From worker 2:	│      [6] eval
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1 [inlined]
      From worker 2:	│      [7] (::Plots.var"#285#321")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:99
      From worker 2:	│      [8] err(f::Any, listener::Module, modname::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:47
      From worker 2:	│      [9] (::Plots.var"#284#320")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:98
      From worker 2:	│     [10] withpath(f::Any, path::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:37
      From worker 2:	│     [11] (::Plots.var"#283#319")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:97
      From worker 2:	│     [12] listenpkg(f::Any, pkg::Base.PkgId)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:20
      From worker 2:	│     [13] macro expansion
      From worker 2:	│        @ ~/.julia/packages/Requires/7Ncym/src/require.jl:95 [inlined]
      From worker 2:	│     [14] __init__()
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/init.jl:44
      From worker 2:	│     [15] _include_from_serialized(path::String, depmods::Vector{Any})
      From worker 2:	│        @ Base ./loading.jl:696
      From worker 2:	│     [16] _require_search_from_serialized(pkg::Base.PkgId, sourcepath::String)
      From worker 2:	│        @ Base ./loading.jl:782
      From worker 2:	│     [17] _require(pkg::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:1020
      From worker 2:	│     [18] require(uuidkey::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:936
      From worker 2:	│     [19] (::Distributed.var"#1#2"{Base.PkgId})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/Distributed.jl:79
      From worker 2:	│     [20] (::Distributed.var"#103#104"{Distributed.CallMsg{:call}})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:274
      From worker 2:	│     [21] run_work_thunk(thunk::Distributed.var"#103#104"{Distributed.CallMsg{:call}}, print_error::Bool)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:63
      From worker 2:	│     [22] run_work_thunk(rv::Distributed.RemoteValue, thunk::Function)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:72
      From worker 2:	│     [23] (::Distributed.var"#96#98"{Distributed.RemoteValue, Distributed.var"#103#104"{Distributed.CallMsg{:call}}})()
      From worker 2:	│        @ Distributed ./task.jl:411
      From worker 2:	│    in expression starting at /home/users1/xorwndekda/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:36
      From worker 2:	└ @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:49
      From worker 2:	┌ Warning: Error requiring `HDF5` from `Plots`
      From worker 2:	│   exception =
      From worker 2:	│    LoadError: UndefVarError: Group not defined
      From worker 2:	│    Stacktrace:
      From worker 2:	│      [1] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:161
      From worker 2:	│      [2] include(mod::Module, _path::String)
      From worker 2:	│        @ Base ./Base.jl:386
      From worker 2:	│      [3] include(x::String)
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1
      From worker 2:	│      [4] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/init.jl:46
      From worker 2:	│      [5] eval
      From worker 2:	│        @ ./boot.jl:360 [inlined]
      From worker 2:	│      [6] eval
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1 [inlined]
      From worker 2:	│      [7] (::Plots.var"#285#321")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:99
      From worker 2:	│      [8] err(f::Any, listener::Module, modname::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:47
      From worker 2:	│      [9] (::Plots.var"#284#320")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:98
      From worker 2:	│     [10] withpath(f::Any, path::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:37
      From worker 2:	│     [11] (::Plots.var"#283#319")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:97
      From worker 2:	│     [12] listenpkg(f::Any, pkg::Base.PkgId)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:20
      From worker 2:	│     [13] macro expansion
      From worker 2:	│        @ ~/.julia/packages/Requires/7Ncym/src/require.jl:95 [inlined]
      From worker 2:	│     [14] __init__()
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/init.jl:44
      From worker 2:	│     [15] _include_from_serialized(path::String, depmods::Vector{Any})
      From worker 2:	│        @ Base ./loading.jl:696
      From worker 2:	│     [16] _require_search_from_serialized(pkg::Base.PkgId, sourcepath::String)
      From worker 2:	│        @ Base ./loading.jl:782
      From worker 2:	│     [17] _require(pkg::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:1020
      From worker 2:	│     [18] require(uuidkey::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:936
      From worker 2:	│     [19] (::Distributed.var"#1#2"{Base.PkgId})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/Distributed.jl:79
      From worker 2:	│     [20] (::Distributed.var"#103#104"{Distributed.CallMsg{:call}})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:274
      From worker 2:	│     [21] run_work_thunk(thunk::Distributed.var"#103#104"{Distributed.CallMsg{:call}}, print_error::Bool)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:63
      From worker 2:	│     [22] run_work_thunk(rv::Distributed.RemoteValue, thunk::Function)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:72
      From worker 2:	│     [23] (::Distributed.var"#96#98"{Distributed.RemoteValue, Distributed.var"#103#104"{Distributed.CallMsg{:call}}})()
      From worker 2:	│        @ Distributed ./task.jl:411
      From worker 2:	│    in expression starting at /home/users1/xorwndekda/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:36
      From worker 2:	└ @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:49
      From worker 2:	┌ Warning: Error requiring `HDF5` from `Plots`
      From worker 2:	│   exception =
      From worker 2:	│    LoadError: UndefVarError: Group not defined
      From worker 2:	│    Stacktrace:
      From worker 2:	│      [1] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:161
      From worker 2:	│      [2] include(mod::Module, _path::String)
      From worker 2:	│        @ Base ./Base.jl:386
      From worker 2:	│      [3] include(x::String)
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1
      From worker 2:	│      [4] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/init.jl:46
      From worker 2:	│      [5] eval
      From worker 2:	│        @ ./boot.jl:360 [inlined]
      From worker 2:	│      [6] eval
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1 [inlined]
      From worker 2:	│      [7] (::Plots.var"#285#321")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:99
      From worker 2:	│      [8] err(f::Any, listener::Module, modname::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:47
      From worker 2:	│      [9] (::Plots.var"#284#320")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:98
      From worker 2:	│     [10] withpath(f::Any, path::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:37
      From worker 2:	│     [11] (::Plots.var"#283#319")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:97
      From worker 2:	│     [12] listenpkg(f::Any, pkg::Base.PkgId)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:20
      From worker 2:	│     [13] macro expansion
      From worker 2:	│        @ ~/.julia/packages/Requires/7Ncym/src/require.jl:95 [inlined]
      From worker 2:	│     [14] __init__()
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/init.jl:44
      From worker 2:	│     [15] _include_from_serialized(path::String, depmods::Vector{Any})
      From worker 2:	│        @ Base ./loading.jl:696
      From worker 2:	│     [16] _require_search_from_serialized(pkg::Base.PkgId, sourcepath::String)
      From worker 2:	│        @ Base ./loading.jl:782
      From worker 2:	│     [17] _require(pkg::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:1020
      From worker 2:	│     [18] require(uuidkey::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:936
      From worker 2:	│     [19] (::Distributed.var"#1#2"{Base.PkgId})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/Distributed.jl:79
      From worker 2:	│     [20] (::Distributed.var"#103#104"{Distributed.CallMsg{:call}})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:274
      From worker 2:	│     [21] run_work_thunk(thunk::Distributed.var"#103#104"{Distributed.CallMsg{:call}}, print_error::Bool)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:63
      From worker 2:	│     [22] run_work_thunk(rv::Distributed.RemoteValue, thunk::Function)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:72
      From worker 2:	│     [23] (::Distributed.var"#96#98"{Distributed.RemoteValue, Distributed.var"#103#104"{Distributed.CallMsg{:call}}})()
      From worker 2:	│        @ Distributed ./task.jl:411
      From worker 2:	│    in expression starting at /home/users1/xorwndekda/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:36
      From worker 2:	└ @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:49
      From worker 2:	┌ Warning: Error requiring `HDF5` from `Plots`
      From worker 2:	│   exception =
      From worker 2:	│    LoadError: UndefVarError: Group not defined
      From worker 2:	│    Stacktrace:
      From worker 2:	│      [1] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:161
      From worker 2:	│      [2] include(mod::Module, _path::String)
      From worker 2:	│        @ Base ./Base.jl:386
      From worker 2:	│      [3] include(x::String)
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1
      From worker 2:	│      [4] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/init.jl:46
      From worker 2:	│      [5] eval
      From worker 2:	│        @ ./boot.jl:360 [inlined]
      From worker 2:	│      [6] eval
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1 [inlined]
      From worker 2:	│      [7] (::Plots.var"#285#321")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:99
      From worker 2:	│      [8] err(f::Any, listener::Module, modname::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:47
      From worker 2:	│      [9] (::Plots.var"#284#320")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:98
      From worker 2:	│     [10] withpath(f::Any, path::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:37
      From worker 2:	│     [11] (::Plots.var"#283#319")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:97
      From worker 2:	│     [12] listenpkg(f::Any, pkg::Base.PkgId)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:20
      From worker 2:	│     [13] macro expansion
      From worker 2:	│        @ ~/.julia/packages/Requires/7Ncym/src/require.jl:95 [inlined]
      From worker 2:	│     [14] __init__()
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/init.jl:44
      From worker 2:	│     [15] _include_from_serialized(path::String, depmods::Vector{Any})
      From worker 2:	│        @ Base ./loading.jl:696
      From worker 2:	│     [16] _require_search_from_serialized(pkg::Base.PkgId, sourcepath::String)
      From worker 2:	│        @ Base ./loading.jl:782
      From worker 2:	│     [17] _require(pkg::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:1020
      From worker 2:	│     [18] require(uuidkey::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:936
      From worker 2:	│     [19] (::Distributed.var"#1#2"{Base.PkgId})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/Distributed.jl:79
      From worker 2:	│     [20] (::Distributed.var"#103#104"{Distributed.CallMsg{:call}})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:274
      From worker 2:	│     [21] run_work_thunk(thunk::Distributed.var"#103#104"{Distributed.CallMsg{:call}}, print_error::Bool)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:63
      From worker 2:	│     [22] run_work_thunk(rv::Distributed.RemoteValue, thunk::Function)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:72
      From worker 2:	│     [23] (::Distributed.var"#96#98"{Distributed.RemoteValue, Distributed.var"#103#104"{Distributed.CallMsg{:call}}})()
      From worker 2:	│        @ Distributed ./task.jl:411
      From worker 2:	│    in expression starting at /home/users1/xorwndekda/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:36
      From worker 2:	└ @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:49
      From worker 2:	┌ Warning: Error requiring `HDF5` from `Plots`
      From worker 2:	│   exception =
      From worker 2:	│    LoadError: UndefVarError: Group not defined
      From worker 2:	│    Stacktrace:
      From worker 2:	│      [1] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:161
      From worker 2:	│      [2] include(mod::Module, _path::String)
      From worker 2:	│        @ Base ./Base.jl:386
      From worker 2:	│      [3] include(x::String)
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1
      From worker 2:	│      [4] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/init.jl:46
      From worker 2:	│      [5] eval
      From worker 2:	│        @ ./boot.jl:360 [inlined]
      From worker 2:	│      [6] eval
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1 [inlined]
      From worker 2:	│      [7] (::Plots.var"#285#321")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:99
      From worker 2:	│      [8] err(f::Any, listener::Module, modname::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:47
      From worker 2:	│      [9] (::Plots.var"#284#320")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:98
      From worker 2:	│     [10] withpath(f::Any, path::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:37
      From worker 2:	│     [11] (::Plots.var"#283#319")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:97
      From worker 2:	│     [12] listenpkg(f::Any, pkg::Base.PkgId)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:20
      From worker 2:	│     [13] macro expansion
      From worker 2:	│        @ ~/.julia/packages/Requires/7Ncym/src/require.jl:95 [inlined]
      From worker 2:	│     [14] __init__()
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/init.jl:44
      From worker 2:	│     [15] _include_from_serialized(path::String, depmods::Vector{Any})
      From worker 2:	│        @ Base ./loading.jl:696
      From worker 2:	│     [16] _require_search_from_serialized(pkg::Base.PkgId, sourcepath::String)
      From worker 2:	│        @ Base ./loading.jl:782
      From worker 2:	│     [17] _require(pkg::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:1020
      From worker 2:	│     [18] require(uuidkey::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:936
      From worker 2:	│     [19] (::Distributed.var"#1#2"{Base.PkgId})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/Distributed.jl:79
      From worker 2:	│     [20] (::Distributed.var"#103#104"{Distributed.CallMsg{:call}})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:274
      From worker 2:	│     [21] run_work_thunk(thunk::Distributed.var"#103#104"{Distributed.CallMsg{:call}}, print_error::Bool)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:63
      From worker 2:	│     [22] run_work_thunk(rv::Distributed.RemoteValue, thunk::Function)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:72
      From worker 2:	│     [23] (::Distributed.var"#96#98"{Distributed.RemoteValue, Distributed.var"#103#104"{Distributed.CallMsg{:call}}})()
      From worker 2:	│        @ Distributed ./task.jl:411
      From worker 2:	│    in expression starting at /home/users1/xorwndekda/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:36
      From worker 2:	└ @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:49
      From worker 2:	┌ Warning: Error requiring `HDF5` from `Plots`
      From worker 2:	│   exception =
      From worker 2:	│    LoadError: UndefVarError: Group not defined
      From worker 2:	│    Stacktrace:
      From worker 2:	│      [1] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:161
      From worker 2:	│      [2] include(mod::Module, _path::String)
      From worker 2:	│        @ Base ./Base.jl:386
      From worker 2:	│      [3] include(x::String)
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1
      From worker 2:	│      [4] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/init.jl:46
      From worker 2:	│      [5] eval
      From worker 2:	│        @ ./boot.jl:360 [inlined]
      From worker 2:	│      [6] eval
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1 [inlined]
      From worker 2:	│      [7] (::Plots.var"#285#321")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:99
      From worker 2:	│      [8] err(f::Any, listener::Module, modname::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:47
      From worker 2:	│      [9] (::Plots.var"#284#320")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:98
      From worker 2:	│     [10] withpath(f::Any, path::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:37
      From worker 2:	│     [11] (::Plots.var"#283#319")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:97
      From worker 2:	│     [12] listenpkg(f::Any, pkg::Base.PkgId)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:20
      From worker 2:	│     [13] macro expansion
      From worker 2:	│        @ ~/.julia/packages/Requires/7Ncym/src/require.jl:95 [inlined]
      From worker 2:	│     [14] __init__()
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/init.jl:44
      From worker 2:	│     [15] _include_from_serialized(path::String, depmods::Vector{Any})
      From worker 2:	│        @ Base ./loading.jl:696
      From worker 2:	│     [16] _require_search_from_serialized(pkg::Base.PkgId, sourcepath::String)
      From worker 2:	│        @ Base ./loading.jl:782
      From worker 2:	│     [17] _require(pkg::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:1020
      From worker 2:	│     [18] require(uuidkey::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:936
      From worker 2:	│     [19] (::Distributed.var"#1#2"{Base.PkgId})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/Distributed.jl:79
      From worker 2:	│     [20] (::Distributed.var"#103#104"{Distributed.CallMsg{:call}})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:274
      From worker 2:	│     [21] run_work_thunk(thunk::Distributed.var"#103#104"{Distributed.CallMsg{:call}}, print_error::Bool)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:63
      From worker 2:	│     [22] run_work_thunk(rv::Distributed.RemoteValue, thunk::Function)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:72
      From worker 2:	│     [23] (::Distributed.var"#96#98"{Distributed.RemoteValue, Distributed.var"#103#104"{Distributed.CallMsg{:call}}})()
      From worker 2:	│        @ Distributed ./task.jl:411
      From worker 2:	│    in expression starting at /home/users1/xorwndekda/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:36
      From worker 2:	└ @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:49
      From worker 2:	┌ Warning: Error requiring `HDF5` from `Plots`
      From worker 2:	│   exception =
      From worker 2:	│    LoadError: UndefVarError: Group not defined
      From worker 2:	│    Stacktrace:
      From worker 2:	│      [1] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:161
      From worker 2:	│      [2] include(mod::Module, _path::String)
      From worker 2:	│        @ Base ./Base.jl:386
      From worker 2:	│      [3] include(x::String)
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1
      From worker 2:	│      [4] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/init.jl:46
      From worker 2:	│      [5] eval
      From worker 2:	│        @ ./boot.jl:360 [inlined]
      From worker 2:	│      [6] eval
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1 [inlined]
      From worker 2:	│      [7] (::Plots.var"#285#321")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:99
      From worker 2:	│      [8] err(f::Any, listener::Module, modname::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:47
      From worker 2:	│      [9] (::Plots.var"#284#320")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:98
      From worker 2:	│     [10] withpath(f::Any, path::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:37
      From worker 2:	│     [11] (::Plots.var"#283#319")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:97
      From worker 2:	│     [12] listenpkg(f::Any, pkg::Base.PkgId)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:20
      From worker 2:	│     [13] macro expansion
      From worker 2:	│        @ ~/.julia/packages/Requires/7Ncym/src/require.jl:95 [inlined]
      From worker 2:	│     [14] __init__()
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/init.jl:44
      From worker 2:	│     [15] _include_from_serialized(path::String, depmods::Vector{Any})
      From worker 2:	│        @ Base ./loading.jl:696
      From worker 2:	│     [16] _require_search_from_serialized(pkg::Base.PkgId, sourcepath::String)
      From worker 2:	│        @ Base ./loading.jl:782
      From worker 2:	│     [17] _require(pkg::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:1020
      From worker 2:	│     [18] require(uuidkey::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:936
      From worker 2:	│     [19] (::Distributed.var"#1#2"{Base.PkgId})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/Distributed.jl:79
      From worker 2:	│     [20] (::Distributed.var"#103#104"{Distributed.CallMsg{:call}})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:274
      From worker 2:	│     [21] run_work_thunk(thunk::Distributed.var"#103#104"{Distributed.CallMsg{:call}}, print_error::Bool)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:63
      From worker 2:	│     [22] run_work_thunk(rv::Distributed.RemoteValue, thunk::Function)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:72
      From worker 2:	│     [23] (::Distributed.var"#96#98"{Distributed.RemoteValue, Distributed.var"#103#104"{Distributed.CallMsg{:call}}})()
      From worker 2:	│        @ Distributed ./task.jl:411
      From worker 2:	│    in expression starting at /home/users1/xorwndekda/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:36
      From worker 2:	└ @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:49
      From worker 2:	┌ Warning: Error requiring `HDF5` from `Plots`
      From worker 2:	│   exception =
      From worker 2:	│    LoadError: UndefVarError: Group not defined
      From worker 2:	│    Stacktrace:
      From worker 2:	│      [1] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:161
      From worker 2:	│      [2] include(mod::Module, _path::String)
      From worker 2:	│        @ Base ./Base.jl:386
      From worker 2:	│      [3] include(x::String)
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1
      From worker 2:	│      [4] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/init.jl:46
      From worker 2:	│      [5] eval
      From worker 2:	│        @ ./boot.jl:360 [inlined]
      From worker 2:	│      [6] eval
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1 [inlined]
      From worker 2:	│      [7] (::Plots.var"#285#321")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:99
      From worker 2:	│      [8] err(f::Any, listener::Module, modname::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:47
      From worker 2:	│      [9] (::Plots.var"#284#320")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:98
      From worker 2:	│     [10] withpath(f::Any, path::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:37
      From worker 2:	│     [11] (::Plots.var"#283#319")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:97
      From worker 2:	│     [12] listenpkg(f::Any, pkg::Base.PkgId)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:20
      From worker 2:	│     [13] macro expansion
      From worker 2:	│        @ ~/.julia/packages/Requires/7Ncym/src/require.jl:95 [inlined]
      From worker 2:	│     [14] __init__()
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/init.jl:44
      From worker 2:	│     [15] _include_from_serialized(path::String, depmods::Vector{Any})
      From worker 2:	│        @ Base ./loading.jl:696
      From worker 2:	│     [16] _require_search_from_serialized(pkg::Base.PkgId, sourcepath::String)
      From worker 2:	│        @ Base ./loading.jl:782
      From worker 2:	│     [17] _require(pkg::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:1020
      From worker 2:	│     [18] require(uuidkey::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:936
      From worker 2:	│     [19] (::Distributed.var"#1#2"{Base.PkgId})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/Distributed.jl:79
      From worker 2:	│     [20] (::Distributed.var"#103#104"{Distributed.CallMsg{:call}})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:274
      From worker 2:	│     [21] run_work_thunk(thunk::Distributed.var"#103#104"{Distributed.CallMsg{:call}}, print_error::Bool)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:63
      From worker 2:	│     [22] run_work_thunk(rv::Distributed.RemoteValue, thunk::Function)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:72
      From worker 2:	│     [23] (::Distributed.var"#96#98"{Distributed.RemoteValue, Distributed.var"#103#104"{Distributed.CallMsg{:call}}})()
      From worker 2:	│        @ Distributed ./task.jl:411
      From worker 2:	│    in expression starting at /home/users1/xorwndekda/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:36
      From worker 2:	└ @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:49
      From worker 2:	┌ Warning: Error requiring `HDF5` from `Plots`
      From worker 2:	│   exception =
      From worker 2:	│    LoadError: UndefVarError: Group not defined
      From worker 2:	│    Stacktrace:
      From worker 2:	│      [1] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:161
      From worker 2:	│      [2] include(mod::Module, _path::String)
      From worker 2:	│        @ Base ./Base.jl:386
      From worker 2:	│      [3] include(x::String)
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1
      From worker 2:	│      [4] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/init.jl:46
      From worker 2:	│      [5] eval
      From worker 2:	│        @ ./boot.jl:360 [inlined]
      From worker 2:	│      [6] eval
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1 [inlined]
      From worker 2:	│      [7] (::Plots.var"#285#321")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:99
      From worker 2:	│      [8] err(f::Any, listener::Module, modname::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:47
      From worker 2:	│      [9] (::Plots.var"#284#320")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:98
      From worker 2:	│     [10] withpath(f::Any, path::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:37
      From worker 2:	│     [11] (::Plots.var"#283#319")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:97
      From worker 2:	│     [12] listenpkg(f::Any, pkg::Base.PkgId)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:20
      From worker 2:	│     [13] macro expansion
      From worker 2:	│        @ ~/.julia/packages/Requires/7Ncym/src/require.jl:95 [inlined]
      From worker 2:	│     [14] __init__()
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/init.jl:44
      From worker 2:	│     [15] _include_from_serialized(path::String, depmods::Vector{Any})
      From worker 2:	│        @ Base ./loading.jl:696
      From worker 2:	│     [16] _require_search_from_serialized(pkg::Base.PkgId, sourcepath::String)
      From worker 2:	│        @ Base ./loading.jl:782
      From worker 2:	│     [17] _require(pkg::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:1020
      From worker 2:	│     [18] require(uuidkey::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:936
      From worker 2:	│     [19] (::Distributed.var"#1#2"{Base.PkgId})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/Distributed.jl:79
      From worker 2:	│     [20] (::Distributed.var"#103#104"{Distributed.CallMsg{:call}})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:274
      From worker 2:	│     [21] run_work_thunk(thunk::Distributed.var"#103#104"{Distributed.CallMsg{:call}}, print_error::Bool)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:63
      From worker 2:	│     [22] run_work_thunk(rv::Distributed.RemoteValue, thunk::Function)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:72
      From worker 2:	│     [23] (::Distributed.var"#96#98"{Distributed.RemoteValue, Distributed.var"#103#104"{Distributed.CallMsg{:call}}})()
      From worker 2:	│        @ Distributed ./task.jl:411
      From worker 2:	│    in expression starting at /home/users1/xorwndekda/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:36
      From worker 2:	└ @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:49
      From worker 2:	┌ Warning: Error requiring `HDF5` from `Plots`
      From worker 2:	│   exception =
      From worker 2:	│    LoadError: UndefVarError: Group not defined
      From worker 2:	│    Stacktrace:
      From worker 2:	│      [1] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:161
      From worker 2:	│      [2] include(mod::Module, _path::String)
      From worker 2:	│        @ Base ./Base.jl:386
      From worker 2:	│      [3] include(x::String)
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1
      From worker 2:	│      [4] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/init.jl:46
      From worker 2:	│      [5] eval
      From worker 2:	│        @ ./boot.jl:360 [inlined]
      From worker 2:	│      [6] eval
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1 [inlined]
      From worker 2:	│      [7] (::Plots.var"#285#321")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:99
      From worker 2:	│      [8] err(f::Any, listener::Module, modname::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:47
      From worker 2:	│      [9] (::Plots.var"#284#320")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:98
      From worker 2:	│     [10] withpath(f::Any, path::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:37
      From worker 2:	│     [11] (::Plots.var"#283#319")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:97
      From worker 2:	│     [12] listenpkg(f::Any, pkg::Base.PkgId)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:20
      From worker 2:	│     [13] macro expansion
      From worker 2:	│        @ ~/.julia/packages/Requires/7Ncym/src/require.jl:95 [inlined]
      From worker 2:	│     [14] __init__()
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/init.jl:44
      From worker 2:	│     [15] _include_from_serialized(path::String, depmods::Vector{Any})
      From worker 2:	│        @ Base ./loading.jl:696
      From worker 2:	│     [16] _require_search_from_serialized(pkg::Base.PkgId, sourcepath::String)
      From worker 2:	│        @ Base ./loading.jl:782
      From worker 2:	│     [17] _require(pkg::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:1020
      From worker 2:	│     [18] require(uuidkey::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:936
      From worker 2:	│     [19] (::Distributed.var"#1#2"{Base.PkgId})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/Distributed.jl:79
      From worker 2:	│     [20] (::Distributed.var"#103#104"{Distributed.CallMsg{:call}})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:274
      From worker 2:	│     [21] run_work_thunk(thunk::Distributed.var"#103#104"{Distributed.CallMsg{:call}}, print_error::Bool)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:63
      From worker 2:	│     [22] run_work_thunk(rv::Distributed.RemoteValue, thunk::Function)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:72
      From worker 2:	│     [23] (::Distributed.var"#96#98"{Distributed.RemoteValue, Distributed.var"#103#104"{Distributed.CallMsg{:call}}})()
      From worker 2:	│        @ Distributed ./task.jl:411
      From worker 2:	│    in expression starting at /home/users1/xorwndekda/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:36
      From worker 2:	└ @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:49
      From worker 2:	┌ Warning: Error requiring `HDF5` from `Plots`
      From worker 2:	│   exception =
      From worker 2:	│    LoadError: UndefVarError: Group not defined
      From worker 2:	│    Stacktrace:
      From worker 2:	│      [1] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:161
      From worker 2:	│      [2] include(mod::Module, _path::String)
      From worker 2:	│        @ Base ./Base.jl:386
      From worker 2:	│      [3] include(x::String)
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1
      From worker 2:	│      [4] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/init.jl:46
      From worker 2:	│      [5] eval
      From worker 2:	│        @ ./boot.jl:360 [inlined]
      From worker 2:	│      [6] eval
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1 [inlined]
      From worker 2:	│      [7] (::Plots.var"#285#321")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:99
      From worker 2:	│      [8] err(f::Any, listener::Module, modname::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:47
      From worker 2:	│      [9] (::Plots.var"#284#320")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:98
      From worker 2:	│     [10] withpath(f::Any, path::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:37
      From worker 2:	│     [11] (::Plots.var"#283#319")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:97
      From worker 2:	│     [12] listenpkg(f::Any, pkg::Base.PkgId)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:20
      From worker 2:	│     [13] macro expansion
      From worker 2:	│        @ ~/.julia/packages/Requires/7Ncym/src/require.jl:95 [inlined]
      From worker 2:	│     [14] __init__()
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/init.jl:44
      From worker 2:	│     [15] _include_from_serialized(path::String, depmods::Vector{Any})
      From worker 2:	│        @ Base ./loading.jl:696
      From worker 2:	│     [16] _require_search_from_serialized(pkg::Base.PkgId, sourcepath::String)
      From worker 2:	│        @ Base ./loading.jl:782
      From worker 2:	│     [17] _require(pkg::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:1020
      From worker 2:	│     [18] require(uuidkey::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:936
      From worker 2:	│     [19] (::Distributed.var"#1#2"{Base.PkgId})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/Distributed.jl:79
      From worker 2:	│     [20] (::Distributed.var"#103#104"{Distributed.CallMsg{:call}})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:274
      From worker 2:	│     [21] run_work_thunk(thunk::Distributed.var"#103#104"{Distributed.CallMsg{:call}}, print_error::Bool)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:63
      From worker 2:	│     [22] run_work_thunk(rv::Distributed.RemoteValue, thunk::Function)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:72
      From worker 2:	│     [23] (::Distributed.var"#96#98"{Distributed.RemoteValue, Distributed.var"#103#104"{Distributed.CallMsg{:call}}})()
      From worker 2:	│        @ Distributed ./task.jl:411
      From worker 2:	│    in expression starting at /home/users1/xorwndekda/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:36
      From worker 2:	└ @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:49
      From worker 2:	┌ Warning: Error requiring `HDF5` from `Plots`
      From worker 2:	│   exception =
      From worker 2:	│    LoadError: UndefVarError: Group not defined
      From worker 2:	│    Stacktrace:
      From worker 2:	│      [1] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:161
      From worker 2:	│      [2] include(mod::Module, _path::String)
      From worker 2:	│        @ Base ./Base.jl:386
      From worker 2:	│      [3] include(x::String)
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1
      From worker 2:	│      [4] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/init.jl:46
      From worker 2:	│      [5] eval
      From worker 2:	│        @ ./boot.jl:360 [inlined]
      From worker 2:	│      [6] eval
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1 [inlined]
      From worker 2:	│      [7] (::Plots.var"#285#321")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:99
      From worker 2:	│      [8] err(f::Any, listener::Module, modname::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:47
      From worker 2:	│      [9] (::Plots.var"#284#320")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:98
      From worker 2:	│     [10] withpath(f::Any, path::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:37
      From worker 2:	│     [11] (::Plots.var"#283#319")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:97
      From worker 2:	│     [12] listenpkg(f::Any, pkg::Base.PkgId)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:20
      From worker 2:	│     [13] macro expansion
      From worker 2:	│        @ ~/.julia/packages/Requires/7Ncym/src/require.jl:95 [inlined]
      From worker 2:	│     [14] __init__()
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/init.jl:44
      From worker 2:	│     [15] _include_from_serialized(path::String, depmods::Vector{Any})
      From worker 2:	│        @ Base ./loading.jl:696
      From worker 2:	│     [16] _require_search_from_serialized(pkg::Base.PkgId, sourcepath::String)
      From worker 2:	│        @ Base ./loading.jl:782
      From worker 2:	│     [17] _require(pkg::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:1020
      From worker 2:	│     [18] require(uuidkey::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:936
      From worker 2:	│     [19] (::Distributed.var"#1#2"{Base.PkgId})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/Distributed.jl:79
      From worker 2:	│     [20] (::Distributed.var"#103#104"{Distributed.CallMsg{:call}})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:274
      From worker 2:	│     [21] run_work_thunk(thunk::Distributed.var"#103#104"{Distributed.CallMsg{:call}}, print_error::Bool)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:63
      From worker 2:	│     [22] run_work_thunk(rv::Distributed.RemoteValue, thunk::Function)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:72
      From worker 2:	│     [23] (::Distributed.var"#96#98"{Distributed.RemoteValue, Distributed.var"#103#104"{Distributed.CallMsg{:call}}})()
      From worker 2:	│        @ Distributed ./task.jl:411
      From worker 2:	│    in expression starting at /home/users1/xorwndekda/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:36
      From worker 2:	└ @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:49
      From worker 2:	┌ Warning: Error requiring `HDF5` from `Plots`
      From worker 2:	│   exception =
      From worker 2:	│    LoadError: UndefVarError: Group not defined
      From worker 2:	│    Stacktrace:
      From worker 2:	│      [1] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:161
      From worker 2:	│      [2] include(mod::Module, _path::String)
      From worker 2:	│        @ Base ./Base.jl:386
      From worker 2:	│      [3] include(x::String)
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1
      From worker 2:	│      [4] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/init.jl:46
      From worker 2:	│      [5] eval
      From worker 2:	│        @ ./boot.jl:360 [inlined]
      From worker 2:	│      [6] eval
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1 [inlined]
      From worker 2:	│      [7] (::Plots.var"#285#321")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:99
      From worker 2:	│      [8] err(f::Any, listener::Module, modname::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:47
      From worker 2:	│      [9] (::Plots.var"#284#320")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:98
      From worker 2:	│     [10] withpath(f::Any, path::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:37
      From worker 2:	│     [11] (::Plots.var"#283#319")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:97
      From worker 2:	│     [12] listenpkg(f::Any, pkg::Base.PkgId)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:20
      From worker 2:	│     [13] macro expansion
      From worker 2:	│        @ ~/.julia/packages/Requires/7Ncym/src/require.jl:95 [inlined]
      From worker 2:	│     [14] __init__()
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/init.jl:44
      From worker 2:	│     [15] _include_from_serialized(path::String, depmods::Vector{Any})
      From worker 2:	│        @ Base ./loading.jl:696
      From worker 2:	│     [16] _require_search_from_serialized(pkg::Base.PkgId, sourcepath::String)
      From worker 2:	│        @ Base ./loading.jl:782
      From worker 2:	│     [17] _require(pkg::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:1020
      From worker 2:	│     [18] require(uuidkey::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:936
      From worker 2:	│     [19] (::Distributed.var"#1#2"{Base.PkgId})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/Distributed.jl:79
      From worker 2:	│     [20] (::Distributed.var"#103#104"{Distributed.CallMsg{:call}})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:274
      From worker 2:	│     [21] run_work_thunk(thunk::Distributed.var"#103#104"{Distributed.CallMsg{:call}}, print_error::Bool)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:63
      From worker 2:	│     [22] run_work_thunk(rv::Distributed.RemoteValue, thunk::Function)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:72
      From worker 2:	│     [23] (::Distributed.var"#96#98"{Distributed.RemoteValue, Distributed.var"#103#104"{Distributed.CallMsg{:call}}})()
      From worker 2:	│        @ Distributed ./task.jl:411
      From worker 2:	│    in expression starting at /home/users1/xorwndekda/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:36
      From worker 2:	└ @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:49
      From worker 2:	┌ Warning: Error requiring `HDF5` from `Plots`
      From worker 2:	│   exception =
      From worker 2:	│    LoadError: UndefVarError: Group not defined
      From worker 2:	│    Stacktrace:
      From worker 2:	│      [1] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:161
      From worker 2:	│      [2] include(mod::Module, _path::String)
      From worker 2:	│        @ Base ./Base.jl:386
      From worker 2:	│      [3] include(x::String)
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1
      From worker 2:	│      [4] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/init.jl:46
      From worker 2:	│      [5] eval
      From worker 2:	│        @ ./boot.jl:360 [inlined]
      From worker 2:	│      [6] eval
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1 [inlined]
      From worker 2:	│      [7] (::Plots.var"#285#321")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:99
      From worker 2:	│      [8] err(f::Any, listener::Module, modname::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:47
      From worker 2:	│      [9] (::Plots.var"#284#320")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:98
      From worker 2:	│     [10] withpath(f::Any, path::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:37
      From worker 2:	│     [11] (::Plots.var"#283#319")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:97
      From worker 2:	│     [12] listenpkg(f::Any, pkg::Base.PkgId)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:20
      From worker 2:	│     [13] macro expansion
      From worker 2:	│        @ ~/.julia/packages/Requires/7Ncym/src/require.jl:95 [inlined]
      From worker 2:	│     [14] __init__()
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/init.jl:44
      From worker 2:	│     [15] _include_from_serialized(path::String, depmods::Vector{Any})
      From worker 2:	│        @ Base ./loading.jl:696
      From worker 2:	│     [16] _require_search_from_serialized(pkg::Base.PkgId, sourcepath::String)
      From worker 2:	│        @ Base ./loading.jl:782
      From worker 2:	│     [17] _require(pkg::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:1020
      From worker 2:	│     [18] require(uuidkey::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:936
      From worker 2:	│     [19] (::Distributed.var"#1#2"{Base.PkgId})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/Distributed.jl:79
      From worker 2:	│     [20] (::Distributed.var"#103#104"{Distributed.CallMsg{:call}})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:274
      From worker 2:	│     [21] run_work_thunk(thunk::Distributed.var"#103#104"{Distributed.CallMsg{:call}}, print_error::Bool)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:63
      From worker 2:	│     [22] run_work_thunk(rv::Distributed.RemoteValue, thunk::Function)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:72
      From worker 2:	│     [23] (::Distributed.var"#96#98"{Distributed.RemoteValue, Distributed.var"#103#104"{Distributed.CallMsg{:call}}})()
      From worker 2:	│        @ Distributed ./task.jl:411
      From worker 2:	│    in expression starting at /home/users1/xorwndekda/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:36
      From worker 2:	└ @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:49
      From worker 2:	┌ Warning: Error requiring `HDF5` from `Plots`
      From worker 2:	│   exception =
      From worker 2:	│    LoadError: UndefVarError: Group not defined
      From worker 2:	│    Stacktrace:
      From worker 2:	│      [1] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:161
      From worker 2:	│      [2] include(mod::Module, _path::String)
      From worker 2:	│        @ Base ./Base.jl:386
      From worker 2:	│      [3] include(x::String)
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1
      From worker 2:	│      [4] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/init.jl:46
      From worker 2:	│      [5] eval
      From worker 2:	│        @ ./boot.jl:360 [inlined]
      From worker 2:	│      [6] eval
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1 [inlined]
      From worker 2:	│      [7] (::Plots.var"#285#321")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:99
      From worker 2:	│      [8] err(f::Any, listener::Module, modname::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:47
      From worker 2:	│      [9] (::Plots.var"#284#320")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:98
      From worker 2:	│     [10] withpath(f::Any, path::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:37
      From worker 2:	│     [11] (::Plots.var"#283#319")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:97
      From worker 2:	│     [12] listenpkg(f::Any, pkg::Base.PkgId)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:20
      From worker 2:	│     [13] macro expansion
      From worker 2:	│        @ ~/.julia/packages/Requires/7Ncym/src/require.jl:95 [inlined]
      From worker 2:	│     [14] __init__()
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/init.jl:44
      From worker 2:	│     [15] _include_from_serialized(path::String, depmods::Vector{Any})
      From worker 2:	│        @ Base ./loading.jl:696
      From worker 2:	│     [16] _require_search_from_serialized(pkg::Base.PkgId, sourcepath::String)
      From worker 2:	│        @ Base ./loading.jl:782
      From worker 2:	│     [17] _require(pkg::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:1020
      From worker 2:	│     [18] require(uuidkey::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:936
      From worker 2:	│     [19] (::Distributed.var"#1#2"{Base.PkgId})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/Distributed.jl:79
      From worker 2:	│     [20] (::Distributed.var"#103#104"{Distributed.CallMsg{:call}})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:274
      From worker 2:	│     [21] run_work_thunk(thunk::Distributed.var"#103#104"{Distributed.CallMsg{:call}}, print_error::Bool)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:63
      From worker 2:	│     [22] run_work_thunk(rv::Distributed.RemoteValue, thunk::Function)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:72
      From worker 2:	│     [23] (::Distributed.var"#96#98"{Distributed.RemoteValue, Distributed.var"#103#104"{Distributed.CallMsg{:call}}})()
      From worker 2:	│        @ Distributed ./task.jl:411
      From worker 2:	│    in expression starting at /home/users1/xorwndekda/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:36
      From worker 2:	└ @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:49
      From worker 2:	┌ Warning: Error requiring `HDF5` from `Plots`
      From worker 2:	│   exception =
      From worker 2:	│    LoadError: UndefVarError: Group not defined
      From worker 2:	│    Stacktrace:
      From worker 2:	│      [1] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:161
      From worker 2:	│      [2] include(mod::Module, _path::String)
      From worker 2:	│        @ Base ./Base.jl:386
      From worker 2:	│      [3] include(x::String)
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1
      From worker 2:	│      [4] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/init.jl:46
      From worker 2:	│      [5] eval
      From worker 2:	│        @ ./boot.jl:360 [inlined]
      From worker 2:	│      [6] eval
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1 [inlined]
      From worker 2:	│      [7] (::Plots.var"#285#321")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:99
      From worker 2:	│      [8] err(f::Any, listener::Module, modname::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:47
      From worker 2:	│      [9] (::Plots.var"#284#320")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:98
      From worker 2:	│     [10] withpath(f::Any, path::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:37
      From worker 2:	│     [11] (::Plots.var"#283#319")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:97
      From worker 2:	│     [12] listenpkg(f::Any, pkg::Base.PkgId)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:20
      From worker 2:	│     [13] macro expansion
      From worker 2:	│        @ ~/.julia/packages/Requires/7Ncym/src/require.jl:95 [inlined]
      From worker 2:	│     [14] __init__()
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/init.jl:44
      From worker 2:	│     [15] _include_from_serialized(path::String, depmods::Vector{Any})
      From worker 2:	│        @ Base ./loading.jl:696
      From worker 2:	│     [16] _require_search_from_serialized(pkg::Base.PkgId, sourcepath::String)
      From worker 2:	│        @ Base ./loading.jl:782
      From worker 2:	│     [17] _require(pkg::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:1020
      From worker 2:	│     [18] require(uuidkey::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:936
      From worker 2:	│     [19] (::Distributed.var"#1#2"{Base.PkgId})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/Distributed.jl:79
      From worker 2:	│     [20] (::Distributed.var"#103#104"{Distributed.CallMsg{:call}})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:274
      From worker 2:	│     [21] run_work_thunk(thunk::Distributed.var"#103#104"{Distributed.CallMsg{:call}}, print_error::Bool)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:63
      From worker 2:	│     [22] run_work_thunk(rv::Distributed.RemoteValue, thunk::Function)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:72
      From worker 2:	│     [23] (::Distributed.var"#96#98"{Distributed.RemoteValue, Distributed.var"#103#104"{Distributed.CallMsg{:call}}})()
      From worker 2:	│        @ Distributed ./task.jl:411
      From worker 2:	│    in expression starting at /home/users1/xorwndekda/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:36
      From worker 2:	└ @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:49
      From worker 2:	┌ Warning: Error requiring `HDF5` from `Plots`
      From worker 2:	│   exception =
      From worker 2:	│    LoadError: UndefVarError: Group not defined
      From worker 2:	│    Stacktrace:
      From worker 2:	│      [1] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:161
      From worker 2:	│      [2] include(mod::Module, _path::String)
      From worker 2:	│        @ Base ./Base.jl:386
      From worker 2:	│      [3] include(x::String)
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1
      From worker 2:	│      [4] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/init.jl:46
      From worker 2:	│      [5] eval
      From worker 2:	│        @ ./boot.jl:360 [inlined]
      From worker 2:	│      [6] eval
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1 [inlined]
      From worker 2:	│      [7] (::Plots.var"#285#321")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:99
      From worker 2:	│      [8] err(f::Any, listener::Module, modname::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:47
      From worker 2:	│      [9] (::Plots.var"#284#320")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:98
      From worker 2:	│     [10] withpath(f::Any, path::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:37
      From worker 2:	│     [11] (::Plots.var"#283#319")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:97
      From worker 2:	│     [12] listenpkg(f::Any, pkg::Base.PkgId)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:20
      From worker 2:	│     [13] macro expansion
      From worker 2:	│        @ ~/.julia/packages/Requires/7Ncym/src/require.jl:95 [inlined]
      From worker 2:	│     [14] __init__()
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/init.jl:44
      From worker 2:	│     [15] _include_from_serialized(path::String, depmods::Vector{Any})
      From worker 2:	│        @ Base ./loading.jl:696
      From worker 2:	│     [16] _require_search_from_serialized(pkg::Base.PkgId, sourcepath::String)
      From worker 2:	│        @ Base ./loading.jl:782
      From worker 2:	│     [17] _require(pkg::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:1020
      From worker 2:	│     [18] require(uuidkey::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:936
      From worker 2:	│     [19] (::Distributed.var"#1#2"{Base.PkgId})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/Distributed.jl:79
      From worker 2:	│     [20] (::Distributed.var"#103#104"{Distributed.CallMsg{:call}})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:274
      From worker 2:	│     [21] run_work_thunk(thunk::Distributed.var"#103#104"{Distributed.CallMsg{:call}}, print_error::Bool)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:63
      From worker 2:	│     [22] run_work_thunk(rv::Distributed.RemoteValue, thunk::Function)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:72
      From worker 2:	│     [23] (::Distributed.var"#96#98"{Distributed.RemoteValue, Distributed.var"#103#104"{Distributed.CallMsg{:call}}})()
      From worker 2:	│        @ Distributed ./task.jl:411
      From worker 2:	│    in expression starting at /home/users1/xorwndekda/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:36
      From worker 2:	└ @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:49
      From worker 2:	┌ Warning: Error requiring `HDF5` from `Plots`
      From worker 2:	│   exception =
      From worker 2:	│    LoadError: UndefVarError: Group not defined
      From worker 2:	│    Stacktrace:
      From worker 2:	│      [1] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:161
      From worker 2:	│      [2] include(mod::Module, _path::String)
      From worker 2:	│        @ Base ./Base.jl:386
      From worker 2:	│      [3] include(x::String)
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1
      From worker 2:	│      [4] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/init.jl:46
      From worker 2:	│      [5] eval
      From worker 2:	│        @ ./boot.jl:360 [inlined]
      From worker 2:	│      [6] eval
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1 [inlined]
      From worker 2:	│      [7] (::Plots.var"#285#321")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:99
      From worker 2:	│      [8] err(f::Any, listener::Module, modname::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:47
      From worker 2:	│      [9] (::Plots.var"#284#320")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:98
      From worker 2:	│     [10] withpath(f::Any, path::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:37
      From worker 2:	│     [11] (::Plots.var"#283#319")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:97
      From worker 2:	│     [12] listenpkg(f::Any, pkg::Base.PkgId)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:20
      From worker 2:	│     [13] macro expansion
      From worker 2:	│        @ ~/.julia/packages/Requires/7Ncym/src/require.jl:95 [inlined]
      From worker 2:	│     [14] __init__()
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/init.jl:44
      From worker 2:	│     [15] _include_from_serialized(path::String, depmods::Vector{Any})
      From worker 2:	│        @ Base ./loading.jl:696
      From worker 2:	│     [16] _require_search_from_serialized(pkg::Base.PkgId, sourcepath::String)
      From worker 2:	│        @ Base ./loading.jl:782
      From worker 2:	│     [17] _require(pkg::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:1020
      From worker 2:	│     [18] require(uuidkey::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:936
      From worker 2:	│     [19] (::Distributed.var"#1#2"{Base.PkgId})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/Distributed.jl:79
      From worker 2:	│     [20] (::Distributed.var"#103#104"{Distributed.CallMsg{:call}})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:274
      From worker 2:	│     [21] run_work_thunk(thunk::Distributed.var"#103#104"{Distributed.CallMsg{:call}}, print_error::Bool)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:63
      From worker 2:	│     [22] run_work_thunk(rv::Distributed.RemoteValue, thunk::Function)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:72
      From worker 2:	│     [23] (::Distributed.var"#96#98"{Distributed.RemoteValue, Distributed.var"#103#104"{Distributed.CallMsg{:call}}})()
      From worker 2:	│        @ Distributed ./task.jl:411
      From worker 2:	│    in expression starting at /home/users1/xorwndekda/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:36
      From worker 2:	└ @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:49
      From worker 2:	┌ Warning: Error requiring `HDF5` from `Plots`
      From worker 2:	│   exception =
      From worker 2:	│    LoadError: UndefVarError: Group not defined
      From worker 2:	│    Stacktrace:
      From worker 2:	│      [1] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:161
      From worker 2:	│      [2] include(mod::Module, _path::String)
      From worker 2:	│        @ Base ./Base.jl:386
      From worker 2:	│      [3] include(x::String)
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1
      From worker 2:	│      [4] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/init.jl:46
      From worker 2:	│      [5] eval
      From worker 2:	│        @ ./boot.jl:360 [inlined]
      From worker 2:	│      [6] eval
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1 [inlined]
      From worker 2:	│      [7] (::Plots.var"#285#321")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:99
      From worker 2:	│      [8] err(f::Any, listener::Module, modname::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:47
      From worker 2:	│      [9] (::Plots.var"#284#320")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:98
      From worker 2:	│     [10] withpath(f::Any, path::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:37
      From worker 2:	│     [11] (::Plots.var"#283#319")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:97
      From worker 2:	│     [12] listenpkg(f::Any, pkg::Base.PkgId)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:20
      From worker 2:	│     [13] macro expansion
      From worker 2:	│        @ ~/.julia/packages/Requires/7Ncym/src/require.jl:95 [inlined]
      From worker 2:	│     [14] __init__()
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/init.jl:44
      From worker 2:	│     [15] _include_from_serialized(path::String, depmods::Vector{Any})
      From worker 2:	│        @ Base ./loading.jl:696
      From worker 2:	│     [16] _require_search_from_serialized(pkg::Base.PkgId, sourcepath::String)
      From worker 2:	│        @ Base ./loading.jl:782
      From worker 2:	│     [17] _require(pkg::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:1020
      From worker 2:	│     [18] require(uuidkey::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:936
      From worker 2:	│     [19] (::Distributed.var"#1#2"{Base.PkgId})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/Distributed.jl:79
      From worker 2:	│     [20] (::Distributed.var"#103#104"{Distributed.CallMsg{:call}})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:274
      From worker 2:	│     [21] run_work_thunk(thunk::Distributed.var"#103#104"{Distributed.CallMsg{:call}}, print_error::Bool)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:63
      From worker 2:	│     [22] run_work_thunk(rv::Distributed.RemoteValue, thunk::Function)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:72
      From worker 2:	│     [23] (::Distributed.var"#96#98"{Distributed.RemoteValue, Distributed.var"#103#104"{Distributed.CallMsg{:call}}})()
      From worker 2:	│        @ Distributed ./task.jl:411
      From worker 2:	│    in expression starting at /home/users1/xorwndekda/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:36
      From worker 2:	└ @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:49
      From worker 2:	┌ Warning: Error requiring `HDF5` from `Plots`
      From worker 2:	│   exception =
      From worker 2:	│    LoadError: UndefVarError: Group not defined
      From worker 2:	│    Stacktrace:
      From worker 2:	│      [1] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:161
      From worker 2:	│      [2] include(mod::Module, _path::String)
      From worker 2:	│        @ Base ./Base.jl:386
      From worker 2:	│      [3] include(x::String)
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1
      From worker 2:	│      [4] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/init.jl:46
      From worker 2:	│      [5] eval
      From worker 2:	│        @ ./boot.jl:360 [inlined]
      From worker 2:	│      [6] eval
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1 [inlined]
      From worker 2:	│      [7] (::Plots.var"#285#321")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:99
      From worker 2:	│      [8] err(f::Any, listener::Module, modname::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:47
      From worker 2:	│      [9] (::Plots.var"#284#320")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:98
      From worker 2:	│     [10] withpath(f::Any, path::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:37
      From worker 2:	│     [11] (::Plots.var"#283#319")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:97
      From worker 2:	│     [12] listenpkg(f::Any, pkg::Base.PkgId)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:20
      From worker 2:	│     [13] macro expansion
      From worker 2:	│        @ ~/.julia/packages/Requires/7Ncym/src/require.jl:95 [inlined]
      From worker 2:	│     [14] __init__()
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/init.jl:44
      From worker 2:	│     [15] _include_from_serialized(path::String, depmods::Vector{Any})
      From worker 2:	│        @ Base ./loading.jl:696
      From worker 2:	│     [16] _require_search_from_serialized(pkg::Base.PkgId, sourcepath::String)
      From worker 2:	│        @ Base ./loading.jl:782
      From worker 2:	│     [17] _require(pkg::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:1020
      From worker 2:	│     [18] require(uuidkey::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:936
      From worker 2:	│     [19] (::Distributed.var"#1#2"{Base.PkgId})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/Distributed.jl:79
      From worker 2:	│     [20] (::Distributed.var"#103#104"{Distributed.CallMsg{:call}})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:274
      From worker 2:	│     [21] run_work_thunk(thunk::Distributed.var"#103#104"{Distributed.CallMsg{:call}}, print_error::Bool)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:63
      From worker 2:	│     [22] run_work_thunk(rv::Distributed.RemoteValue, thunk::Function)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:72
      From worker 2:	│     [23] (::Distributed.var"#96#98"{Distributed.RemoteValue, Distributed.var"#103#104"{Distributed.CallMsg{:call}}})()
      From worker 2:	│        @ Distributed ./task.jl:411
      From worker 2:	│    in expression starting at /home/users1/xorwndekda/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:36
      From worker 2:	└ @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:49
┌ Warning: Error requiring `HDF5` from `Plots`
│   exception =
│    LoadError: UndefVarError: Group not defined
│    Stacktrace:
│      [1] top-level scope
│        @ ~/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:161
│      [2] include(mod::Module, _path::String)
│        @ Base ./Base.jl:386
│      [3] include(x::String)
│        @ Plots ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1
│      [4] top-level scope
│        @ ~/.julia/packages/Plots/HcxwM/src/init.jl:46
│      [5] eval
│        @ ./boot.jl:360 [inlined]
│      [6] eval
│        @ ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1 [inlined]
│      [7] (::Plots.var"#285#321")()
│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:99
│      [8] err(f::Any, listener::Module, modname::String)
│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:47
│      [9] (::Plots.var"#284#320")()
│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:98
│     [10] withpath(f::Any, path::String)
│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:37
│     [11] (::Plots.var"#283#319")()
│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:97
│     [12] listenpkg(f::Any, pkg::Base.PkgId)
│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:20
│     [13] macro expansion
│        @ ~/.julia/packages/Requires/7Ncym/src/require.jl:95 [inlined]
│     [14] __init__()
│        @ Plots ~/.julia/packages/Plots/HcxwM/src/init.jl:44
│     [15] _include_from_serialized(path::String, depmods::Vector{Any})
│        @ Base ./loading.jl:696
│     [16] _require_search_from_serialized(pkg::Base.PkgId, sourcepath::String)
│        @ Base ./loading.jl:782
│     [17] _require(pkg::Base.PkgId)
│        @ Base ./loading.jl:1020
│     [18] require(uuidkey::Base.PkgId)
│        @ Base ./loading.jl:936
│     [19] (::Distributed.var"#1#2"{Base.PkgId})()
│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/Distributed.jl:79
│     [20] (::Distributed.var"#103#104"{Distributed.CallMsg{:call}})()
│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:274
│     [21] run_work_thunk(thunk::Distributed.var"#103#104"{Distributed.CallMsg{:call}}, print_error::Bool)
│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:63
│     [22] run_work_thunk(rv::Distributed.RemoteValue, thunk::Function)
│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:72
│     [23] (::Distributed.var"#96#98"{Distributed.RemoteValue, Distributed.var"#103#104"{Distributed.CallMsg{:call}}})()
│        @ Distributed ./task.jl:411
│    in expression starting at /home/users1/xorwndekda/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:36
└ @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:49
      From worker 2:	┌ Warning: Error requiring `HDF5` from `Plots`
      From worker 2:	│   exception =
      From worker 2:	│    LoadError: UndefVarError: Group not defined
      From worker 2:	│    Stacktrace:
      From worker 2:	│      [1] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:161
      From worker 2:	│      [2] include(mod::Module, _path::String)
      From worker 2:	│        @ Base ./Base.jl:386
      From worker 2:	│      [3] include(x::String)
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1
      From worker 2:	│      [4] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/init.jl:46
      From worker 2:	│      [5] eval
      From worker 2:	│        @ ./boot.jl:360 [inlined]
      From worker 2:	│      [6] eval
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1 [inlined]
      From worker 2:	│      [7] (::Plots.var"#285#321")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:99
      From worker 2:	│      [8] err(f::Any, listener::Module, modname::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:47
      From worker 2:	│      [9] (::Plots.var"#284#320")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:98
      From worker 2:	│     [10] withpath(f::Any, path::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:37
      From worker 2:	│     [11] (::Plots.var"#283#319")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:97
      From worker 2:	│     [12] listenpkg(f::Any, pkg::Base.PkgId)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:20
      From worker 2:	│     [13] macro expansion
      From worker 2:	│        @ ~/.julia/packages/Requires/7Ncym/src/require.jl:95 [inlined]
      From worker 2:	│     [14] __init__()
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/init.jl:44
      From worker 2:	│     [15] _include_from_serialized(path::String, depmods::Vector{Any})
      From worker 2:	│        @ Base ./loading.jl:696
      From worker 2:	│     [16] _require_search_from_serialized(pkg::Base.PkgId, sourcepath::String)
      From worker 2:	│        @ Base ./loading.jl:782
      From worker 2:	│     [17] _require(pkg::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:1020
      From worker 2:	│     [18] require(uuidkey::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:936
      From worker 2:	│     [19] (::Distributed.var"#1#2"{Base.PkgId})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/Distributed.jl:79
      From worker 2:	│     [20] (::Distributed.var"#103#104"{Distributed.CallMsg{:call}})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:274
      From worker 2:	│     [21] run_work_thunk(thunk::Distributed.var"#103#104"{Distributed.CallMsg{:call}}, print_error::Bool)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:63
      From worker 2:	│     [22] run_work_thunk(rv::Distributed.RemoteValue, thunk::Function)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:72
      From worker 2:	│     [23] (::Distributed.var"#96#98"{Distributed.RemoteValue, Distributed.var"#103#104"{Distributed.CallMsg{:call}}})()
      From worker 2:	│        @ Distributed ./task.jl:411
      From worker 2:	│    in expression starting at /home/users1/xorwndekda/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:36
      From worker 2:	└ @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:49
      From worker 2:	┌ Warning: Error requiring `HDF5` from `Plots`
      From worker 2:	│   exception =
      From worker 2:	│    LoadError: UndefVarError: Group not defined
      From worker 2:	│    Stacktrace:
      From worker 2:	│      [1] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:161
      From worker 2:	│      [2] include(mod::Module, _path::String)
      From worker 2:	│        @ Base ./Base.jl:386
      From worker 2:	│      [3] include(x::String)
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1
      From worker 2:	│      [4] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/init.jl:46
      From worker 2:	│      [5] eval
      From worker 2:	│        @ ./boot.jl:360 [inlined]
      From worker 2:	│      [6] eval
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1 [inlined]
      From worker 2:	│      [7] (::Plots.var"#285#321")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:99
      From worker 2:	│      [8] err(f::Any, listener::Module, modname::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:47
      From worker 2:	│      [9] (::Plots.var"#284#320")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:98
      From worker 2:	│     [10] withpath(f::Any, path::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:37
      From worker 2:	│     [11] (::Plots.var"#283#319")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:97
      From worker 2:	│     [12] listenpkg(f::Any, pkg::Base.PkgId)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:20
      From worker 2:	│     [13] macro expansion
      From worker 2:	│        @ ~/.julia/packages/Requires/7Ncym/src/require.jl:95 [inlined]
      From worker 2:	│     [14] __init__()
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/init.jl:44
      From worker 2:	│     [15] _include_from_serialized(path::String, depmods::Vector{Any})
      From worker 2:	│        @ Base ./loading.jl:696
      From worker 2:	│     [16] _require_search_from_serialized(pkg::Base.PkgId, sourcepath::String)
      From worker 2:	│        @ Base ./loading.jl:782
      From worker 2:	│     [17] _require(pkg::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:1020
      From worker 2:	│     [18] require(uuidkey::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:936
      From worker 2:	│     [19] (::Distributed.var"#1#2"{Base.PkgId})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/Distributed.jl:79
      From worker 2:	│     [20] (::Distributed.var"#103#104"{Distributed.CallMsg{:call}})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:274
      From worker 2:	│     [21] run_work_thunk(thunk::Distributed.var"#103#104"{Distributed.CallMsg{:call}}, print_error::Bool)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:63
      From worker 2:	│     [22] run_work_thunk(rv::Distributed.RemoteValue, thunk::Function)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:72
      From worker 2:	│     [23] (::Distributed.var"#96#98"{Distributed.RemoteValue, Distributed.var"#103#104"{Distributed.CallMsg{:call}}})()
      From worker 2:	│        @ Distributed ./task.jl:411
      From worker 2:	│    in expression starting at /home/users1/xorwndekda/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:36
      From worker 2:	└ @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:49
      From worker 2:	┌ Warning: Error requiring `HDF5` from `Plots`
      From worker 2:	│   exception =
      From worker 2:	│    LoadError: UndefVarError: Group not defined
      From worker 2:	│    Stacktrace:
      From worker 2:	│      [1] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:161
      From worker 2:	│      [2] include(mod::Module, _path::String)
      From worker 2:	│        @ Base ./Base.jl:386
      From worker 2:	│      [3] include(x::String)
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1
      From worker 2:	│      [4] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/init.jl:46
      From worker 2:	│      [5] eval
      From worker 2:	│        @ ./boot.jl:360 [inlined]
      From worker 2:	│      [6] eval
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1 [inlined]
      From worker 2:	│      [7] (::Plots.var"#285#321")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:99
      From worker 2:	│      [8] err(f::Any, listener::Module, modname::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:47
      From worker 2:	│      [9] (::Plots.var"#284#320")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:98
      From worker 2:	│     [10] withpath(f::Any, path::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:37
      From worker 2:	│     [11] (::Plots.var"#283#319")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:97
      From worker 2:	│     [12] listenpkg(f::Any, pkg::Base.PkgId)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:20
      From worker 2:	│     [13] macro expansion
      From worker 2:	│        @ ~/.julia/packages/Requires/7Ncym/src/require.jl:95 [inlined]
      From worker 2:	│     [14] __init__()
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/init.jl:44
      From worker 2:	│     [15] _include_from_serialized(path::String, depmods::Vector{Any})
      From worker 2:	│        @ Base ./loading.jl:696
      From worker 2:	│     [16] _require_search_from_serialized(pkg::Base.PkgId, sourcepath::String)
      From worker 2:	│        @ Base ./loading.jl:782
      From worker 2:	│     [17] _require(pkg::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:1020
      From worker 2:	│     [18] require(uuidkey::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:936
      From worker 2:	│     [19] (::Distributed.var"#1#2"{Base.PkgId})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/Distributed.jl:79
      From worker 2:	│     [20] (::Distributed.var"#103#104"{Distributed.CallMsg{:call}})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:274
      From worker 2:	│     [21] run_work_thunk(thunk::Distributed.var"#103#104"{Distributed.CallMsg{:call}}, print_error::Bool)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:63
      From worker 2:	│     [22] run_work_thunk(rv::Distributed.RemoteValue, thunk::Function)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:72
      From worker 2:	│     [23] (::Distributed.var"#96#98"{Distributed.RemoteValue, Distributed.var"#103#104"{Distributed.CallMsg{:call}}})()
      From worker 2:	│        @ Distributed ./task.jl:411
      From worker 2:	│    in expression starting at /home/users1/xorwndekda/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:36
      From worker 2:	└ @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:49
      From worker 2:	┌ Warning: Error requiring `HDF5` from `Plots`
      From worker 2:	│   exception =
      From worker 2:	│    LoadError: UndefVarError: Group not defined
      From worker 2:	│    Stacktrace:
      From worker 2:	│      [1] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:161
      From worker 2:	│      [2] include(mod::Module, _path::String)
      From worker 2:	│        @ Base ./Base.jl:386
      From worker 2:	│      [3] include(x::String)
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1
      From worker 2:	│      [4] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/init.jl:46
      From worker 2:	│      [5] eval
      From worker 2:	│        @ ./boot.jl:360 [inlined]
      From worker 2:	│      [6] eval
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1 [inlined]
      From worker 2:	│      [7] (::Plots.var"#285#321")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:99
      From worker 2:	│      [8] err(f::Any, listener::Module, modname::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:47
      From worker 2:	│      [9] (::Plots.var"#284#320")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:98
      From worker 2:	│     [10] withpath(f::Any, path::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:37
      From worker 2:	│     [11] (::Plots.var"#283#319")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:97
      From worker 2:	│     [12] listenpkg(f::Any, pkg::Base.PkgId)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:20
      From worker 2:	│     [13] macro expansion
      From worker 2:	│        @ ~/.julia/packages/Requires/7Ncym/src/require.jl:95 [inlined]
      From worker 2:	│     [14] __init__()
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/init.jl:44
      From worker 2:	│     [15] _include_from_serialized(path::String, depmods::Vector{Any})
      From worker 2:	│        @ Base ./loading.jl:696
      From worker 2:	│     [16] _require_search_from_serialized(pkg::Base.PkgId, sourcepath::String)
      From worker 2:	│        @ Base ./loading.jl:782
      From worker 2:	│     [17] _require(pkg::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:1020
      From worker 2:	│     [18] require(uuidkey::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:936
      From worker 2:	│     [19] (::Distributed.var"#1#2"{Base.PkgId})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/Distributed.jl:79
      From worker 2:	│     [20] (::Distributed.var"#103#104"{Distributed.CallMsg{:call}})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:274
      From worker 2:	│     [21] run_work_thunk(thunk::Distributed.var"#103#104"{Distributed.CallMsg{:call}}, print_error::Bool)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:63
      From worker 2:	│     [22] run_work_thunk(rv::Distributed.RemoteValue, thunk::Function)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:72
      From worker 2:	│     [23] (::Distributed.var"#96#98"{Distributed.RemoteValue, Distributed.var"#103#104"{Distributed.CallMsg{:call}}})()
      From worker 2:	│        @ Distributed ./task.jl:411
      From worker 2:	│    in expression starting at /home/users1/xorwndekda/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:36
      From worker 2:	└ @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:49
      From worker 2:	┌ Warning: Error requiring `HDF5` from `Plots`
      From worker 2:	│   exception =
      From worker 2:	│    LoadError: UndefVarError: Group not defined
      From worker 2:	│    Stacktrace:
      From worker 2:	│      [1] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:161
      From worker 2:	│      [2] include(mod::Module, _path::String)
      From worker 2:	│        @ Base ./Base.jl:386
      From worker 2:	│      [3] include(x::String)
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1
      From worker 2:	│      [4] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/init.jl:46
      From worker 2:	│      [5] eval
      From worker 2:	│        @ ./boot.jl:360 [inlined]
      From worker 2:	│      [6] eval
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1 [inlined]
      From worker 2:	│      [7] (::Plots.var"#285#321")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:99
      From worker 2:	│      [8] err(f::Any, listener::Module, modname::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:47
      From worker 2:	│      [9] (::Plots.var"#284#320")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:98
      From worker 2:	│     [10] withpath(f::Any, path::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:37
      From worker 2:	│     [11] (::Plots.var"#283#319")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:97
      From worker 2:	│     [12] listenpkg(f::Any, pkg::Base.PkgId)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:20
      From worker 2:	│     [13] macro expansion
      From worker 2:	│        @ ~/.julia/packages/Requires/7Ncym/src/require.jl:95 [inlined]
      From worker 2:	│     [14] __init__()
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/init.jl:44
      From worker 2:	│     [15] _include_from_serialized(path::String, depmods::Vector{Any})
      From worker 2:	│        @ Base ./loading.jl:696
      From worker 2:	│     [16] _require_search_from_serialized(pkg::Base.PkgId, sourcepath::String)
      From worker 2:	│        @ Base ./loading.jl:782
      From worker 2:	│     [17] _require(pkg::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:1020
      From worker 2:	│     [18] require(uuidkey::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:936
      From worker 2:	│     [19] (::Distributed.var"#1#2"{Base.PkgId})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/Distributed.jl:79
      From worker 2:	│     [20] (::Distributed.var"#103#104"{Distributed.CallMsg{:call}})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:274
      From worker 2:	│     [21] run_work_thunk(thunk::Distributed.var"#103#104"{Distributed.CallMsg{:call}}, print_error::Bool)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:63
      From worker 2:	│     [22] run_work_thunk(rv::Distributed.RemoteValue, thunk::Function)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:72
      From worker 2:	│     [23] (::Distributed.var"#96#98"{Distributed.RemoteValue, Distributed.var"#103#104"{Distributed.CallMsg{:call}}})()
      From worker 2:	│        @ Distributed ./task.jl:411
      From worker 2:	│    in expression starting at /home/users1/xorwndekda/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:36
      From worker 2:	└ @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:49
      From worker 2:	┌ Warning: Error requiring `HDF5` from `Plots`
      From worker 2:	│   exception =
      From worker 2:	│    LoadError: UndefVarError: Group not defined
      From worker 2:	│    Stacktrace:
      From worker 2:	│      [1] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:161
      From worker 2:	│      [2] include(mod::Module, _path::String)
      From worker 2:	│        @ Base ./Base.jl:386
      From worker 2:	│      [3] include(x::String)
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1
      From worker 2:	│      [4] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/init.jl:46
      From worker 2:	│      [5] eval
      From worker 2:	│        @ ./boot.jl:360 [inlined]
      From worker 2:	│      [6] eval
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1 [inlined]
      From worker 2:	│      [7] (::Plots.var"#285#321")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:99
      From worker 2:	│      [8] err(f::Any, listener::Module, modname::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:47
      From worker 2:	│      [9] (::Plots.var"#284#320")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:98
      From worker 2:	│     [10] withpath(f::Any, path::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:37
      From worker 2:	│     [11] (::Plots.var"#283#319")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:97
      From worker 2:	│     [12] listenpkg(f::Any, pkg::Base.PkgId)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:20
      From worker 2:	│     [13] macro expansion
      From worker 2:	│        @ ~/.julia/packages/Requires/7Ncym/src/require.jl:95 [inlined]
      From worker 2:	│     [14] __init__()
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/init.jl:44
      From worker 2:	│     [15] _include_from_serialized(path::String, depmods::Vector{Any})
      From worker 2:	│        @ Base ./loading.jl:696
      From worker 2:	│     [16] _require_search_from_serialized(pkg::Base.PkgId, sourcepath::String)
      From worker 2:	│        @ Base ./loading.jl:782
      From worker 2:	│     [17] _require(pkg::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:1020
      From worker 2:	│     [18] require(uuidkey::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:936
      From worker 2:	│     [19] (::Distributed.var"#1#2"{Base.PkgId})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/Distributed.jl:79
      From worker 2:	│     [20] (::Distributed.var"#103#104"{Distributed.CallMsg{:call}})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:274
      From worker 2:	│     [21] run_work_thunk(thunk::Distributed.var"#103#104"{Distributed.CallMsg{:call}}, print_error::Bool)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:63
      From worker 2:	│     [22] run_work_thunk(rv::Distributed.RemoteValue, thunk::Function)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:72
      From worker 2:	│     [23] (::Distributed.var"#96#98"{Distributed.RemoteValue, Distributed.var"#103#104"{Distributed.CallMsg{:call}}})()
      From worker 2:	│        @ Distributed ./task.jl:411
      From worker 2:	│    in expression starting at /home/users1/xorwndekda/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:36
      From worker 2:	└ @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:49
      From worker 2:	┌ Warning: Error requiring `HDF5` from `Plots`
      From worker 2:	│   exception =
      From worker 2:	│    LoadError: UndefVarError: Group not defined
      From worker 2:	│    Stacktrace:
      From worker 2:	│      [1] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:161
      From worker 2:	│      [2] include(mod::Module, _path::String)
      From worker 2:	│        @ Base ./Base.jl:386
      From worker 2:	│      [3] include(x::String)
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1
      From worker 2:	│      [4] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/init.jl:46
      From worker 2:	│      [5] eval
      From worker 2:	│        @ ./boot.jl:360 [inlined]
      From worker 2:	│      [6] eval
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1 [inlined]
      From worker 2:	│      [7] (::Plots.var"#285#321")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:99
      From worker 2:	│      [8] err(f::Any, listener::Module, modname::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:47
      From worker 2:	│      [9] (::Plots.var"#284#320")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:98
      From worker 2:	│     [10] withpath(f::Any, path::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:37
      From worker 2:	│     [11] (::Plots.var"#283#319")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:97
      From worker 2:	│     [12] listenpkg(f::Any, pkg::Base.PkgId)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:20
      From worker 2:	│     [13] macro expansion
      From worker 2:	│        @ ~/.julia/packages/Requires/7Ncym/src/require.jl:95 [inlined]
      From worker 2:	│     [14] __init__()
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/init.jl:44
      From worker 2:	│     [15] _include_from_serialized(path::String, depmods::Vector{Any})
      From worker 2:	│        @ Base ./loading.jl:696
      From worker 2:	│     [16] _require_search_from_serialized(pkg::Base.PkgId, sourcepath::String)
      From worker 2:	│        @ Base ./loading.jl:782
      From worker 2:	│     [17] _require(pkg::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:1020
      From worker 2:	│     [18] require(uuidkey::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:936
      From worker 2:	│     [19] (::Distributed.var"#1#2"{Base.PkgId})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/Distributed.jl:79
      From worker 2:	│     [20] (::Distributed.var"#103#104"{Distributed.CallMsg{:call}})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:274
      From worker 2:	│     [21] run_work_thunk(thunk::Distributed.var"#103#104"{Distributed.CallMsg{:call}}, print_error::Bool)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:63
      From worker 2:	│     [22] run_work_thunk(rv::Distributed.RemoteValue, thunk::Function)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:72
      From worker 2:	│     [23] (::Distributed.var"#96#98"{Distributed.RemoteValue, Distributed.var"#103#104"{Distributed.CallMsg{:call}}})()
      From worker 2:	│        @ Distributed ./task.jl:411
      From worker 2:	│    in expression starting at /home/users1/xorwndekda/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:36
      From worker 2:	└ @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:49
      From worker 53:	WARNING: could not import HDF5.Group into _hdf5_implementation
      From worker 53:	WARNING: could not import HDF5.Dataset into _hdf5_implementation
      From worker 48:	WARNING: could not import HDF5.Group into _hdf5_implementation
      From worker 48:	WARNING: could not import HDF5.Dataset into _hdf5_implementation
      From worker 54:	WARNING: could not import HDF5.Group into _hdf5_implementation
      From worker 54:	WARNING: could not import HDF5.Dataset into _hdf5_implementation
      From worker 57:	WARNING: could not import HDF5.Group into _hdf5_implementation
      From worker 57:	WARNING: could not import HDF5.Dataset into _hdf5_implementation
      From worker 55:	WARNING: could not import HDF5.Group into _hdf5_implementation
      From worker 55:	WARNING: could not import HDF5.Dataset into _hdf5_implementation
      From worker 39:	WARNING: could not import HDF5.Group into _hdf5_implementation
      From worker 39:	WARNING: could not import HDF5.Dataset into _hdf5_implementation
      From worker 46:	WARNING: could not import HDF5.Group into _hdf5_implementation
      From worker 46:	WARNING: could not import HDF5.Dataset into _hdf5_implementation
      From worker 41:	WARNING: could not import HDF5.Group into _hdf5_implementation
      From worker 41:	WARNING: could not import HDF5.Dataset into _hdf5_implementation
      From worker 45:	WARNING: could not import HDF5.Group into _hdf5_implementation
      From worker 45:	WARNING: could not import HDF5.Dataset into _hdf5_implementation
      From worker 37:	WARNING: could not import HDF5.Group into _hdf5_implementation
      From worker 37:	WARNING: could not import HDF5.Dataset into _hdf5_implementation
      From worker 35:	WARNING: could not import HDF5.Group into _hdf5_implementation
      From worker 35:	WARNING: could not import HDF5.Dataset into _hdf5_implementation
      From worker 8:	WARNING: could not import HDF5.Group into _hdf5_implementation
      From worker 8:	WARNING: could not import HDF5.Dataset into _hdf5_implementation
      From worker 7:	WARNING: could not import HDF5.Group into _hdf5_implementation
      From worker 7:	WARNING: could not import HDF5.Dataset into _hdf5_implementation
      From worker 56:	WARNING: could not import HDF5.Group into _hdf5_implementation
      From worker 56:	WARNING: could not import HDF5.Dataset into _hdf5_implementation
      From worker 33:	WARNING: could not import HDF5.Group into _hdf5_implementation
      From worker 33:	WARNING: could not import HDF5.Dataset into _hdf5_implementation
      From worker 42:	WARNING: could not import HDF5.Group into _hdf5_implementation
      From worker 42:	WARNING: could not import HDF5.Dataset into _hdf5_implementation
      From worker 38:	WARNING: could not import HDF5.Group into _hdf5_implementation
      From worker 38:	WARNING: could not import HDF5.Dataset into _hdf5_implementation
      From worker 4:	WARNING: could not import HDF5.Group into _hdf5_implementation
      From worker 4:	WARNING: could not import HDF5.Dataset into _hdf5_implementation
      From worker 31:	WARNING: could not import HDF5.Group into _hdf5_implementation
      From worker 31:	WARNING: could not import HDF5.Dataset into _hdf5_implementation
      From worker 12:	WARNING: could not import HDF5.Group into _hdf5_implementation
      From worker 12:	WARNING: could not import HDF5.Dataset into _hdf5_implementation
      From worker 21:	WARNING: could not import HDF5.Group into _hdf5_implementation
      From worker 21:	WARNING: could not import HDF5.Dataset into _hdf5_implementation
      From worker 3:	WARNING: could not import HDF5.Group into _hdf5_implementation
      From worker 3:	WARNING: could not import HDF5.Dataset into _hdf5_implementation
      From worker 23:	WARNING: could not import HDF5.Group into _hdf5_implementation
      From worker 23:	WARNING: could not import HDF5.Dataset into _hdf5_implementation
      From worker 13:	WARNING: could not import HDF5.Group into _hdf5_implementation┌ Warning: Error requiring `HDF5` from `Plots`
      From worker 2:	│   exception =
      From worker 2:	│    LoadError: UndefVarError: Group not defined
      From worker 2:	│    Stacktrace:
      From worker 2:	│      [1] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:161
      From worker 2:	│      [2] include(mod::Module, _path::String)
      From worker 2:	│        @ Base ./Base.jl:386
      From worker 2:	│      [3] include(x::String)
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1
      From worker 2:	│      [4] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/init.jl:46
      From worker 2:	│      [5] eval
      From worker 2:	│        @ ./boot.jl:360 [inlined]
      From worker 2:	│      [6] eval
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1 [inlined]
      From worker 2:	│      [7] (::Plots.var"#285#321")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:99
      From worker 2:	│      [8] err(f::Any, listener::Module, modname::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:47
      From worker 2:	│      [9] (::Plots.var"#284#320")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:98
      From worker 2:	│     [10] withpath(f::Any, path::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:37
      From worker 2:	│     [11] (::Plots.var"#283#319")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:97
      From worker 2:	│     [12] listenpkg(f::Any, pkg::Base.PkgId)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:20
      From worker 2:	│     [13] macro expansion
      From worker 2:	│        @ ~/.julia/packages/Requires/7Ncym/src/require.jl:95 [inlined]
      From worker 2:	│     [14] __init__()
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/init.jl:44
      From worker 2:	│     [15] _include_from_serialized(path::String, depmods::Vector{Any})
      From worker 2:	│        @ Base ./loading.jl:696
      From worker 2:	│     [16] _require_search_from_serialized(pkg::Base.PkgId, sourcepath::String)
      From worker 2:	│        @ Base ./loading.jl:782
      From worker 2:	│     [17] _require(pkg::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:1020
      From worker 2:	│     [18] require(uuidkey::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:936
      From worker 2:	│     [19] (::Distributed.var"#1#2"{Base.PkgId})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/Distributed.jl:79
      From worker 2:	│     [20] (::Distributed.var"#103#104"{Distributed.CallMsg{:call}})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:274
      From worker 2:	│     [21] run_work_thunk(thunk::Distributed.var"#103#104"{Distributed.CallMsg{:call}}, print_error::Bool)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:63
      From worker 2:	│     [22] run_work_thunk(rv::Distributed.RemoteValue, thunk::Function)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:72
      From worker 2:	│     [23] (::Distributed.var"#96#98"{Distributed.RemoteValue, Distributed.var"#103#104"{Distributed.CallMsg{:call}}})()
      From worker 2:	│        @ Distributed ./task.jl:411
      From worker 2:	│    in expression starting at /home/users1/xorwndekda/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:36
      From worker 2:	└ @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:49
      From worker 2:	
      From worker 13:	WARNING: could not import HDF5.Dataset into _hdf5_implementation
      From worker 10:	WARNING: could not import HDF5.Group into _hdf5_implementation
      From worker 10:	WARNING: could not import HDF5.Dataset into _hdf5_implementation
      From worker 51:	WARNING: could not import HDF5.Group into _hdf5_implementation
      From worker 51:	WARNING: could not import HDF5.Dataset into _hdf5_implementation
      From worker 49:	WARNING: could not import HDF5.Group into _hdf5_implementation
      From worker 49:	WARNING: could not import HDF5.Dataset into _hdf5_implementation
      From worker 9:	WARNING: could not import HDF5.Group into _hdf5_implementation
      From worker 9:	WARNING: could not import HDF5.Dataset into _hdf5_implementation
      From worker 25:	WARNING: could not import HDF5.Group into _hdf5_implementation
      From worker 25:	WARNING: could not import HDF5.Dataset into _hdf5_implementation
      From worker 15:	WARNING: could not import HDF5.Group into _hdf5_implementation
      From worker 15:	WARNING: could not import HDF5.Dataset into _hdf5_implementation
      From worker 47:	WARNING: could not import HDF5.Group into _hdf5_implementation
      From worker 47:	WARNING: could not import HDF5.Dataset into _hdf5_implementation
      From worker 44:	WARNING: could not import HDF5.Group into _hdf5_implementation
      From worker 44:	WARNING: could not import HDF5.Dataset into _hdf5_implementation
      From worker 19:	WARNING: could not import HDF5.Group into _hdf5_implementation
      From worker 19:	WARNING: could not import HDF5.Dataset into _hdf5_implementation
      From worker 26:	WARNING: could not import HDF5.Group into _hdf5_implementation
      From worker 26:	WARNING: could not import HDF5.Dataset into _hdf5_implementation
      From worker 18:	WARNING: could not import HDF5.Group into _hdf5_implementation
      From worker 18:	WARNING: could not import HDF5.Dataset into _hdf5_implementation
      From worker 29:	WARNING: could not import HDF5.Group into _hdf5_implementation
      From worker 29:	WARNING: could not import HDF5.Dataset into _hdf5_implementation
      From worker 17:	WARNING: could not import HDF5.Group into _hdf5_implementation
      From worker 17:	WARNING: could not import HDF5.Dataset into _hdf5_implementation
      From worker 40:	WARNING: could not import HDF5.Group into _hdf5_implementation
      From worker 40:	WARNING: could not import HDF5.Dataset into _hdf5_implementation
      From worker 32:	WARNING: could not import HDF5.Group into _hdf5_implementation
      From worker 32:	WARNING: could not import HDF5.Dataset into _hdf5_implementation
      From worker 36:	WARNING: could not import HDF5.Group into _hdf5_implementation
      From worker 36:	WARNING: could not import HDF5.Dataset into _hdf5_implementation
      From worker 16:	WARNING: could not import HDF5.Group into _hdf5_implementation
      From worker 16:	WARNING: could not import HDF5.Dataset into _hdf5_implementation
      From worker 11:	WARNING: could not import HDF5.Group into _hdf5_implementation
      From worker 11:	WARNING: could not import HDF5.Dataset into _hdf5_implementation
      From worker 34:	WARNING: could not import HDF5.Group into _hdf5_implementation
      From worker 34:	WARNING: could not import HDF5.Dataset into _hdf5_implementation
      From worker 27:	WARNING: could not import HDF5.Group into _hdf5_implementation
      From worker 27:	WARNING: could not import HDF5.Dataset into _hdf5_implementation
      From worker 22:	WARNING: could not import HDF5.Group into _hdf5_implementation
      From worker 22:	WARNING: could not import HDF5.Dataset into _hdf5_implementation
      From worker 52:	WARNING: could not import HDF5.Group into _hdf5_implementation
      From worker 52:	WARNING: could not import HDF5.Dataset into _hdf5_implementation
      From worker 6:	WARNING: could not import HDF5.Group into _hdf5_implementation
      From worker 6:	WARNING: could not import HDF5.Dataset into _hdf5_implementation
      From worker 50:	WARNING: could not import HDF5.Group into _hdf5_implementation
      From worker 50:	WARNING: could not import HDF5.Dataset into _hdf5_implementation
      From worker 20:	WARNING: could not import HDF5.Group into _hdf5_implementation
      From worker 20:	WARNING: could not import HDF5.Dataset into _hdf5_implementation
      From worker 30:	WARNING: could not import HDF5.Group into _hdf5_implementation
      From worker 30:	WARNING: could not import HDF5.Dataset into _hdf5_implementation
      From worker 2:	┌ Warning: Error requiring `HDF5` from `Plots`
      From worker 2:	│   exception =
      From worker 2:	│    LoadError: UndefVarError: Group not defined
      From worker 2:	│    Stacktrace:
      From worker 2:	│      [1] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:161
      From worker 2:	│      [2] include(mod::Module, _path::String)
      From worker 2:	│        @ Base ./Base.jl:386
      From worker 2:	│      [3] include(x::String)
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1
      From worker 2:	│      [4] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/init.jl:46
      From worker 2:	│      [5] eval
      From worker 2:	│        @ ./boot.jl:360 [inlined]
      From worker 2:	│      [6] eval
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1 [inlined]
      From worker 2:	│      [7] (::Plots.var"#285#321")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:99
      From worker 2:	│      [8] err(f::Any, listener::Module, modname::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:47
      From worker 2:	│      [9] (::Plots.var"#284#320")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:98
      From worker 2:	│     [10] withpath(f::Any, path::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:37
      From worker 2:	│     [11] (::Plots.var"#283#319")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:97
      From worker 2:	│     [12] listenpkg(f::Any, pkg::Base.PkgId)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:20
      From worker 2:	│     [13] macro expansion
      From worker 2:	│        @ ~/.julia/packages/Requires/7Ncym/src/require.jl:95 [inlined]
      From worker 2:	│     [14] __init__()
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/init.jl:44
      From worker 2:	│     [15] _include_from_serialized(path::String, depmods::Vector{Any})
      From worker 2:	│        @ Base ./loading.jl:696
      From worker 2:	│     [16] _require_search_from_serialized(pkg::Base.PkgId, sourcepath::String)
      From worker 2:	│        @ Base ./loading.jl:782
      From worker 2:	│     [17] _require(pkg::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:1020
      From worker 2:	│     [18] require(uuidkey::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:936
      From worker 2:	│     [19] (::Distributed.var"#1#2"{Base.PkgId})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/Distributed.jl:79
      From worker 2:	│     [20] (::Distributed.var"#103#104"{Distributed.CallMsg{:call}})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:274
      From worker 2:	│     [21] run_work_thunk(thunk::Distributed.var"#103#104"{Distributed.CallMsg{:call}}, print_error::Bool)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:63
      From worker 2:	│     [22] run_work_thunk(rv::Distributed.RemoteValue, thunk::Function)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:72
      From worker 2:	│     [23] (::Distributed.var"#96#98"{Distributed.RemoteValue, Distributed.var"#103#104"{Distributed.CallMsg{:call}}})()
      From worker 2:	│        @ Distributed ./task.jl:411
      From worker 2:	│    in expression starting at /home/users1/xorwndekda/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:36
      From worker 2:	└ @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:49
      From worker 43:	WARNING: could not import HDF5.Group into _hdf5_implementation
      From worker 43:	WARNING: could not import HDF5.Dataset into _hdf5_implementation
      From worker 5:	WARNING: could not import HDF5.Group into _hdf5_implementation
      From worker 5:	WARNING: could not import HDF5.Dataset into _hdf5_implementation
      From worker 14:	WARNING: could not import HDF5.Group into _hdf5_implementation
      From worker 14:	WARNING: could not import HDF5.Dataset into _hdf5_implementation
      From worker 24:	WARNING: could not import HDF5.Group into _hdf5_implementation
      From worker 24:	WARNING: could not import HDF5.Dataset into _hdf5_implementation
      From worker 28:	WARNING: could not import HDF5.Group into _hdf5_implementation
      From worker 28:	WARNING: could not import HDF5.Dataset into _hdf5_implementation
      From worker 2:	┌ Warning: Error requiring `HDF5` from `Plots`
      From worker 2:	│   exception =
      From worker 2:	│    LoadError: UndefVarError: Group not defined
      From worker 2:	│    Stacktrace:
      From worker 2:	│      [1] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:161
      From worker 2:	│      [2] include(mod::Module, _path::String)
      From worker 2:	│        @ Base ./Base.jl:386
      From worker 2:	│      [3] include(x::String)
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1
      From worker 2:	│      [4] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/init.jl:46
      From worker 2:	│      [5] eval
      From worker 2:	│        @ ./boot.jl:360 [inlined]
      From worker 2:	│      [6] eval
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1 [inlined]
      From worker 2:	│      [7] (::Plots.var"#285#321")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:99
      From worker 2:	│      [8] err(f::Any, listener::Module, modname::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:47
      From worker 2:	│      [9] (::Plots.var"#284#320")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:98
      From worker 2:	│     [10] withpath(f::Any, path::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:37
      From worker 2:	│     [11] (::Plots.var"#283#319")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:97
      From worker 2:	│     [12] listenpkg(f::Any, pkg::Base.PkgId)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:20
      From worker 2:	│     [13] macro expansion
      From worker 2:	│        @ ~/.julia/packages/Requires/7Ncym/src/require.jl:95 [inlined]
      From worker 2:	│     [14] __init__()
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/init.jl:44
      From worker 2:	│     [15] _include_from_serialized(path::String, depmods::Vector{Any})
      From worker 2:	│        @ Base ./loading.jl:696
      From worker 2:	│     [16] _require_search_from_serialized(pkg::Base.PkgId, sourcepath::String)
      From worker 2:	│        @ Base ./loading.jl:782
      From worker 2:	│     [17] _require(pkg::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:1020
      From worker 2:	│     [18] require(uuidkey::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:936
      From worker 2:	│     [19] (::Distributed.var"#1#2"{Base.PkgId})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/Distributed.jl:79
      From worker 2:	│     [20] (::Distributed.var"#103#104"{Distributed.CallMsg{:call}})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:274
      From worker 2:	│     [21] run_work_thunk(thunk::Distributed.var"#103#104"{Distributed.CallMsg{:call}}, print_error::Bool)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:63
      From worker 2:	│     [22] run_work_thunk(rv::Distributed.RemoteValue, thunk::Function)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:72
      From worker 2:	│     [23] (::Distributed.var"#96#98"{Distributed.RemoteValue, Distributed.var"#103#104"{Distributed.CallMsg{:call}}})()
      From worker 2:	│        @ Distributed ./task.jl:411
      From worker 2:	│    in expression starting at /home/users1/xorwndekda/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:36
      From worker 2:	└ @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:49
      From worker 2:	┌ Warning: Error requiring `HDF5` from `Plots`
      From worker 2:	│   exception =
      From worker 2:	│    LoadError: UndefVarError: Group not defined
      From worker 2:	│    Stacktrace:
      From worker 2:	│      [1] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:161
      From worker 2:	│      [2] include(mod::Module, _path::String)
      From worker 2:	│        @ Base ./Base.jl:386
      From worker 2:	│      [3] include(x::String)
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1
      From worker 2:	│      [4] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/init.jl:46
      From worker 2:	│      [5] eval
      From worker 2:	│        @ ./boot.jl:360 [inlined]
      From worker 2:	│      [6] eval
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1 [inlined]
      From worker 2:	│      [7] (::Plots.var"#285#321")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:99
      From worker 2:	│      [8] err(f::Any, listener::Module, modname::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:47
      From worker 2:	│      [9] (::Plots.var"#284#320")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:98
      From worker 2:	│     [10] withpath(f::Any, path::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:37
      From worker 2:	│     [11] (::Plots.var"#283#319")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:97
      From worker 2:	│     [12] listenpkg(f::Any, pkg::Base.PkgId)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:20
      From worker 2:	│     [13] macro expansion
      From worker 2:	│        @ ~/.julia/packages/Requires/7Ncym/src/require.jl:95 [inlined]
      From worker 2:	│     [14] __init__()
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/init.jl:44
      From worker 2:	│     [15] _include_from_serialized(path::String, depmods::Vector{Any})
      From worker 2:	│        @ Base ./loading.jl:696
      From worker 2:	│     [16] _require_search_from_serialized(pkg::Base.PkgId, sourcepath::String)
      From worker 2:	│        @ Base ./loading.jl:782
      From worker 2:	│     [17] _require(pkg::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:1020
      From worker 2:	│     [18] require(uuidkey::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:936
      From worker 2:	│     [19] (::Distributed.var"#1#2"{Base.PkgId})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/Distributed.jl:79
      From worker 2:	│     [20] (::Distributed.var"#103#104"{Distributed.CallMsg{:call}})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:274
      From worker 2:	│     [21] run_work_thunk(thunk::Distributed.var"#103#104"{Distributed.CallMsg{:call}}, print_error::Bool)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:63
      From worker 2:	│     [22] run_work_thunk(rv::Distributed.RemoteValue, thunk::Function)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:72
      From worker 2:	│     [23] (::Distributed.var"#96#98"{Distributed.RemoteValue, Distributed.var"#103#104"{Distributed.CallMsg{:call}}})()
      From worker 2:	│        @ Distributed ./task.jl:411
      From worker 2:	│    in expression starting at /home/users1/xorwndekda/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:36
      From worker 2:	└ @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:49
      From worker 2:	┌ Warning: Error requiring `HDF5` from `Plots`
      From worker 2:	│   exception =
      From worker 2:	│    LoadError: UndefVarError: Group not defined
      From worker 2:	│    Stacktrace:
      From worker 2:	│      [1] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:161
      From worker 2:	│      [2] include(mod::Module, _path::String)
      From worker 2:	│        @ Base ./Base.jl:386
      From worker 2:	│      [3] include(x::String)
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1
      From worker 2:	│      [4] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/init.jl:46
      From worker 2:	│      [5] eval
      From worker 2:	│        @ ./boot.jl:360 [inlined]
      From worker 2:	│      [6] eval
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1 [inlined]
      From worker 2:	│      [7] (::Plots.var"#285#321")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:99
      From worker 2:	│      [8] err(f::Any, listener::Module, modname::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:47
      From worker 2:	│      [9] (::Plots.var"#284#320")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:98
      From worker 2:	│     [10] withpath(f::Any, path::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:37
      From worker 2:	│     [11] (::Plots.var"#283#319")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:97
      From worker 2:	│     [12] listenpkg(f::Any, pkg::Base.PkgId)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:20
      From worker 2:	│     [13] macro expansion
      From worker 2:	│        @ ~/.julia/packages/Requires/7Ncym/src/require.jl:95 [inlined]
      From worker 2:	│     [14] __init__()
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/init.jl:44
      From worker 2:	│     [15] _include_from_serialized(path::String, depmods::Vector{Any})
      From worker 2:	│        @ Base ./loading.jl:696
      From worker 2:	│     [16] _require_search_from_serialized(pkg::Base.PkgId, sourcepath::String)
      From worker 2:	│        @ Base ./loading.jl:782
      From worker 2:	│     [17] _require(pkg::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:1020
      From worker 2:	│     [18] require(uuidkey::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:936
      From worker 2:	│     [19] (::Distributed.var"#1#2"{Base.PkgId})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/Distributed.jl:79
      From worker 2:	│     [20] (::Distributed.var"#103#104"{Distributed.CallMsg{:call}})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:274
      From worker 2:	│     [21] run_work_thunk(thunk::Distributed.var"#103#104"{Distributed.CallMsg{:call}}, print_error::Bool)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:63
      From worker 2:	│     [22] run_work_thunk(rv::Distributed.RemoteValue, thunk::Function)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:72
      From worker 2:	│     [23] (::Distributed.var"#96#98"{Distributed.RemoteValue, Distributed.var"#103#104"{Distributed.CallMsg{:call}}})()
      From worker 2:	│        @ Distributed ./task.jl:411
      From worker 2:	│    in expression starting at /home/users1/xorwndekda/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:36
      From worker 2:	└ @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:49
      From worker 2:	┌ Warning: Error requiring `HDF5` from `Plots`
      From worker 2:	│   exception =
      From worker 2:	│    LoadError: UndefVarError: Group not defined
      From worker 2:	│    Stacktrace:
      From worker 2:	│      [1] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:161
      From worker 2:	│      [2] include(mod::Module, _path::String)
      From worker 2:	│        @ Base ./Base.jl:386
      From worker 2:	│      [3] include(x::String)
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1
      From worker 2:	│      [4] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/init.jl:46
      From worker 2:	│      [5] eval
      From worker 2:	│        @ ./boot.jl:360 [inlined]
      From worker 2:	│      [6] eval
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1 [inlined]
      From worker 2:	│      [7] (::Plots.var"#285#321")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:99
      From worker 2:	│      [8] err(f::Any, listener::Module, modname::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:47
      From worker 2:	│      [9] (::Plots.var"#284#320")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:98
      From worker 2:	│     [10] withpath(f::Any, path::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:37
      From worker 2:	│     [11] (::Plots.var"#283#319")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:97
      From worker 2:	│     [12] listenpkg(f::Any, pkg::Base.PkgId)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:20
      From worker 2:	│     [13] macro expansion
      From worker 2:	│        @ ~/.julia/packages/Requires/7Ncym/src/require.jl:95 [inlined]
      From worker 2:	│     [14] __init__()
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/init.jl:44
      From worker 2:	│     [15] _include_from_serialized(path::String, depmods::Vector{Any})
      From worker 2:	│        @ Base ./loading.jl:696
      From worker 2:	│     [16] _require_search_from_serialized(pkg::Base.PkgId, sourcepath::String)
      From worker 2:	│        @ Base ./loading.jl:782
      From worker 2:	│     [17] _require(pkg::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:1020
      From worker 2:	│     [18] require(uuidkey::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:936
      From worker 2:	│     [19] (::Distributed.var"#1#2"{Base.PkgId})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/Distributed.jl:79
      From worker 2:	│     [20] (::Distributed.var"#103#104"{Distributed.CallMsg{:call}})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:274
      From worker 2:	│     [21] run_work_thunk(thunk::Distributed.var"#103#104"{Distributed.CallMsg{:call}}, print_error::Bool)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:63
      From worker 2:	│     [22] run_work_thunk(rv::Distributed.RemoteValue, thunk::Function)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:72
      From worker 2:	│     [23] (::Distributed.var"#96#98"{Distributed.RemoteValue, Distributed.var"#103#104"{Distributed.CallMsg{:call}}})()
      From worker 2:	│        @ Distributed ./task.jl:411
      From worker 2:	│    in expression starting at /home/users1/xorwndekda/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:36
      From worker 2:	└ @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:49
      From worker 2:	┌ Warning: Error requiring `HDF5` from `Plots`
      From worker 2:	│   exception =
      From worker 2:	│    LoadError: UndefVarError: Group not defined
      From worker 2:	│    Stacktrace:
      From worker 2:	│      [1] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:161
      From worker 2:	│      [2] include(mod::Module, _path::String)
      From worker 2:	│        @ Base ./Base.jl:386
      From worker 2:	│      [3] include(x::String)
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1
      From worker 2:	│      [4] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/init.jl:46
      From worker 2:	│      [5] eval
      From worker 2:	│        @ ./boot.jl:360 [inlined]
      From worker 2:	│      [6] eval
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1 [inlined]
      From worker 2:	│      [7] (::Plots.var"#285#321")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:99
      From worker 2:	│      [8] err(f::Any, listener::Module, modname::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:47
      From worker 2:	│      [9] (::Plots.var"#284#320")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:98
      From worker 2:	│     [10] withpath(f::Any, path::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:37
      From worker 2:	│     [11] (::Plots.var"#283#319")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:97
      From worker 2:	│     [12] listenpkg(f::Any, pkg::Base.PkgId)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:20
      From worker 2:	│     [13] macro expansion
      From worker 2:	│        @ ~/.julia/packages/Requires/7Ncym/src/require.jl:95 [inlined]
      From worker 2:	│     [14] __init__()
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/init.jl:44
      From worker 2:	│     [15] _include_from_serialized(path::String, depmods::Vector{Any})
      From worker 2:	│        @ Base ./loading.jl:696
      From worker 2:	│     [16] _require_search_from_serialized(pkg::Base.PkgId, sourcepath::String)
      From worker 2:	│        @ Base ./loading.jl:782
      From worker 2:	│     [17] _require(pkg::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:1020
      From worker 2:	│     [18] require(uuidkey::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:936
      From worker 2:	│     [19] (::Distributed.var"#1#2"{Base.PkgId})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/Distributed.jl:79
      From worker 2:	│     [20] (::Distributed.var"#103#104"{Distributed.CallMsg{:call}})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:274
      From worker 2:	│     [21] run_work_thunk(thunk::Distributed.var"#103#104"{Distributed.CallMsg{:call}}, print_error::Bool)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:63
      From worker 2:	│     [22] run_work_thunk(rv::Distributed.RemoteValue, thunk::Function)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:72
      From worker 2:	│     [23] (::Distributed.var"#96#98"{Distributed.RemoteValue, Distributed.var"#103#104"{Distributed.CallMsg{:call}}})()
      From worker 2:	│        @ Distributed ./task.jl:411
      From worker 2:	│    in expression starting at /home/users1/xorwndekda/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:36
      From worker 2:	└ @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:49
      From worker 2:	┌ Warning: Error requiring `HDF5` from `Plots`
      From worker 2:	│   exception =
      From worker 2:	│    LoadError: UndefVarError: Group not defined
      From worker 2:	│    Stacktrace:
      From worker 2:	│      [1] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:161
      From worker 2:	│      [2] include(mod::Module, _path::String)
      From worker 2:	│        @ Base ./Base.jl:386
      From worker 2:	│      [3] include(x::String)
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1
      From worker 2:	│      [4] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/init.jl:46
      From worker 2:	│      [5] eval
      From worker 2:	│        @ ./boot.jl:360 [inlined]
      From worker 2:	│      [6] eval
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1 [inlined]
      From worker 2:	│      [7] (::Plots.var"#285#321")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:99
      From worker 2:	│      [8] err(f::Any, listener::Module, modname::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:47
      From worker 2:	│      [9] (::Plots.var"#284#320")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:98
      From worker 2:	│     [10] withpath(f::Any, path::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:37
      From worker 2:	│     [11] (::Plots.var"#283#319")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:97
      From worker 2:	│     [12] listenpkg(f::Any, pkg::Base.PkgId)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:20
      From worker 2:	│     [13] macro expansion
      From worker 2:	│        @ ~/.julia/packages/Requires/7Ncym/src/require.jl:95 [inlined]
      From worker 2:	│     [14] __init__()
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/init.jl:44
      From worker 2:	│     [15] _include_from_serialized(path::String, depmods::Vector{Any})
      From worker 2:	│        @ Base ./loading.jl:696
      From worker 2:	│     [16] _require_search_from_serialized(pkg::Base.PkgId, sourcepath::String)
      From worker 2:	│        @ Base ./loading.jl:782
      From worker 2:	│     [17] _require(pkg::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:1020
      From worker 2:	│     [18] require(uuidkey::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:936
      From worker 2:	│     [19] (::Distributed.var"#1#2"{Base.PkgId})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/Distributed.jl:79
      From worker 2:	│     [20] (::Distributed.var"#103#104"{Distributed.CallMsg{:call}})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:274
      From worker 2:	│     [21] run_work_thunk(thunk::Distributed.var"#103#104"{Distributed.CallMsg{:call}}, print_error::Bool)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:63
      From worker 2:	│     [22] run_work_thunk(rv::Distributed.RemoteValue, thunk::Function)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:72
      From worker 2:	│     [23] (::Distributed.var"#96#98"{Distributed.RemoteValue, Distributed.var"#103#104"{Distributed.CallMsg{:call}}})()
      From worker 2:	│        @ Distributed ./task.jl:411
      From worker 2:	│    in expression starting at /home/users1/xorwndekda/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:36
      From worker 2:	└ @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:49
      From worker 2:	┌ Warning: Error requiring `HDF5` from `Plots`
      From worker 2:	│   exception =
      From worker 2:	│    LoadError: UndefVarError: Group not defined
      From worker 2:	│    Stacktrace:
      From worker 2:	│      [1] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:161
      From worker 2:	│      [2] include(mod::Module, _path::String)
      From worker 2:	│        @ Base ./Base.jl:386
      From worker 2:	│      [3] include(x::String)
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1
      From worker 2:	│      [4] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/init.jl:46
      From worker 2:	│      [5] eval
      From worker 2:	│        @ ./boot.jl:360 [inlined]
      From worker 2:	│      [6] eval
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1 [inlined]
      From worker 2:	│      [7] (::Plots.var"#285#321")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:99
      From worker 2:	│      [8] err(f::Any, listener::Module, modname::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:47
      From worker 2:	│      [9] (::Plots.var"#284#320")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:98
      From worker 2:	│     [10] withpath(f::Any, path::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:37
      From worker 2:	│     [11] (::Plots.var"#283#319")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:97
      From worker 2:	│     [12] listenpkg(f::Any, pkg::Base.PkgId)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:20
      From worker 2:	│     [13] macro expansion
      From worker 2:	│        @ ~/.julia/packages/Requires/7Ncym/src/require.jl:95 [inlined]
      From worker 2:	│     [14] __init__()
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/init.jl:44
      From worker 2:	│     [15] _include_from_serialized(path::String, depmods::Vector{Any})
      From worker 2:	│        @ Base ./loading.jl:696
      From worker 2:	│     [16] _require_search_from_serialized(pkg::Base.PkgId, sourcepath::String)
      From worker 2:	│        @ Base ./loading.jl:782
      From worker 2:	│     [17] _require(pkg::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:1020
      From worker 2:	│     [18] require(uuidkey::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:936
      From worker 2:	│     [19] (::Distributed.var"#1#2"{Base.PkgId})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/Distributed.jl:79
      From worker 2:	│     [20] (::Distributed.var"#103#104"{Distributed.CallMsg{:call}})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:274
      From worker 2:	│     [21] run_work_thunk(thunk::Distributed.var"#103#104"{Distributed.CallMsg{:call}}, print_error::Bool)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:63
      From worker 2:	│     [22] run_work_thunk(rv::Distributed.RemoteValue, thunk::Function)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:72
      From worker 2:	│     [23] (::Distributed.var"#96#98"{Distributed.RemoteValue, Distributed.var"#103#104"{Distributed.CallMsg{:call}}})()
      From worker 2:	│        @ Distributed ./task.jl:411
      From worker 2:	│    in expression starting at /home/users1/xorwndekda/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:36
      From worker 2:	└ @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:49
      From worker 2:	┌ Warning: Error requiring `HDF5` from `Plots`
      From worker 2:	│   exception =
      From worker 2:	│    LoadError: UndefVarError: Group not defined
      From worker 2:	│    Stacktrace:
      From worker 2:	│      [1] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:161
      From worker 2:	│      [2] include(mod::Module, _path::String)
      From worker 2:	│        @ Base ./Base.jl:386
      From worker 2:	│      [3] include(x::String)
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1
      From worker 2:	│      [4] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/init.jl:46
      From worker 2:	│      [5] eval
      From worker 2:	│        @ ./boot.jl:360 [inlined]
      From worker 2:	│      [6] eval
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1 [inlined]
      From worker 2:	│      [7] (::Plots.var"#285#321")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:99
      From worker 2:	│      [8] err(f::Any, listener::Module, modname::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:47
      From worker 2:	│      [9] (::Plots.var"#284#320")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:98
      From worker 2:	│     [10] withpath(f::Any, path::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:37
      From worker 2:	│     [11] (::Plots.var"#283#319")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:97
      From worker 2:	│     [12] listenpkg(f::Any, pkg::Base.PkgId)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:20
      From worker 2:	│     [13] macro expansion
      From worker 2:	│        @ ~/.julia/packages/Requires/7Ncym/src/require.jl:95 [inlined]
      From worker 2:	│     [14] __init__()
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/init.jl:44
      From worker 2:	│     [15] _include_from_serialized(path::String, depmods::Vector{Any})
      From worker 2:	│        @ Base ./loading.jl:696
      From worker 2:	│     [16] _require_search_from_serialized(pkg::Base.PkgId, sourcepath::String)
      From worker 2:	│        @ Base ./loading.jl:782
      From worker 2:	│     [17] _require(pkg::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:1020
      From worker 2:	│     [18] require(uuidkey::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:936
      From worker 2:	│     [19] (::Distributed.var"#1#2"{Base.PkgId})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/Distributed.jl:79
      From worker 2:	│     [20] (::Distributed.var"#103#104"{Distributed.CallMsg{:call}})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:274
      From worker 2:	│     [21] run_work_thunk(thunk::Distributed.var"#103#104"{Distributed.CallMsg{:call}}, print_error::Bool)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:63
      From worker 2:	│     [22] run_work_thunk(rv::Distributed.RemoteValue, thunk::Function)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:72
      From worker 2:	│     [23] (::Distributed.var"#96#98"{Distributed.RemoteValue, Distributed.var"#103#104"{Distributed.CallMsg{:call}}})()
      From worker 2:	│        @ Distributed ./task.jl:411
      From worker 2:	│    in expression starting at /home/users1/xorwndekda/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:36
      From worker 2:	└ @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:49
      From worker 2:	┌ Warning: Error requiring `HDF5` from `Plots`
      From worker 2:	│   exception =
      From worker 2:	│    LoadError: UndefVarError: Group not defined
      From worker 2:	│    Stacktrace:
      From worker 2:	│      [1] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:161
      From worker 2:	│      [2] include(mod::Module, _path::String)
      From worker 2:	│        @ Base ./Base.jl:386
      From worker 2:	│      [3] include(x::String)
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1
      From worker 2:	│      [4] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/init.jl:46
      From worker 2:	│      [5] eval
      From worker 2:	│        @ ./boot.jl:360 [inlined]
      From worker 2:	│      [6] eval
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1 [inlined]
      From worker 2:	│      [7] (::Plots.var"#285#321")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:99
      From worker 2:	│      [8] err(f::Any, listener::Module, modname::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:47
      From worker 2:	│      [9] (::Plots.var"#284#320")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:98
      From worker 2:	│     [10] withpath(f::Any, path::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:37
      From worker 2:	│     [11] (::Plots.var"#283#319")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:97
      From worker 2:	│     [12] listenpkg(f::Any, pkg::Base.PkgId)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:20
      From worker 2:	│     [13] macro expansion
      From worker 2:	│        @ ~/.julia/packages/Requires/7Ncym/src/require.jl:95 [inlined]
      From worker 2:	│     [14] __init__()
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/init.jl:44
      From worker 2:	│     [15] _include_from_serialized(path::String, depmods::Vector{Any})
      From worker 2:	│        @ Base ./loading.jl:696
      From worker 2:	│     [16] _require_search_from_serialized(pkg::Base.PkgId, sourcepath::String)
      From worker 2:	│        @ Base ./loading.jl:782
      From worker 2:	│     [17] _require(pkg::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:1020
      From worker 2:	│     [18] require(uuidkey::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:936
      From worker 2:	│     [19] (::Distributed.var"#1#2"{Base.PkgId})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/Distributed.jl:79
      From worker 2:	│     [20] (::Distributed.var"#103#104"{Distributed.CallMsg{:call}})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:274
      From worker 2:	│     [21] run_work_thunk(thunk::Distributed.var"#103#104"{Distributed.CallMsg{:call}}, print_error::Bool)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:63
      From worker 2:	│     [22] run_work_thunk(rv::Distributed.RemoteValue, thunk::Function)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:72
      From worker 2:	│     [23] (::Distributed.var"#96#98"{Distributed.RemoteValue, Distributed.var"#103#104"{Distributed.CallMsg{:call}}})()
      From worker 2:	│        @ Distributed ./task.jl:411
      From worker 2:	│    in expression starting at /home/users1/xorwndekda/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:36
      From worker 2:	└ @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:49
      From worker 2:	┌ Warning: Error requiring `HDF5` from `Plots`
      From worker 2:	│   exception =
      From worker 2:	│    LoadError: UndefVarError: Group not defined
      From worker 2:	│    Stacktrace:
      From worker 2:	│      [1] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:161
      From worker 2:	│      [2] include(mod::Module, _path::String)
      From worker 2:	│        @ Base ./Base.jl:386
      From worker 2:	│      [3] include(x::String)
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1
      From worker 2:	│      [4] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/init.jl:46
      From worker 2:	│      [5] eval
      From worker 2:	│        @ ./boot.jl:360 [inlined]
      From worker 2:	│      [6] eval
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1 [inlined]
      From worker 2:	│      [7] (::Plots.var"#285#321")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:99
      From worker 2:	│      [8] err(f::Any, listener::Module, modname::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:47
      From worker 2:	│      [9] (::Plots.var"#284#320")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:98
      From worker 2:	│     [10] withpath(f::Any, path::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:37
      From worker 2:	│     [11] (::Plots.var"#283#319")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:97
      From worker 2:	│     [12] listenpkg(f::Any, pkg::Base.PkgId)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:20
      From worker 2:	│     [13] macro expansion
      From worker 2:	│        @ ~/.julia/packages/Requires/7Ncym/src/require.jl:95 [inlined]
      From worker 2:	│     [14] __init__()
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/init.jl:44
      From worker 2:	│     [15] _include_from_serialized(path::String, depmods::Vector{Any})
      From worker 2:	│        @ Base ./loading.jl:696
      From worker 2:	│     [16] _require_search_from_serialized(pkg::Base.PkgId, sourcepath::String)
      From worker 2:	│        @ Base ./loading.jl:782
      From worker 2:	│     [17] _require(pkg::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:1020
      From worker 2:	│     [18] require(uuidkey::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:936
      From worker 2:	│     [19] (::Distributed.var"#1#2"{Base.PkgId})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/Distributed.jl:79
      From worker 2:	│     [20] (::Distributed.var"#103#104"{Distributed.CallMsg{:call}})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:274
      From worker 2:	│     [21] run_work_thunk(thunk::Distributed.var"#103#104"{Distributed.CallMsg{:call}}, print_error::Bool)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:63
      From worker 2:	│     [22] run_work_thunk(rv::Distributed.RemoteValue, thunk::Function)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:72
      From worker 2:	│     [23] (::Distributed.var"#96#98"{Distributed.RemoteValue, Distributed.var"#103#104"{Distributed.CallMsg{:call}}})()
      From worker 2:	│        @ Distributed ./task.jl:411
      From worker 2:	│    in expression starting at /home/users1/xorwndekda/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:36
      From worker 2:	└ @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:49
      From worker 2:	┌ Warning: Error requiring `HDF5` from `Plots`
      From worker 2:	│   exception =
      From worker 2:	│    LoadError: UndefVarError: Group not defined
      From worker 2:	│    Stacktrace:
      From worker 2:	│      [1] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:161
      From worker 2:	│      [2] include(mod::Module, _path::String)
      From worker 2:	│        @ Base ./Base.jl:386
      From worker 2:	│      [3] include(x::String)
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1
      From worker 2:	│      [4] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/init.jl:46
      From worker 2:	│      [5] eval
      From worker 2:	│        @ ./boot.jl:360 [inlined]
      From worker 2:	│      [6] eval
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1 [inlined]
      From worker 2:	│      [7] (::Plots.var"#285#321")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:99
      From worker 2:	│      [8] err(f::Any, listener::Module, modname::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:47
      From worker 2:	│      [9] (::Plots.var"#284#320")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:98
      From worker 2:	│     [10] withpath(f::Any, path::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:37
      From worker 2:	│     [11] (::Plots.var"#283#319")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:97
      From worker 2:	│     [12] listenpkg(f::Any, pkg::Base.PkgId)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:20
      From worker 2:	│     [13] macro expansion
      From worker 2:	│        @ ~/.julia/packages/Requires/7Ncym/src/require.jl:95 [inlined]
      From worker 2:	│     [14] __init__()
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/init.jl:44
      From worker 2:	│     [15] _include_from_serialized(path::String, depmods::Vector{Any})
      From worker 2:	│        @ Base ./loading.jl:696
      From worker 2:	│     [16] _require_search_from_serialized(pkg::Base.PkgId, sourcepath::String)
      From worker 2:	│        @ Base ./loading.jl:782
      From worker 2:	│     [17] _require(pkg::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:1020
      From worker 2:	│     [18] require(uuidkey::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:936
      From worker 2:	│     [19] (::Distributed.var"#1#2"{Base.PkgId})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/Distributed.jl:79
      From worker 2:	│     [20] (::Distributed.var"#103#104"{Distributed.CallMsg{:call}})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:274
      From worker 2:	│     [21] run_work_thunk(thunk::Distributed.var"#103#104"{Distributed.CallMsg{:call}}, print_error::Bool)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:63
      From worker 2:	│     [22] run_work_thunk(rv::Distributed.RemoteValue, thunk::Function)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:72
      From worker 2:	│     [23] (::Distributed.var"#96#98"{Distributed.RemoteValue, Distributed.var"#103#104"{Distributed.CallMsg{:call}}})()
      From worker 2:	│        @ Distributed ./task.jl:411
      From worker 2:	│    in expression starting at /home/users1/xorwndekda/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:36
      From worker 2:	└ @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:49
      From worker 2:	┌ Warning: Error requiring `HDF5` from `Plots`
      From worker 2:	│   exception =
      From worker 2:	│    LoadError: UndefVarError: Group not defined
      From worker 2:	│    Stacktrace:
      From worker 2:	│      [1] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:161
      From worker 2:	│      [2] include(mod::Module, _path::String)
      From worker 2:	│        @ Base ./Base.jl:386
      From worker 2:	│      [3] include(x::String)
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1
      From worker 2:	│      [4] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/init.jl:46
      From worker 2:	│      [5] eval
      From worker 2:	│        @ ./boot.jl:360 [inlined]
      From worker 2:	│      [6] eval
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1 [inlined]
      From worker 2:	│      [7] (::Plots.var"#285#321")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:99
      From worker 2:	│      [8] err(f::Any, listener::Module, modname::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:47
      From worker 2:	│      [9] (::Plots.var"#284#320")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:98
      From worker 2:	│     [10] withpath(f::Any, path::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:37
      From worker 2:	│     [11] (::Plots.var"#283#319")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:97
      From worker 2:	│     [12] listenpkg(f::Any, pkg::Base.PkgId)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:20
      From worker 2:	│     [13] macro expansion
      From worker 2:	│        @ ~/.julia/packages/Requires/7Ncym/src/require.jl:95 [inlined]
      From worker 2:	│     [14] __init__()
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/init.jl:44
      From worker 2:	│     [15] _include_from_serialized(path::String, depmods::Vector{Any})
      From worker 2:	│        @ Base ./loading.jl:696
      From worker 2:	│     [16] _require_search_from_serialized(pkg::Base.PkgId, sourcepath::String)
      From worker 2:	│        @ Base ./loading.jl:782
      From worker 2:	│     [17] _require(pkg::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:1020
      From worker 2:	│     [18] require(uuidkey::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:936
      From worker 2:	│     [19] (::Distributed.var"#1#2"{Base.PkgId})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/Distributed.jl:79
      From worker 2:	│     [20] (::Distributed.var"#103#104"{Distributed.CallMsg{:call}})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:274
      From worker 2:	│     [21] run_work_thunk(thunk::Distributed.var"#103#104"{Distributed.CallMsg{:call}}, print_error::Bool)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:63
      From worker 2:	│     [22] run_work_thunk(rv::Distributed.RemoteValue, thunk::Function)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:72
      From worker 2:	│     [23] (::Distributed.var"#96#98"{Distributed.RemoteValue, Distributed.var"#103#104"{Distributed.CallMsg{:call}}})()
      From worker 2:	│        @ Distributed ./task.jl:411
      From worker 2:	│    in expression starting at /home/users1/xorwndekda/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:36
      From worker 2:	└ @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:49
      From worker 2:	┌ Warning: Error requiring `HDF5` from `Plots`
      From worker 2:	│   exception =
      From worker 2:	│    LoadError: UndefVarError: Group not defined
      From worker 2:	│    Stacktrace:
      From worker 2:	│      [1] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:161
      From worker 2:	│      [2] include(mod::Module, _path::String)
      From worker 2:	│        @ Base ./Base.jl:386
      From worker 2:	│      [3] include(x::String)
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1
      From worker 2:	│      [4] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/init.jl:46
      From worker 2:	│      [5] eval
      From worker 2:	│        @ ./boot.jl:360 [inlined]
      From worker 2:	│      [6] eval
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1 [inlined]
      From worker 2:	│      [7] (::Plots.var"#285#321")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:99
      From worker 2:	│      [8] err(f::Any, listener::Module, modname::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:47
      From worker 2:	│      [9] (::Plots.var"#284#320")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:98
      From worker 2:	│     [10] withpath(f::Any, path::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:37
      From worker 2:	│     [11] (::Plots.var"#283#319")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:97
      From worker 2:	│     [12] listenpkg(f::Any, pkg::Base.PkgId)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:20
      From worker 2:	│     [13] macro expansion
      From worker 2:	│        @ ~/.julia/packages/Requires/7Ncym/src/require.jl:95 [inlined]
      From worker 2:	│     [14] __init__()
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/init.jl:44
      From worker 2:	│     [15] _include_from_serialized(path::String, depmods::Vector{Any})
      From worker 2:	│        @ Base ./loading.jl:696
      From worker 2:	│     [16] _require_search_from_serialized(pkg::Base.PkgId, sourcepath::String)
      From worker 2:	│        @ Base ./loading.jl:782
      From worker 2:	│     [17] _require(pkg::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:1020
      From worker 2:	│     [18] require(uuidkey::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:936
      From worker 2:	│     [19] (::Distributed.var"#1#2"{Base.PkgId})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/Distributed.jl:79
      From worker 2:	│     [20] (::Distributed.var"#103#104"{Distributed.CallMsg{:call}})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:274
      From worker 2:	│     [21] run_work_thunk(thunk::Distributed.var"#103#104"{Distributed.CallMsg{:call}}, print_error::Bool)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:63
      From worker 2:	│     [22] run_work_thunk(rv::Distributed.RemoteValue, thunk::Function)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:72
      From worker 2:	│     [23] (::Distributed.var"#96#98"{Distributed.RemoteValue, Distributed.var"#103#104"{Distributed.CallMsg{:call}}})()
      From worker 2:	│        @ Distributed ./task.jl:411
      From worker 2:	│    in expression starting at /home/users1/xorwndekda/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:36
      From worker 2:	└ @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:49
      From worker 2:	┌ Warning: Error requiring `HDF5` from `Plots`
      From worker 2:	│   exception =
      From worker 2:	│    LoadError: UndefVarError: Group not defined
      From worker 2:	│    Stacktrace:
      From worker 2:	│      [1] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:161
      From worker 2:	│      [2] include(mod::Module, _path::String)
      From worker 2:	│        @ Base ./Base.jl:386
      From worker 2:	│      [3] include(x::String)
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1
      From worker 2:	│      [4] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/init.jl:46
      From worker 2:	│      [5] eval
      From worker 2:	│        @ ./boot.jl:360 [inlined]
      From worker 2:	│      [6] eval
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1 [inlined]
      From worker 2:	│      [7] (::Plots.var"#285#321")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:99
      From worker 2:	│      [8] err(f::Any, listener::Module, modname::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:47
      From worker 2:	│      [9] (::Plots.var"#284#320")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:98
      From worker 2:	│     [10] withpath(f::Any, path::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:37
      From worker 2:	│     [11] (::Plots.var"#283#319")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:97
      From worker 2:	│     [12] listenpkg(f::Any, pkg::Base.PkgId)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:20
      From worker 2:	│     [13] macro expansion
      From worker 2:	│        @ ~/.julia/packages/Requires/7Ncym/src/require.jl:95 [inlined]
      From worker 2:	│     [14] __init__()
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/init.jl:44
      From worker 2:	│     [15] _include_from_serialized(path::String, depmods::Vector{Any})
      From worker 2:	│        @ Base ./loading.jl:696
      From worker 2:	│     [16] _require_search_from_serialized(pkg::Base.PkgId, sourcepath::String)
      From worker 2:	│        @ Base ./loading.jl:782
      From worker 2:	│     [17] _require(pkg::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:1020
      From worker 2:	│     [18] require(uuidkey::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:936
      From worker 2:	│     [19] (::Distributed.var"#1#2"{Base.PkgId})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/Distributed.jl:79
      From worker 2:	│     [20] (::Distributed.var"#103#104"{Distributed.CallMsg{:call}})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:274
      From worker 2:	│     [21] run_work_thunk(thunk::Distributed.var"#103#104"{Distributed.CallMsg{:call}}, print_error::Bool)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:63
      From worker 2:	│     [22] run_work_thunk(rv::Distributed.RemoteValue, thunk::Function)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:72
      From worker 2:	│     [23] (::Distributed.var"#96#98"{Distributed.RemoteValue, Distributed.var"#103#104"{Distributed.CallMsg{:call}}})()
      From worker 2:	│        @ Distributed ./task.jl:411
      From worker 2:	│    in expression starting at /home/users1/xorwndekda/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:36
      From worker 2:	└ @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:49
      From worker 2:	┌ Warning: Error requiring `HDF5` from `Plots`
      From worker 2:	│   exception =
      From worker 2:	│    LoadError: UndefVarError: Group not defined
      From worker 2:	│    Stacktrace:
      From worker 2:	│      [1] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:161
      From worker 2:	│      [2] include(mod::Module, _path::String)
      From worker 2:	│        @ Base ./Base.jl:386
      From worker 2:	│      [3] include(x::String)
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1
      From worker 2:	│      [4] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/init.jl:46
      From worker 2:	│      [5] eval
      From worker 2:	│        @ ./boot.jl:360 [inlined]
      From worker 2:	│      [6] eval
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1 [inlined]
      From worker 2:	│      [7] (::Plots.var"#285#321")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:99
      From worker 2:	│      [8] err(f::Any, listener::Module, modname::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:47
      From worker 2:	│      [9] (::Plots.var"#284#320")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:98
      From worker 2:	│     [10] withpath(f::Any, path::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:37
      From worker 2:	│     [11] (::Plots.var"#283#319")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:97
      From worker 2:	│     [12] listenpkg(f::Any, pkg::Base.PkgId)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:20
      From worker 2:	│     [13] macro expansion
      From worker 2:	│        @ ~/.julia/packages/Requires/7Ncym/src/require.jl:95 [inlined]
      From worker 2:	│     [14] __init__()
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/init.jl:44
      From worker 2:	│     [15] _include_from_serialized(path::String, depmods::Vector{Any})
      From worker 2:	│        @ Base ./loading.jl:696
      From worker 2:	│     [16] _require_search_from_serialized(pkg::Base.PkgId, sourcepath::String)
      From worker 2:	│        @ Base ./loading.jl:782
      From worker 2:	│     [17] _require(pkg::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:1020
      From worker 2:	│     [18] require(uuidkey::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:936
      From worker 2:	│     [19] (::Distributed.var"#1#2"{Base.PkgId})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/Distributed.jl:79
      From worker 2:	│     [20] (::Distributed.var"#103#104"{Distributed.CallMsg{:call}})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:274
      From worker 2:	│     [21] run_work_thunk(thunk::Distributed.var"#103#104"{Distributed.CallMsg{:call}}, print_error::Bool)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:63
      From worker 2:	│     [22] run_work_thunk(rv::Distributed.RemoteValue, thunk::Function)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:72
      From worker 2:	│     [23] (::Distributed.var"#96#98"{Distributed.RemoteValue, Distributed.var"#103#104"{Distributed.CallMsg{:call}}})()
      From worker 2:	│        @ Distributed ./task.jl:411
      From worker 2:	│    in expression starting at /home/users1/xorwndekda/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:36
      From worker 2:	└ @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:49
      From worker 2:	┌ Warning: Error requiring `HDF5` from `Plots`
      From worker 2:	│   exception =
      From worker 2:	│    LoadError: UndefVarError: Group not defined
      From worker 2:	│    Stacktrace:
      From worker 2:	│      [1] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:161
      From worker 2:	│      [2] include(mod::Module, _path::String)
      From worker 2:	│        @ Base ./Base.jl:386
      From worker 2:	│      [3] include(x::String)
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1
      From worker 2:	│      [4] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/init.jl:46
      From worker 2:	│      [5] eval
      From worker 2:	│        @ ./boot.jl:360 [inlined]
      From worker 2:	│      [6] eval
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1 [inlined]
      From worker 2:	│      [7] (::Plots.var"#285#321")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:99
      From worker 2:	│      [8] err(f::Any, listener::Module, modname::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:47
      From worker 2:	│      [9] (::Plots.var"#284#320")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:98
      From worker 2:	│     [10] withpath(f::Any, path::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:37
      From worker 2:	│     [11] (::Plots.var"#283#319")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:97
      From worker 2:	│     [12] listenpkg(f::Any, pkg::Base.PkgId)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:20
      From worker 2:	│     [13] macro expansion
      From worker 2:	│        @ ~/.julia/packages/Requires/7Ncym/src/require.jl:95 [inlined]
      From worker 2:	│     [14] __init__()
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/init.jl:44
      From worker 2:	│     [15] _include_from_serialized(path::String, depmods::Vector{Any})
      From worker 2:	│        @ Base ./loading.jl:696
      From worker 2:	│     [16] _require_search_from_serialized(pkg::Base.PkgId, sourcepath::String)
      From worker 2:	│        @ Base ./loading.jl:782
      From worker 2:	│     [17] _require(pkg::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:1020
      From worker 2:	│     [18] require(uuidkey::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:936
      From worker 2:	│     [19] (::Distributed.var"#1#2"{Base.PkgId})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/Distributed.jl:79
      From worker 2:	│     [20] (::Distributed.var"#103#104"{Distributed.CallMsg{:call}})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:274
      From worker 2:	│     [21] run_work_thunk(thunk::Distributed.var"#103#104"{Distributed.CallMsg{:call}}, print_error::Bool)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:63
      From worker 2:	│     [22] run_work_thunk(rv::Distributed.RemoteValue, thunk::Function)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:72
      From worker 2:	│     [23] (::Distributed.var"#96#98"{Distributed.RemoteValue, Distributed.var"#103#104"{Distributed.CallMsg{:call}}})()
      From worker 2:	│        @ Distributed ./task.jl:411
      From worker 2:	│    in expression starting at /home/users1/xorwndekda/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:36
      From worker 2:	└ @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:49
      From worker 2:	┌ Warning: Error requiring `HDF5` from `Plots`
      From worker 2:	│   exception =
      From worker 2:	│    LoadError: UndefVarError: Group not defined
      From worker 2:	│    Stacktrace:
      From worker 2:	│      [1] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:161
      From worker 2:	│      [2] include(mod::Module, _path::String)
      From worker 2:	│        @ Base ./Base.jl:386
      From worker 2:	│      [3] include(x::String)
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1
      From worker 2:	│      [4] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/init.jl:46
      From worker 2:	│      [5] eval
      From worker 2:	│        @ ./boot.jl:360 [inlined]
      From worker 2:	│      [6] eval
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1 [inlined]
      From worker 2:	│      [7] (::Plots.var"#285#321")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:99
      From worker 2:	│      [8] err(f::Any, listener::Module, modname::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:47
      From worker 2:	│      [9] (::Plots.var"#284#320")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:98
      From worker 2:	│     [10] withpath(f::Any, path::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:37
      From worker 2:	│     [11] (::Plots.var"#283#319")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:97
      From worker 2:	│     [12] listenpkg(f::Any, pkg::Base.PkgId)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:20
      From worker 2:	│     [13] macro expansion
      From worker 2:	│        @ ~/.julia/packages/Requires/7Ncym/src/require.jl:95 [inlined]
      From worker 2:	│     [14] __init__()
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/init.jl:44
      From worker 2:	│     [15] _include_from_serialized(path::String, depmods::Vector{Any})
      From worker 2:	│        @ Base ./loading.jl:696
      From worker 2:	│     [16] _require_search_from_serialized(pkg::Base.PkgId, sourcepath::String)
      From worker 2:	│        @ Base ./loading.jl:782
      From worker 2:	│     [17] _require(pkg::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:1020
      From worker 2:	│     [18] require(uuidkey::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:936
      From worker 2:	│     [19] (::Distributed.var"#1#2"{Base.PkgId})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/Distributed.jl:79
      From worker 2:	│     [20] (::Distributed.var"#103#104"{Distributed.CallMsg{:call}})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:274
      From worker 2:	│     [21] run_work_thunk(thunk::Distributed.var"#103#104"{Distributed.CallMsg{:call}}, print_error::Bool)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:63
      From worker 2:	│     [22] run_work_thunk(rv::Distributed.RemoteValue, thunk::Function)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:72
      From worker 2:	│     [23] (::Distributed.var"#96#98"{Distributed.RemoteValue, Distributed.var"#103#104"{Distributed.CallMsg{:call}}})()
      From worker 2:	│        @ Distributed ./task.jl:411
      From worker 2:	│    in expression starting at /home/users1/xorwndekda/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:36
      From worker 2:	└ @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:49
      From worker 2:	┌ Warning: Error requiring `HDF5` from `Plots`
      From worker 2:	│   exception =
      From worker 2:	│    LoadError: UndefVarError: Group not defined
      From worker 2:	│    Stacktrace:
      From worker 2:	│      [1] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:161
      From worker 2:	│      [2] include(mod::Module, _path::String)
      From worker 2:	│        @ Base ./Base.jl:386
      From worker 2:	│      [3] include(x::String)
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1
      From worker 2:	│      [4] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/init.jl:46
      From worker 2:	│      [5] eval
      From worker 2:	│        @ ./boot.jl:360 [inlined]
      From worker 2:	│      [6] eval
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1 [inlined]
      From worker 2:	│      [7] (::Plots.var"#285#321")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:99
      From worker 2:	│      [8] err(f::Any, listener::Module, modname::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:47
      From worker 2:	│      [9] (::Plots.var"#284#320")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:98
      From worker 2:	│     [10] withpath(f::Any, path::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:37
      From worker 2:	│     [11] (::Plots.var"#283#319")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:97
      From worker 2:	│     [12] listenpkg(f::Any, pkg::Base.PkgId)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:20
      From worker 2:	│     [13] macro expansion
      From worker 2:	│        @ ~/.julia/packages/Requires/7Ncym/src/require.jl:95 [inlined]
      From worker 2:	│     [14] __init__()
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/init.jl:44
      From worker 2:	│     [15] _include_from_serialized(path::String, depmods::Vector{Any})
      From worker 2:	│        @ Base ./loading.jl:696
      From worker 2:	│     [16] _require_search_from_serialized(pkg::Base.PkgId, sourcepath::String)
      From worker 2:	│        @ Base ./loading.jl:782
      From worker 2:	│     [17] _require(pkg::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:1020
      From worker 2:	│     [18] require(uuidkey::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:936
      From worker 2:	│     [19] (::Distributed.var"#1#2"{Base.PkgId})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/Distributed.jl:79
      From worker 2:	│     [20] (::Distributed.var"#103#104"{Distributed.CallMsg{:call}})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:274
      From worker 2:	│     [21] run_work_thunk(thunk::Distributed.var"#103#104"{Distributed.CallMsg{:call}}, print_error::Bool)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:63
      From worker 2:	│     [22] run_work_thunk(rv::Distributed.RemoteValue, thunk::Function)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:72
      From worker 2:	│     [23] (::Distributed.var"#96#98"{Distributed.RemoteValue, Distributed.var"#103#104"{Distributed.CallMsg{:call}}})()
      From worker 2:	│        @ Distributed ./task.jl:411
      From worker 2:	│    in expression starting at /home/users1/xorwndekda/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:36
      From worker 2:	└ @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:49
      From worker 2:	┌ Warning: Error requiring `HDF5` from `Plots`
      From worker 2:	│   exception =
      From worker 2:	│    LoadError: UndefVarError: Group not defined
      From worker 2:	│    Stacktrace:
      From worker 2:	│      [1] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:161
      From worker 2:	│      [2] include(mod::Module, _path::String)
      From worker 2:	│        @ Base ./Base.jl:386
      From worker 2:	│      [3] include(x::String)
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1
      From worker 2:	│      [4] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/init.jl:46
      From worker 2:	│      [5] eval
      From worker 2:	│        @ ./boot.jl:360 [inlined]
      From worker 2:	│      [6] eval
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1 [inlined]
      From worker 2:	│      [7] (::Plots.var"#285#321")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:99
      From worker 2:	│      [8] err(f::Any, listener::Module, modname::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:47
      From worker 2:	│      [9] (::Plots.var"#284#320")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:98
      From worker 2:	│     [10] withpath(f::Any, path::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:37
      From worker 2:	│     [11] (::Plots.var"#283#319")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:97
      From worker 2:	│     [12] listenpkg(f::Any, pkg::Base.PkgId)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:20
      From worker 2:	│     [13] macro expansion
      From worker 2:	│        @ ~/.julia/packages/Requires/7Ncym/src/require.jl:95 [inlined]
      From worker 2:	│     [14] __init__()
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/init.jl:44
      From worker 2:	│     [15] _include_from_serialized(path::String, depmods::Vector{Any})
      From worker 2:	│        @ Base ./loading.jl:696
      From worker 2:	│     [16] _require_search_from_serialized(pkg::Base.PkgId, sourcepath::String)
      From worker 2:	│        @ Base ./loading.jl:782
      From worker 2:	│     [17] _require(pkg::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:1020
      From worker 2:	│     [18] require(uuidkey::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:936
      From worker 2:	│     [19] (::Distributed.var"#1#2"{Base.PkgId})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/Distributed.jl:79
      From worker 2:	│     [20] (::Distributed.var"#103#104"{Distributed.CallMsg{:call}})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:274
      From worker 2:	│     [21] run_work_thunk(thunk::Distributed.var"#103#104"{Distributed.CallMsg{:call}}, print_error::Bool)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:63
      From worker 2:	│     [22] run_work_thunk(rv::Distributed.RemoteValue, thunk::Function)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:72
      From worker 2:	│     [23] (::Distributed.var"#96#98"{Distributed.RemoteValue, Distributed.var"#103#104"{Distributed.CallMsg{:call}}})()
      From worker 2:	│        @ Distributed ./task.jl:411
      From worker 2:	│    in expression starting at /home/users1/xorwndekda/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:36
      From worker 2:	└ @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:49
      From worker 2:	┌ Warning: Error requiring `HDF5` from `Plots`
      From worker 2:	│   exception =
      From worker 2:	│    LoadError: UndefVarError: Group not defined
      From worker 2:	│    Stacktrace:
      From worker 2:	│      [1] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:161
      From worker 2:	│      [2] include(mod::Module, _path::String)
      From worker 2:	│        @ Base ./Base.jl:386
      From worker 2:	│      [3] include(x::String)
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1
      From worker 2:	│      [4] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/init.jl:46
      From worker 2:	│      [5] eval
      From worker 2:	│        @ ./boot.jl:360 [inlined]
      From worker 2:	│      [6] eval
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1 [inlined]
      From worker 2:	│      [7] (::Plots.var"#285#321")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:99
      From worker 2:	│      [8] err(f::Any, listener::Module, modname::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:47
      From worker 2:	│      [9] (::Plots.var"#284#320")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:98
      From worker 2:	│     [10] withpath(f::Any, path::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:37
      From worker 2:	│     [11] (::Plots.var"#283#319")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:97
      From worker 2:	│     [12] listenpkg(f::Any, pkg::Base.PkgId)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:20
      From worker 2:	│     [13] macro expansion
      From worker 2:	│        @ ~/.julia/packages/Requires/7Ncym/src/require.jl:95 [inlined]
      From worker 2:	│     [14] __init__()
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/init.jl:44
      From worker 2:	│     [15] _include_from_serialized(path::String, depmods::Vector{Any})
      From worker 2:	│        @ Base ./loading.jl:696
      From worker 2:	│     [16] _require_search_from_serialized(pkg::Base.PkgId, sourcepath::String)
      From worker 2:	│        @ Base ./loading.jl:782
      From worker 2:	│     [17] _require(pkg::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:1020
      From worker 2:	│     [18] require(uuidkey::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:936
      From worker 2:	│     [19] (::Distributed.var"#1#2"{Base.PkgId})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/Distributed.jl:79
      From worker 2:	│     [20] (::Distributed.var"#103#104"{Distributed.CallMsg{:call}})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:274
      From worker 2:	│     [21] run_work_thunk(thunk::Distributed.var"#103#104"{Distributed.CallMsg{:call}}, print_error::Bool)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:63
      From worker 2:	│     [22] run_work_thunk(rv::Distributed.RemoteValue, thunk::Function)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:72
      From worker 2:	│     [23] (::Distributed.var"#96#98"{Distributed.RemoteValue, Distributed.var"#103#104"{Distributed.CallMsg{:call}}})()
      From worker 2:	│        @ Distributed ./task.jl:411
      From worker 2:	│    in expression starting at /home/users1/xorwndekda/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:36
      From worker 2:	└ @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:49
      From worker 2:	┌ Warning: Error requiring `HDF5` from `Plots`
      From worker 2:	│   exception =
      From worker 2:	│    LoadError: UndefVarError: Group not defined
      From worker 2:	│    Stacktrace:
      From worker 2:	│      [1] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:161
      From worker 2:	│      [2] include(mod::Module, _path::String)
      From worker 2:	│        @ Base ./Base.jl:386
      From worker 2:	│      [3] include(x::String)
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1
      From worker 2:	│      [4] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/init.jl:46
      From worker 2:	│      [5] eval
      From worker 2:	│        @ ./boot.jl:360 [inlined]
      From worker 2:	│      [6] eval
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1 [inlined]
      From worker 2:	│      [7] (::Plots.var"#285#321")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:99
      From worker 2:	│      [8] err(f::Any, listener::Module, modname::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:47
      From worker 2:	│      [9] (::Plots.var"#284#320")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:98
      From worker 2:	│     [10] withpath(f::Any, path::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:37
      From worker 2:	│     [11] (::Plots.var"#283#319")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:97
      From worker 2:	│     [12] listenpkg(f::Any, pkg::Base.PkgId)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:20
      From worker 2:	│     [13] macro expansion
      From worker 2:	│        @ ~/.julia/packages/Requires/7Ncym/src/require.jl:95 [inlined]
      From worker 2:	│     [14] __init__()
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/init.jl:44
      From worker 2:	│     [15] _include_from_serialized(path::String, depmods::Vector{Any})
      From worker 2:	│        @ Base ./loading.jl:696
      From worker 2:	│     [16] _require_search_from_serialized(pkg::Base.PkgId, sourcepath::String)
      From worker 2:	│        @ Base ./loading.jl:782
      From worker 2:	│     [17] _require(pkg::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:1020
      From worker 2:	│     [18] require(uuidkey::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:936
      From worker 2:	│     [19] (::Distributed.var"#1#2"{Base.PkgId})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/Distributed.jl:79
      From worker 2:	│     [20] (::Distributed.var"#103#104"{Distributed.CallMsg{:call}})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:274
      From worker 2:	│     [21] run_work_thunk(thunk::Distributed.var"#103#104"{Distributed.CallMsg{:call}}, print_error::Bool)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:63
      From worker 2:	│     [22] run_work_thunk(rv::Distributed.RemoteValue, thunk::Function)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:72
      From worker 2:	│     [23] (::Distributed.var"#96#98"{Distributed.RemoteValue, Distributed.var"#103#104"{Distributed.CallMsg{:call}}})()
      From worker 2:	│        @ Distributed ./task.jl:411
      From worker 2:	│    in expression starting at /home/users1/xorwndekda/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:36
      From worker 2:	└ @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:49
      From worker 2:	┌ Warning: Error requiring `HDF5` from `Plots`
      From worker 2:	│   exception =
      From worker 2:	│    LoadError: UndefVarError: Group not defined
      From worker 2:	│    Stacktrace:
      From worker 2:	│      [1] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:161
      From worker 2:	│      [2] include(mod::Module, _path::String)
      From worker 2:	│        @ Base ./Base.jl:386
      From worker 2:	│      [3] include(x::String)
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1
      From worker 2:	│      [4] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/init.jl:46
      From worker 2:	│      [5] eval
      From worker 2:	│        @ ./boot.jl:360 [inlined]
      From worker 2:	│      [6] eval
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1 [inlined]
      From worker 2:	│      [7] (::Plots.var"#285#321")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:99
      From worker 2:	│      [8] err(f::Any, listener::Module, modname::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:47
      From worker 2:	│      [9] (::Plots.var"#284#320")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:98
      From worker 2:	│     [10] withpath(f::Any, path::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:37
      From worker 2:	│     [11] (::Plots.var"#283#319")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:97
      From worker 2:	│     [12] listenpkg(f::Any, pkg::Base.PkgId)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:20
      From worker 2:	│     [13] macro expansion
      From worker 2:	│        @ ~/.julia/packages/Requires/7Ncym/src/require.jl:95 [inlined]
      From worker 2:	│     [14] __init__()
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/init.jl:44
      From worker 2:	│     [15] _include_from_serialized(path::String, depmods::Vector{Any})
      From worker 2:	│        @ Base ./loading.jl:696
      From worker 2:	│     [16] _require_search_from_serialized(pkg::Base.PkgId, sourcepath::String)
      From worker 2:	│        @ Base ./loading.jl:782
      From worker 2:	│     [17] _require(pkg::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:1020
      From worker 2:	│     [18] require(uuidkey::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:936
      From worker 2:	│     [19] (::Distributed.var"#1#2"{Base.PkgId})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/Distributed.jl:79
      From worker 2:	│     [20] (::Distributed.var"#103#104"{Distributed.CallMsg{:call}})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:274
      From worker 2:	│     [21] run_work_thunk(thunk::Distributed.var"#103#104"{Distributed.CallMsg{:call}}, print_error::Bool)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:63
      From worker 2:	│     [22] run_work_thunk(rv::Distributed.RemoteValue, thunk::Function)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:72
      From worker 2:	│     [23] (::Distributed.var"#96#98"{Distributed.RemoteValue, Distributed.var"#103#104"{Distributed.CallMsg{:call}}})()
      From worker 2:	│        @ Distributed ./task.jl:411
      From worker 2:	│    in expression starting at /home/users1/xorwndekda/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:36
      From worker 2:	└ @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:49
      From worker 2:	┌ Warning: Error requiring `HDF5` from `Plots`
      From worker 2:	│   exception =
      From worker 2:	│    LoadError: UndefVarError: Group not defined
      From worker 2:	│    Stacktrace:
      From worker 2:	│      [1] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:161
      From worker 2:	│      [2] include(mod::Module, _path::String)
      From worker 2:	│        @ Base ./Base.jl:386
      From worker 2:	│      [3] include(x::String)
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1
      From worker 2:	│      [4] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/init.jl:46
      From worker 2:	│      [5] eval
      From worker 2:	│        @ ./boot.jl:360 [inlined]
      From worker 2:	│      [6] eval
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1 [inlined]
      From worker 2:	│      [7] (::Plots.var"#285#321")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:99
      From worker 2:	│      [8] err(f::Any, listener::Module, modname::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:47
      From worker 2:	│      [9] (::Plots.var"#284#320")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:98
      From worker 2:	│     [10] withpath(f::Any, path::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:37
      From worker 2:	│     [11] (::Plots.var"#283#319")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:97
      From worker 2:	│     [12] listenpkg(f::Any, pkg::Base.PkgId)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:20
      From worker 2:	│     [13] macro expansion
      From worker 2:	│        @ ~/.julia/packages/Requires/7Ncym/src/require.jl:95 [inlined]
      From worker 2:	│     [14] __init__()
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/init.jl:44
      From worker 2:	│     [15] _include_from_serialized(path::String, depmods::Vector{Any})
      From worker 2:	│        @ Base ./loading.jl:696
      From worker 2:	│     [16] _require_search_from_serialized(pkg::Base.PkgId, sourcepath::String)
      From worker 2:	│        @ Base ./loading.jl:782
      From worker 2:	│     [17] _require(pkg::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:1020
      From worker 2:	│     [18] require(uuidkey::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:936
      From worker 2:	│     [19] (::Distributed.var"#1#2"{Base.PkgId})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/Distributed.jl:79
      From worker 2:	│     [20] (::Distributed.var"#103#104"{Distributed.CallMsg{:call}})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:274
      From worker 2:	│     [21] run_work_thunk(thunk::Distributed.var"#103#104"{Distributed.CallMsg{:call}}, print_error::Bool)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:63
      From worker 2:	│     [22] run_work_thunk(rv::Distributed.RemoteValue, thunk::Function)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:72
      From worker 2:	│     [23] (::Distributed.var"#96#98"{Distributed.RemoteValue, Distributed.var"#103#104"{Distributed.CallMsg{:call}}})()
      From worker 2:	│        @ Distributed ./task.jl:411
      From worker 2:	│    in expression starting at /home/users1/xorwndekda/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:36
      From worker 2:	└ @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:49
      From worker 2:	┌ Warning: Error requiring `HDF5` from `Plots`
      From worker 2:	│   exception =
      From worker 2:	│    LoadError: UndefVarError: Group not defined
      From worker 2:	│    Stacktrace:
      From worker 2:	│      [1] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:161
      From worker 2:	│      [2] include(mod::Module, _path::String)
      From worker 2:	│        @ Base ./Base.jl:386
      From worker 2:	│      [3] include(x::String)
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1
      From worker 2:	│      [4] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/init.jl:46
      From worker 2:	│      [5] eval
      From worker 2:	│        @ ./boot.jl:360 [inlined]
      From worker 2:	│      [6] eval
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1 [inlined]
      From worker 2:	│      [7] (::Plots.var"#285#321")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:99
      From worker 2:	│      [8] err(f::Any, listener::Module, modname::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:47
      From worker 2:	│      [9] (::Plots.var"#284#320")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:98
      From worker 2:	│     [10] withpath(f::Any, path::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:37
      From worker 2:	│     [11] (::Plots.var"#283#319")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:97
      From worker 2:	│     [12] listenpkg(f::Any, pkg::Base.PkgId)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:20
      From worker 2:	│     [13] macro expansion
      From worker 2:	│        @ ~/.julia/packages/Requires/7Ncym/src/require.jl:95 [inlined]
      From worker 2:	│     [14] __init__()
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/init.jl:44
      From worker 2:	│     [15] _include_from_serialized(path::String, depmods::Vector{Any})
      From worker 2:	│        @ Base ./loading.jl:696
      From worker 2:	│     [16] _require_search_from_serialized(pkg::Base.PkgId, sourcepath::String)
      From worker 2:	│        @ Base ./loading.jl:782
      From worker 2:	│     [17] _require(pkg::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:1020
      From worker 2:	│     [18] require(uuidkey::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:936
      From worker 2:	│     [19] (::Distributed.var"#1#2"{Base.PkgId})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/Distributed.jl:79
      From worker 2:	│     [20] (::Distributed.var"#103#104"{Distributed.CallMsg{:call}})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:274
      From worker 2:	│     [21] run_work_thunk(thunk::Distributed.var"#103#104"{Distributed.CallMsg{:call}}, print_error::Bool)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:63
      From worker 2:	│     [22] run_work_thunk(rv::Distributed.RemoteValue, thunk::Function)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:72
      From worker 2:	│     [23] (::Distributed.var"#96#98"{Distributed.RemoteValue, Distributed.var"#103#104"{Distributed.CallMsg{:call}}})()
      From worker 2:	│        @ Distributed ./task.jl:411
      From worker 2:	│    in expression starting at /home/users1/xorwndekda/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:36
      From worker 2:	└ @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:49
      From worker 2:	┌ Warning: Error requiring `HDF5` from `Plots`
      From worker 2:	│   exception =
      From worker 2:	│    LoadError: UndefVarError: Group not defined
      From worker 2:	│    Stacktrace:
      From worker 2:	│      [1] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:161
      From worker 2:	│      [2] include(mod::Module, _path::String)
      From worker 2:	│        @ Base ./Base.jl:386
      From worker 2:	│      [3] include(x::String)
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1
      From worker 2:	│      [4] top-level scope
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/init.jl:46
      From worker 2:	│      [5] eval
      From worker 2:	│        @ ./boot.jl:360 [inlined]
      From worker 2:	│      [6] eval
      From worker 2:	│        @ ~/.julia/packages/Plots/HcxwM/src/Plots.jl:1 [inlined]
      From worker 2:	│      [7] (::Plots.var"#285#321")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:99
      From worker 2:	│      [8] err(f::Any, listener::Module, modname::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:47
      From worker 2:	│      [9] (::Plots.var"#284#320")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:98
      From worker 2:	│     [10] withpath(f::Any, path::String)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:37
      From worker 2:	│     [11] (::Plots.var"#283#319")()
      From worker 2:	│        @ Plots ~/.julia/packages/Requires/7Ncym/src/require.jl:97
      From worker 2:	│     [12] listenpkg(f::Any, pkg::Base.PkgId)
      From worker 2:	│        @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:20
      From worker 2:	│     [13] macro expansion
      From worker 2:	│        @ ~/.julia/packages/Requires/7Ncym/src/require.jl:95 [inlined]
      From worker 2:	│     [14] __init__()
      From worker 2:	│        @ Plots ~/.julia/packages/Plots/HcxwM/src/init.jl:44
      From worker 2:	│     [15] _include_from_serialized(path::String, depmods::Vector{Any})
      From worker 2:	│        @ Base ./loading.jl:696
      From worker 2:	│     [16] _require_search_from_serialized(pkg::Base.PkgId, sourcepath::String)
      From worker 2:	│        @ Base ./loading.jl:782
      From worker 2:	│     [17] _require(pkg::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:1020
      From worker 2:	│     [18] require(uuidkey::Base.PkgId)
      From worker 2:	│        @ Base ./loading.jl:936
      From worker 2:	│     [19] (::Distributed.var"#1#2"{Base.PkgId})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/Distributed.jl:79
      From worker 2:	│     [20] (::Distributed.var"#103#104"{Distributed.CallMsg{:call}})()
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:274
      From worker 2:	│     [21] run_work_thunk(thunk::Distributed.var"#103#104"{Distributed.CallMsg{:call}}, print_error::Bool)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:63
      From worker 2:	│     [22] run_work_thunk(rv::Distributed.RemoteValue, thunk::Function)
      From worker 2:	│        @ Distributed /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Distributed/src/process_messages.jl:72
      From worker 2:	│     [23] (::Distributed.var"#96#98"{Distributed.RemoteValue, Distributed.var"#103#104"{Distributed.CallMsg{:call}}})()
      From worker 2:	│        @ Distributed ./task.jl:411
      From worker 2:	│    in expression starting at /home/users1/xorwndekda/.julia/packages/Plots/HcxwM/src/backends/hdf5.jl:36
      From worker 2:	└ @ Requires ~/.julia/packages/Requires/7Ncym/src/require.jl:49
 JX_VERSION: 0.9.3-pub+20190529
 Visit https://kaist-elst.github.io/DFTforge.jl/ for details & updates 
 Tested with Julia v1.0 and v1.1 which the most recent version of Julia in 201906 https://julialang.org/
 TOML file: nio_J_wannier.toml
/home/users1/xorwndekda/com/codepaper/examples/reasonable_set2/NiO/SCF_DMFT/wannier_hr.dat
/home/users1/xorwndekda/com/codepaper/examples/reasonable_set2/NiO/SCF_DMFT/wannier.win
/home/users1/xorwndekda/com/codepaper/examples/reasonable_set2/NiO/SCF_DMFT/wannier_hr.dat
/home/users1/xorwndekda/com/codepaper/examples/reasonable_set2/NiO/SCF_DMFT/wannier.win
Dict("result_file_up" => "/home/users1/xorwndekda/com/codepaper/examples/reasonable_set2/NiO/SCF_DMFT/wannier", "result_file_down" => "/home/users1/xorwndekda/com/codepaper/examples/reasonable_set2/NiO/SCF_DMFT/wannier")
DFTforge.DFTcommon.Wannier_OptionalInfo(2, [0.5 0.5 0.5; 0.0 0.0 0.0], Array{Int64, N} where N[[1, 2, 3, 4, 5, 6, 7, 8, 9], [10, 11, 12, 13]])
Union{Vector{Float64}, Vector{String}}[[0.0, 0.0, 0.0], [0.5, 0.0, 0.0], ["G", "M"]]
Union{Vector{Float64}, Vector{String}}[[0.5, 0.0, 0.0], [0.33333333, 0.33333333, 0.0], ["M", "K"]]
Union{Vector{Float64}, Vector{String}}[[0.33333333, 0.33333333, 0.0], [0.0, 0.0, 0.0], ["K", "G"]]
Union{Vector{Float64}, Vector{String}}[[0.0, 0.0, 0.0], [0.0, 0.0, 0.5], ["G", "A"]]
Union{Vector{Float64}, Vector{String}}[[0.0, 0.0, 0.5], [0.5, 0.0, 0.5], ["A", "L"]]
Union{Vector{Float64}, Vector{String}}[[0.5, 0.0, 0.5], [0.33333333, 0.33333333, 0.5], ["L", "H"]]
Union{Vector{Float64}, Vector{String}}[[0.33333333, 0.33333333, 0.5], [0.0, 0.0, 0.5], ["H", "A"]]
Union{Vector{Float64}, Vector{String}}[[0.0, 0.0, 0.5], [0.5, 0.0, 0.5], ["A", "L"]]
Union{Vector{Float64}, Vector{String}}[[0.5, 0.0, 0.5], [0.5, 0.0, 0.0], ["L", "M"]]
Union{Vector{Float64}, Vector{String}}[[0.5, 0.0, 0.0], [0.33333333, 0.33333333, 0.0], ["M", "K"]]
Union{Vector{Float64}, Vector{String}}[[0.33333333, 0.33333333, 0.0], [0.33333333, 0.33333333, 0.5], ["K", "H"]]
 result file is not found result_file_up	/home/users1/xorwndekda/com/codepaper/examples/reasonable_set2/NiO/SCF_DMFT/wannier
 result file is not found result_file_down	/home/users1/xorwndekda/com/codepaper/examples/reasonable_set2/NiO/SCF_DMFT/wannier
Array{Int64, N} where N[[]] AbstractString["all"]
Array{Int64, N} where N[[]] AbstractString["all"]
Array{Int64, N} where N[[]] AbstractString["all"]
Array{Int64, N} where N[[]] AbstractString["all"]
================================================================
energy windows
energywindow_all_list: Vector{Float64}[]
energywindow_1_list: Vector{Float64}[]
energywindow_2_list: Vector{Float64}[]
energywindow_3_list: Vector{Float64}[]
energywindow_4_list: Vector{Float64}[]
================================================================
atom12_list: [(1, 1)]
q_point_num [10, 10, 10]	k_point_num [10, 10, 10]
DFT_type Wannier90
orbital_selection_option nomask
mask1list Array{Int64, N} where N[[]]	mask2list Array{Int64, N} where N[[]]
basisTransformbasisTransform_rule_type(false, Dict{Int64, orbital_rot_type}(), false, Dict{Int64, orbital_downfold_type}(), true, true, Vector{Any}[], custom_transfrom_type[])
jx.col.dmft.spin.wannier_0.0/wannier.hdf5
================================================================
set_current_dftdataset:3
/home/users1/xorwndekda/com/codepaper/examples/reasonable_set2/NiO/SCF_DMFT/wannier.win
fermi_energy = 0.0
/home/users1/xorwndekda/com/codepaper/examples/reasonable_set2/NiO/SCF_DMFT/wannier.win
fermi_energy = 0.0
 basisTransform_init 
 atomnum_eff 2 orbitalNums_eff [9, 4]
 orbitalStartIdx_list [0, 9]
      From worker 2:	set_current_dftdataset:5
      From worker 48:	set_current_dftdataset:5
      From worker 13:	set_current_dftdataset:5
      From worker 39:	set_current_dftdataset:5
      From worker 23:	set_current_dftdataset:5
      From worker 16:	set_current_dftdataset:5
      From worker 53:	set_current_dftdataset:5
      From worker 6:	set_current_dftdataset:5
      From worker 3:	set_current_dftdataset:5
      From worker 4:	set_current_dftdataset:5
      From worker 56:	set_current_dftdataset:5
      From worker 46:	set_current_dftdataset:5
      From worker 25:	set_current_dftdataset:5
      From worker 57:	set_current_dftdataset:5
      From worker 21:	set_current_dftdataset:5
      From worker 8:	set_current_dftdataset:5
      From worker 38:	set_current_dftdataset:5
      From worker 47:	set_current_dftdataset:5
      From worker 43:	set_current_dftdataset:5
      From worker 10:	set_current_dftdataset:5
      From worker 54:	set_current_dftdataset:5
      From worker 22:	set_current_dftdataset:5
      From worker 42:	set_current_dftdataset:5
      From worker 51:	set_current_dftdataset:5
      From worker 12:	set_current_dftdataset:5
      From worker 30:	set_current_dftdataset:5
      From worker 33:	set_current_dftdataset:5
      From worker 32:	set_current_dftdataset:5
      From worker 55:	set_current_dftdataset:5
      From worker 20:	set_current_dftdataset:5
      From worker 35:	set_current_dftdataset:5
      From worker 18:	set_current_dftdataset:5
      From worker 27:	set_current_dftdataset:5
      From worker 17:	set_current_dftdataset:5
      From worker 41:	set_current_dftdataset:5
      From worker 49:	set_current_dftdataset:5
      From worker 37:	set_current_dftdataset:5
      From worker 11:	set_current_dftdataset:5
      From worker 45:	set_current_dftdataset:5
      From worker 40:	set_current_dftdataset:5
      From worker 9:	set_current_dftdataset:5
      From worker 24:	set_current_dftdataset:5
      From worker 29:	set_current_dftdataset:5
      From worker 50:	set_current_dftdataset:5
      From worker 7:	set_current_dftdataset:5
      From worker 34:	set_current_dftdataset:5
      From worker 15:	set_current_dftdataset:5
      From worker 52:	set_current_dftdataset:5
      From worker 31:	set_current_dftdataset:5
      From worker 5:	set_current_dftdataset:5
      From worker 14:	set_current_dftdataset:5
      From worker 19:	set_current_dftdataset:5
      From worker 36:	set_current_dftdataset:5
      From worker 44:	set_current_dftdataset:5
      From worker 26:	set_current_dftdataset:5
      From worker 28:	set_current_dftdataset:5
Any[] String[] DMFT :true, Jx :false
┌ Warning: Assignment to `DMFT_loop` in soft scope is ambiguous because a global variable by the same name exists: `DMFT_loop` will be treated as a new local. Disambiguate by using `local DMFT_loop` to suppress this warning or `global DMFT_loop` to assign to the existing global variable.
└ @ ~/com/codepaper/examples/reasonable_set2/NiO/SCF_DMFT/Jx_DMFT.jl:5221
┌ Warning: Assignment to `SelfE_w_new` in soft scope is ambiguous because a global variable by the same name exists: `SelfE_w_new` will be treated as a new local. Disambiguate by using `local SelfE_w_new` to suppress this warning or `global SelfE_w_new` to assign to the existing global variable.
└ @ ~/com/codepaper/examples/reasonable_set2/NiO/SCF_DMFT/Jx_DMFT.jl:5229
┌ Warning: Assignment to `imp_totN` in soft scope is ambiguous because a global variable by the same name exists: `imp_totN` will be treated as a new local. Disambiguate by using `local imp_totN` to suppress this warning or `global imp_totN` to assign to the existing global variable.
└ @ ~/com/codepaper/examples/reasonable_set2/NiO/SCF_DMFT/Jx_DMFT.jl:5268
┌ Warning: Assignment to `imp_dc` in soft scope is ambiguous because a global variable by the same name exists: `imp_dc` will be treated as a new local. Disambiguate by using `local imp_dc` to suppress this warning or `global imp_dc` to assign to the existing global variable.
└ @ ~/com/codepaper/examples/reasonable_set2/NiO/SCF_DMFT/Jx_DMFT.jl:5269
┌ Warning: Assignment to `init_mu` in soft scope is ambiguous because a global variable by the same name exists: `init_mu` will be treated as a new local. Disambiguate by using `local init_mu` to suppress this warning or `global init_mu` to assign to the existing global variable.
└ @ ~/com/codepaper/examples/reasonable_set2/NiO/SCF_DMFT/Jx_DMFT.jl:5284
┌ Warning: Assignment to `mu` in soft scope is ambiguous because a global variable by the same name exists: `mu` will be treated as a new local. Disambiguate by using `local mu` to suppress this warning or `global mu` to assign to the existing global variable.
└ @ ~/com/codepaper/examples/reasonable_set2/NiO/SCF_DMFT/Jx_DMFT.jl:5287
┌ Warning: Assignment to `Occup` in soft scope is ambiguous because a global variable by the same name exists: `Occup` will be treated as a new local. Disambiguate by using `local Occup` to suppress this warning or `global Occup` to assign to the existing global variable.
└ @ ~/com/codepaper/examples/reasonable_set2/NiO/SCF_DMFT/Jx_DMFT.jl:5287
┌ Warning: Assignment to `H_loc` in soft scope is ambiguous because a global variable by the same name exists: `H_loc` will be treated as a new local. Disambiguate by using `local H_loc` to suppress this warning or `global H_loc` to assign to the existing global variable.
└ @ ~/com/codepaper/examples/reasonable_set2/NiO/SCF_DMFT/Jx_DMFT.jl:5287
┌ Warning: Assignment to `G_loc_iWn` in soft scope is ambiguous because a global variable by the same name exists: `G_loc_iWn` will be treated as a new local. Disambiguate by using `local G_loc_iWn` to suppress this warning or `global G_loc_iWn` to assign to the existing global variable.
└ @ timing.jl:210
┌ Warning: Assignment to `red_G_loc_iWn` in soft scope is ambiguous because a global variable by the same name exists: `red_G_loc_iWn` will be treated as a new local. Disambiguate by using `local red_G_loc_iWn` to suppress this warning or `global red_G_loc_iWn` to assign to the existing global variable.
└ @ ~/com/codepaper/examples/reasonable_set2/NiO/SCF_DMFT/Jx_DMFT.jl:5312
┌ Warning: Assignment to `G_loc_iWn_mat` in soft scope is ambiguous because a global variable by the same name exists: `G_loc_iWn_mat` will be treated as a new local. Disambiguate by using `local G_loc_iWn_mat` to suppress this warning or `global G_loc_iWn_mat` to assign to the existing global variable.
└ @ ~/com/codepaper/examples/reasonable_set2/NiO/SCF_DMFT/Jx_DMFT.jl:5318
┌ Warning: Assignment to `InvWiess_iWn_mat` in soft scope is ambiguous because a global variable by the same name exists: `InvWiess_iWn_mat` will be treated as a new local. Disambiguate by using `local InvWiess_iWn_mat` to suppress this warning or `global InvWiess_iWn_mat` to assign to the existing global variable.
└ @ ~/com/codepaper/examples/reasonable_set2/NiO/SCF_DMFT/Jx_DMFT.jl:5319
┌ Warning: Assignment to `hyb_iWn_mat` in soft scope is ambiguous because a global variable by the same name exists: `hyb_iWn_mat` will be treated as a new local. Disambiguate by using `local hyb_iWn_mat` to suppress this warning or `global hyb_iWn_mat` to assign to the existing global variable.
└ @ ~/com/codepaper/examples/reasonable_set2/NiO/SCF_DMFT/Jx_DMFT.jl:5320
┌ Warning: Assignment to `InvWiess_iWn` in soft scope is ambiguous because a global variable by the same name exists: `InvWiess_iWn` will be treated as a new local. Disambiguate by using `local InvWiess_iWn` to suppress this warning or `global InvWiess_iWn` to assign to the existing global variable.
└ @ timing.jl:210
┌ Warning: Assignment to `hyb_iWn` in soft scope is ambiguous because a global variable by the same name exists: `hyb_iWn` will be treated as a new local. Disambiguate by using `local hyb_iWn` to suppress this warning or `global hyb_iWn` to assign to the existing global variable.
└ @ timing.jl:210
┌ Warning: Assignment to `hyb` in soft scope is ambiguous because a global variable by the same name exists: `hyb` will be treated as a new local. Disambiguate by using `local hyb` to suppress this warning or `global hyb` to assign to the existing global variable.
└ @ ~/com/codepaper/examples/reasonable_set2/NiO/SCF_DMFT/Jx_DMFT.jl:5342
#####################################################
      Calculation type : self-consistent DMFT        
#####################################################



  0.279665 seconds (313.84 k allocations: 18.454 MiB, 56.94% compilation time)
  0.154885 seconds (82.84 k allocations: 4.916 MiB, 39.61% compilation time)
  0.232946 seconds (86.33 k allocations: 5.167 MiB, 29.24% compilation time)





                 =============================================  
                 ================    Jx DMFT  ================  
                 =============================================  



------------- input -------------
K-points grid : [8, 8, 8]
R-points grid : [8, 8, 8]
iW_grid_cut : 300.0
Temperature : 300.0
DMFT spin type : 1
Correlated atoms : [1]
Correlated atoms equiv. : [1]

Green-function basis : matsubara
Solver green cut w: 10.0
Solver Measure time: 20.0
Solver thermalization time: 1.0
First smth. step for self energy: 0
Cal. susc. ?: false
initial bias of selfE for spin-polarized : +/-0.0
self-energy simple mixing ratio of old selfE : 0.5

transform basis ?: false
consider degeneracy ?: false

double counting type: nominal

                imp [1]
U     : 7.0
J     : 0.9
interaction type  :ising
interaction parameterisation  :slater-condon
dc_n0 : 8.0,   [ nominal DC (eV) : 49.35 ]
imp-1 index :
            [1, 0, 0, 0, 0]
            [0, 1, 0, 0, 0]
            [0, 0, 2, 0, 0]
            [0, 0, 0, 1, 0]
            [0, 0, 0, 0, 2]

------------- input -------------

===== loading H_k from tight-binding parameter ... ======
  7.000414 seconds (12.92 M allocations: 1.042 GiB, 5.88% gc time, 69.66% compilation time)
  0.441067 seconds (207.19 k allocations: 86.260 MiB, 11.61% compilation time)


  0.351236 seconds (201.11 k allocations: 14.626 MiB, 15.60% compilation time)
  0.135974 seconds (94.37 k allocations: 10.695 MiB, 10.36% compilation time)
===== Start to calculate wannier occupancy in real frequency ... ======
Passed all variables to calculate G(w) ... 
      From worker 23:	Calculating G(w) ...   20%  done
      From worker 21:	Calculating G(w) ...   40%  done
      From worker 39:	Calculating G(w) ...   60%  done
      From worker 52:	Calculating G(w) ...   80%  done
      From worker 8:	Calculating G(w) ...   100%  done


For non-mag cal, total d-orbital occupation 5 !
===============================================
orb-5, occup : 0.9730573156932895
orb-6, occup : 0.9730573433334669
orb-7, occup : 0.5975673900401363
orb-8, occup : 0.9730573433334667
orb-9, occup : 0.5975679796031435
--------------------------------------
latt-1, occup(up+dn) : 8.228614744006993
======================================

*------------------------------------*
Wannier-Tot-occup(up+dn):13.742500166136802
*------------------------------------*
----------------------------------------------------
Inequv. orbital index of imp. 1 :[5, 6, 7, 8, 9]
Diagonal part of Hloc : [-50.52236700000001, -50.52236700000004, -49.80101499999999, -50.52236700000002, -49.80101500000005]


  0.358939 seconds (443.50 k allocations: 29.743 MiB, 99.32% compilation time)
  2.101642 seconds (6.65 M allocations: 339.663 MiB, 2.06% gc time, 99.74% compilation time)
  0.058198 seconds (73.00 k allocations: 8.136 MiB, 95.35% compilation time)
===== SelfE = imp_dc block initialize ... ===== 
Impurity [1] : orbital # :2,    Spin type :1

  9.776081 seconds (1.71 M allocations: 108.942 MiB, 6.38% compilation time)
-------------------------------------
Initial latt. mu in transform basis :0.0
-------------------------------------
===== SelfE = imp_dc block initialize ... ===== 
Impurity [1] : orbital # :2,    Spin type :1

  7.433719 seconds (36.70 k allocations: 9.830 MiB)
-------------------------
Initial latt. mu :0.0
-------------------------
===== Calculating local green function ... =====
  3.897952 seconds (1.39 M allocations: 106.554 MiB, 13.53% compilation time)


===== Calculating weiss field from G_loc_iWn ... =====
  1.691372 seconds (1.86 M allocations: 106.783 MiB, 39.96% compilation time)

===== Calculating hybrid function from weiss field ... =====
  0.195188 seconds (298.54 k allocations: 18.184 MiB, 98.17% compilation time)

Writing hyb.json ...
Writing hyb.json ...
Writing params.json ...



 CTQMC run ... imp[1]
 Preparing the input file of EDFMTF : actqmc.cix ...
Br: kindx= [(7, 3), (9, 1), (5, -5), (7, -1), (6, 2), (3, -3), (5, 1), (1, -1), (4, -2), (4, 0), (3, 3), (6, -4), (4, 4), (8, -2), (7, -3), (2, 2), (10, 0), (5, 3), (1, 1), (5, -1), (6, 4), (0, 0), (8, 2), (7, 1), (2, -2), (6, 0), (9, -1), (8, 0), (4, 2), (5, -3), (5, 5), (4, -4), (3, 1), (3, -1), (6, -2), (2, 0)]
Br: Stage1: Computing F^ in direct base
Br: Stage2: Compressing F^+ according to its block diagonal form
Br: Stage3: Renumbers states -- creates superstates for ctqmc
Br: Stage4: F^dagger matrices between superstates evaluated
Have HB2
Number of operators needed 1  0
off_diagonal=0
Reading data with 1848 entries

       ============================
          DMFT_loop [1] 
       ============================

Reading SelfE_w ... imp[1]

  7.454418 seconds (36.71 k allocations: 9.827 MiB)
===== Calculating local green function ... =====
  3.099839 seconds (133.90 k allocations: 29.250 MiB)

===== Calculating weiss field from G_loc_iWn ... =====
  0.099514 seconds (114.35 k allocations: 5.993 MiB)

===== Calculating hybrid function from weiss field ... =====
  0.003308 seconds (49.68 k allocations: 4.366 MiB)

Writing hyb.json ...
Writing hyb.json ...



 CTQMC run ... imp[1]
 Preparing the input file of EDFMTF : actqmc.cix ...
Br: kindx= [(7, 3), (9, 1), (5, -5), (7, -1), (6, 2), (3, -3), (5, 1), (1, -1), (4, -2), (4, 0), (3, 3), (6, -4), (4, 4), (8, -2), (7, -3), (2, 2), (10, 0), (5, 3), (1, 1), (5, -1), (6, 4), (0, 0), (8, 2), (7, 1), (2, -2), (6, 0), (9, -1), (8, 0), (4, 2), (5, -3), (5, 5), (4, -4), (3, 1), (3, -1), (6, -2), (2, 0)]
Br: Stage1: Computing F^ in direct base
Br: Stage2: Compressing F^+ according to its block diagonal form
Br: Stage3: Renumbers states -- creates superstates for ctqmc
Br: Stage4: F^dagger matrices between superstates evaluated
Have HB2
Number of operators needed 1  0
off_diagonal=0
Reading data with 1848 entries

       ============================
          DMFT_loop [2] 
       ============================

Reading SelfE_w ... imp[1]

  7.409472 seconds (36.73 k allocations: 9.831 MiB)
===== Calculating local green function ... =====
  3.105242 seconds (133.95 k allocations: 29.251 MiB)

===== Calculating weiss field from G_loc_iWn ... =====
  0.097583 seconds (114.35 k allocations: 5.994 MiB)

===== Calculating hybrid function from weiss field ... =====
  0.003303 seconds (49.68 k allocations: 4.366 MiB)

Writing hyb.json ...
Writing hyb.json ...



 CTQMC run ... imp[1]
 Preparing the input file of EDFMTF : actqmc.cix ...
Br: kindx= [(7, 3), (9, 1), (5, -5), (7, -1), (6, 2), (3, -3), (5, 1), (1, -1), (4, -2), (4, 0), (3, 3), (6, -4), (4, 4), (8, -2), (7, -3), (2, 2), (10, 0), (5, 3), (1, 1), (5, -1), (6, 4), (0, 0), (8, 2), (7, 1), (2, -2), (6, 0), (9, -1), (8, 0), (4, 2), (5, -3), (5, 5), (4, -4), (3, 1), (3, -1), (6, -2), (2, 0)]
Br: Stage1: Computing F^ in direct base
Br: Stage2: Compressing F^+ according to its block diagonal form
Br: Stage3: Renumbers states -- creates superstates for ctqmc
Br: Stage4: F^dagger matrices between superstates evaluated
Have HB2
Number of operators needed 1  0
off_diagonal=0
Reading data with 1848 entries

       ============================
          DMFT_loop [3] 
       ============================

Reading SelfE_w ... imp[1]

  7.419480 seconds (36.71 k allocations: 9.827 MiB)
===== Calculating local green function ... =====
  3.116110 seconds (133.93 k allocations: 29.250 MiB)

===== Calculating weiss field from G_loc_iWn ... =====
  0.105022 seconds (114.35 k allocations: 5.993 MiB)

===== Calculating hybrid function from weiss field ... =====
  0.003451 seconds (49.68 k allocations: 4.366 MiB)

Writing hyb.json ...
Writing hyb.json ...



 CTQMC run ... imp[1]
 Preparing the input file of EDFMTF : actqmc.cix ...
Br: kindx= [(7, 3), (9, 1), (5, -5), (7, -1), (6, 2), (3, -3), (5, 1), (1, -1), (4, -2), (4, 0), (3, 3), (6, -4), (4, 4), (8, -2), (7, -3), (2, 2), (10, 0), (5, 3), (1, 1), (5, -1), (6, 4), (0, 0), (8, 2), (7, 1), (2, -2), (6, 0), (9, -1), (8, 0), (4, 2), (5, -3), (5, 5), (4, -4), (3, 1), (3, -1), (6, -2), (2, 0)]
Br: Stage1: Computing F^ in direct base
Br: Stage2: Compressing F^+ according to its block diagonal form
Br: Stage3: Renumbers states -- creates superstates for ctqmc
Br: Stage4: F^dagger matrices between superstates evaluated
Have HB2
Number of operators needed 1  0
off_diagonal=0
Reading data with 1848 entries

       ============================
          DMFT_loop [4] 
       ============================

Reading SelfE_w ... imp[1]

  7.422545 seconds (36.73 k allocations: 9.831 MiB)
===== Calculating local green function ... =====
  3.112829 seconds (133.94 k allocations: 29.250 MiB)

===== Calculating weiss field from G_loc_iWn ... =====
  0.100617 seconds (114.35 k allocations: 5.993 MiB)

===== Calculating hybrid function from weiss field ... =====
  0.003392 seconds (49.68 k allocations: 4.366 MiB)

Writing hyb.json ...
Writing hyb.json ...



 CTQMC run ... imp[1]
 Preparing the input file of EDFMTF : actqmc.cix ...
Br: kindx= [(7, 3), (9, 1), (5, -5), (7, -1), (6, 2), (3, -3), (5, 1), (1, -1), (4, -2), (4, 0), (3, 3), (6, -4), (4, 4), (8, -2), (7, -3), (2, 2), (10, 0), (5, 3), (1, 1), (5, -1), (6, 4), (0, 0), (8, 2), (7, 1), (2, -2), (6, 0), (9, -1), (8, 0), (4, 2), (5, -3), (5, 5), (4, -4), (3, 1), (3, -1), (6, -2), (2, 0)]
Br: Stage1: Computing F^ in direct base
Br: Stage2: Compressing F^+ according to its block diagonal form
Br: Stage3: Renumbers states -- creates superstates for ctqmc
Br: Stage4: F^dagger matrices between superstates evaluated
Have HB2
Number of operators needed 1  0
off_diagonal=0
Reading data with 1848 entries

       ============================
          DMFT_loop [5] 
       ============================

Reading SelfE_w ... imp[1]

  7.451414 seconds (36.72 k allocations: 9.829 MiB)
===== Calculating local green function ... =====
  3.108094 seconds (133.97 k allocations: 29.251 MiB)

===== Calculating weiss field from G_loc_iWn ... =====
  0.103788 seconds (114.35 k allocations: 5.995 MiB)

===== Calculating hybrid function from weiss field ... =====
  0.003501 seconds (49.68 k allocations: 4.366 MiB)

Writing hyb.json ...
Writing hyb.json ...



 CTQMC run ... imp[1]
 Preparing the input file of EDFMTF : actqmc.cix ...
Br: kindx= [(7, 3), (9, 1), (5, -5), (7, -1), (6, 2), (3, -3), (5, 1), (1, -1), (4, -2), (4, 0), (3, 3), (6, -4), (4, 4), (8, -2), (7, -3), (2, 2), (10, 0), (5, 3), (1, 1), (5, -1), (6, 4), (0, 0), (8, 2), (7, 1), (2, -2), (6, 0), (9, -1), (8, 0), (4, 2), (5, -3), (5, 5), (4, -4), (3, 1), (3, -1), (6, -2), (2, 0)]
Br: Stage1: Computing F^ in direct base
Br: Stage2: Compressing F^+ according to its block diagonal form
Br: Stage3: Renumbers states -- creates superstates for ctqmc
Br: Stage4: F^dagger matrices between superstates evaluated
Have HB2
Number of operators needed 1  0
off_diagonal=0
Reading data with 1848 entries

       ============================
          DMFT_loop [6] 
       ============================

Reading SelfE_w ... imp[1]

  7.412157 seconds (36.72 k allocations: 9.828 MiB)
===== Calculating local green function ... =====
  3.115773 seconds (133.91 k allocations: 29.253 MiB)

===== Calculating weiss field from G_loc_iWn ... =====
  0.104279 seconds (114.36 k allocations: 5.995 MiB)

===== Calculating hybrid function from weiss field ... =====
  0.003401 seconds (49.68 k allocations: 4.366 MiB)

Writing hyb.json ...
Writing hyb.json ...



 CTQMC run ... imp[1]
 Preparing the input file of EDFMTF : actqmc.cix ...
Br: kindx= [(7, 3), (9, 1), (5, -5), (7, -1), (6, 2), (3, -3), (5, 1), (1, -1), (4, -2), (4, 0), (3, 3), (6, -4), (4, 4), (8, -2), (7, -3), (2, 2), (10, 0), (5, 3), (1, 1), (5, -1), (6, 4), (0, 0), (8, 2), (7, 1), (2, -2), (6, 0), (9, -1), (8, 0), (4, 2), (5, -3), (5, 5), (4, -4), (3, 1), (3, -1), (6, -2), (2, 0)]
Br: Stage1: Computing F^ in direct base
Br: Stage2: Compressing F^+ according to its block diagonal form
Br: Stage3: Renumbers states -- creates superstates for ctqmc
Br: Stage4: F^dagger matrices between superstates evaluated
Have HB2
Number of operators needed 1  0
off_diagonal=0
Reading data with 1848 entries

       ============================
          DMFT_loop [7] 
       ============================

Reading SelfE_w ... imp[1]

  7.441464 seconds (36.73 k allocations: 9.829 MiB)
===== Calculating local green function ... =====
  3.104590 seconds (133.93 k allocations: 29.250 MiB)

===== Calculating weiss field from G_loc_iWn ... =====
  0.099506 seconds (114.35 k allocations: 5.997 MiB)

===== Calculating hybrid function from weiss field ... =====
  0.003375 seconds (49.68 k allocations: 4.366 MiB)

Writing hyb.json ...
Writing hyb.json ...



 CTQMC run ... imp[1]
 Preparing the input file of EDFMTF : actqmc.cix ...
Br: kindx= [(7, 3), (9, 1), (5, -5), (7, -1), (6, 2), (3, -3), (5, 1), (1, -1), (4, -2), (4, 0), (3, 3), (6, -4), (4, 4), (8, -2), (7, -3), (2, 2), (10, 0), (5, 3), (1, 1), (5, -1), (6, 4), (0, 0), (8, 2), (7, 1), (2, -2), (6, 0), (9, -1), (8, 0), (4, 2), (5, -3), (5, 5), (4, -4), (3, 1), (3, -1), (6, -2), (2, 0)]
Br: Stage1: Computing F^ in direct base
Br: Stage2: Compressing F^+ according to its block diagonal form
Br: Stage3: Renumbers states -- creates superstates for ctqmc
Br: Stage4: F^dagger matrices between superstates evaluated
Have HB2
Number of operators needed 1  0
off_diagonal=0
Reading data with 1848 entries

       ============================
          DMFT_loop [8] 
       ============================

Reading SelfE_w ... imp[1]

  7.389358 seconds (36.72 k allocations: 9.828 MiB)
===== Calculating local green function ... =====
  3.112552 seconds (134.01 k allocations: 29.253 MiB)

===== Calculating weiss field from G_loc_iWn ... =====
  0.101571 seconds (114.35 k allocations: 5.994 MiB)

===== Calculating hybrid function from weiss field ... =====
  0.003386 seconds (49.68 k allocations: 4.366 MiB)

Writing hyb.json ...
Writing hyb.json ...



 CTQMC run ... imp[1]
 Preparing the input file of EDFMTF : actqmc.cix ...
Br: kindx= [(7, 3), (9, 1), (5, -5), (7, -1), (6, 2), (3, -3), (5, 1), (1, -1), (4, -2), (4, 0), (3, 3), (6, -4), (4, 4), (8, -2), (7, -3), (2, 2), (10, 0), (5, 3), (1, 1), (5, -1), (6, 4), (0, 0), (8, 2), (7, 1), (2, -2), (6, 0), (9, -1), (8, 0), (4, 2), (5, -3), (5, 5), (4, -4), (3, 1), (3, -1), (6, -2), (2, 0)]
Br: Stage1: Computing F^ in direct base
Br: Stage2: Compressing F^+ according to its block diagonal form
Br: Stage3: Renumbers states -- creates superstates for ctqmc
Br: Stage4: F^dagger matrices between superstates evaluated
Have HB2
Number of operators needed 1  0
off_diagonal=0
Reading data with 1848 entries

       ============================
          DMFT_loop [9] 
       ============================

Reading SelfE_w ... imp[1]

  7.435109 seconds (36.71 k allocations: 9.831 MiB)
===== Calculating local green function ... =====
  3.110069 seconds (133.92 k allocations: 29.250 MiB)

===== Calculating weiss field from G_loc_iWn ... =====
  0.103722 seconds (114.35 k allocations: 5.994 MiB)

===== Calculating hybrid function from weiss field ... =====
  0.003443 seconds (49.68 k allocations: 4.366 MiB)

Writing hyb.json ...
Writing hyb.json ...



 CTQMC run ... imp[1]
 Preparing the input file of EDFMTF : actqmc.cix ...
Br: kindx= [(7, 3), (9, 1), (5, -5), (7, -1), (6, 2), (3, -3), (5, 1), (1, -1), (4, -2), (4, 0), (3, 3), (6, -4), (4, 4), (8, -2), (7, -3), (2, 2), (10, 0), (5, 3), (1, 1), (5, -1), (6, 4), (0, 0), (8, 2), (7, 1), (2, -2), (6, 0), (9, -1), (8, 0), (4, 2), (5, -3), (5, 5), (4, -4), (3, 1), (3, -1), (6, -2), (2, 0)]
Br: Stage1: Computing F^ in direct base
Br: Stage2: Compressing F^+ according to its block diagonal form
Br: Stage3: Renumbers states -- creates superstates for ctqmc
Br: Stage4: F^dagger matrices between superstates evaluated
Have HB2
Number of operators needed 1  0
off_diagonal=0
Reading data with 1848 entries

       ============================
          DMFT_loop [10] 
       ============================

Reading SelfE_w ... imp[1]

  7.453786 seconds (36.72 k allocations: 9.828 MiB)
===== Calculating local green function ... =====
  3.105807 seconds (133.92 k allocations: 29.250 MiB)

===== Calculating weiss field from G_loc_iWn ... =====
  0.104893 seconds (114.35 k allocations: 5.993 MiB)

===== Calculating hybrid function from weiss field ... =====
  0.003440 seconds (49.68 k allocations: 4.366 MiB)

Writing hyb.json ...
Writing hyb.json ...



 CTQMC run ... imp[1]
 Preparing the input file of EDFMTF : actqmc.cix ...
Br: kindx= [(7, 3), (9, 1), (5, -5), (7, -1), (6, 2), (3, -3), (5, 1), (1, -1), (4, -2), (4, 0), (3, 3), (6, -4), (4, 4), (8, -2), (7, -3), (2, 2), (10, 0), (5, 3), (1, 1), (5, -1), (6, 4), (0, 0), (8, 2), (7, 1), (2, -2), (6, 0), (9, -1), (8, 0), (4, 2), (5, -3), (5, 5), (4, -4), (3, 1), (3, -1), (6, -2), (2, 0)]
Br: Stage1: Computing F^ in direct base
Br: Stage2: Compressing F^+ according to its block diagonal form
Br: Stage3: Renumbers states -- creates superstates for ctqmc
Br: Stage4: F^dagger matrices between superstates evaluated
Have HB2
Number of operators needed 1  0
off_diagonal=0
Reading data with 1848 entries

       ============================
          DMFT_loop [11] 
       ============================

Reading SelfE_w ... imp[1]

  7.490130 seconds (36.72 k allocations: 9.831 MiB)
===== Calculating local green function ... =====
  3.105438 seconds (133.90 k allocations: 29.249 MiB)

===== Calculating weiss field from G_loc_iWn ... =====
  0.098465 seconds (114.36 k allocations: 5.994 MiB)

===== Calculating hybrid function from weiss field ... =====
  0.003359 seconds (49.68 k allocations: 4.366 MiB)

Writing hyb.json ...
Writing hyb.json ...



 CTQMC run ... imp[1]
 Preparing the input file of EDFMTF : actqmc.cix ...
Br: kindx= [(7, 3), (9, 1), (5, -5), (7, -1), (6, 2), (3, -3), (5, 1), (1, -1), (4, -2), (4, 0), (3, 3), (6, -4), (4, 4), (8, -2), (7, -3), (2, 2), (10, 0), (5, 3), (1, 1), (5, -1), (6, 4), (0, 0), (8, 2), (7, 1), (2, -2), (6, 0), (9, -1), (8, 0), (4, 2), (5, -3), (5, 5), (4, -4), (3, 1), (3, -1), (6, -2), (2, 0)]
Br: Stage1: Computing F^ in direct base
Br: Stage2: Compressing F^+ according to its block diagonal form
Br: Stage3: Renumbers states -- creates superstates for ctqmc
Br: Stage4: F^dagger matrices between superstates evaluated
Have HB2
Number of operators needed 1  0
off_diagonal=0
Reading data with 1848 entries

       ============================
          DMFT_loop [12] 
       ============================

Reading SelfE_w ... imp[1]

  7.449387 seconds (36.72 k allocations: 9.829 MiB)
===== Calculating local green function ... =====
  3.116169 seconds (133.92 k allocations: 29.250 MiB)

===== Calculating weiss field from G_loc_iWn ... =====
  0.105749 seconds (114.35 k allocations: 5.995 MiB)

===== Calculating hybrid function from weiss field ... =====
  0.003434 seconds (49.68 k allocations: 4.366 MiB)

Writing hyb.json ...
Writing hyb.json ...



 CTQMC run ... imp[1]
 Preparing the input file of EDFMTF : actqmc.cix ...
Br: kindx= [(7, 3), (9, 1), (5, -5), (7, -1), (6, 2), (3, -3), (5, 1), (1, -1), (4, -2), (4, 0), (3, 3), (6, -4), (4, 4), (8, -2), (7, -3), (2, 2), (10, 0), (5, 3), (1, 1), (5, -1), (6, 4), (0, 0), (8, 2), (7, 1), (2, -2), (6, 0), (9, -1), (8, 0), (4, 2), (5, -3), (5, 5), (4, -4), (3, 1), (3, -1), (6, -2), (2, 0)]
Br: Stage1: Computing F^ in direct base
Br: Stage2: Compressing F^+ according to its block diagonal form
Br: Stage3: Renumbers states -- creates superstates for ctqmc
Br: Stage4: F^dagger matrices between superstates evaluated
Have HB2
Number of operators needed 1  0
off_diagonal=0
Reading data with 1848 entries

       ============================
          DMFT_loop [13] 
       ============================

Reading SelfE_w ... imp[1]

  7.461551 seconds (36.73 k allocations: 9.828 MiB)
===== Calculating local green function ... =====
  3.111289 seconds (133.93 k allocations: 29.253 MiB)

===== Calculating weiss field from G_loc_iWn ... =====
  0.101814 seconds (114.35 k allocations: 5.994 MiB)

===== Calculating hybrid function from weiss field ... =====
  0.003354 seconds (49.68 k allocations: 4.366 MiB)

Writing hyb.json ...
Writing hyb.json ...



 CTQMC run ... imp[1]
 Preparing the input file of EDFMTF : actqmc.cix ...
Br: kindx= [(7, 3), (9, 1), (5, -5), (7, -1), (6, 2), (3, -3), (5, 1), (1, -1), (4, -2), (4, 0), (3, 3), (6, -4), (4, 4), (8, -2), (7, -3), (2, 2), (10, 0), (5, 3), (1, 1), (5, -1), (6, 4), (0, 0), (8, 2), (7, 1), (2, -2), (6, 0), (9, -1), (8, 0), (4, 2), (5, -3), (5, 5), (4, -4), (3, 1), (3, -1), (6, -2), (2, 0)]
Br: Stage1: Computing F^ in direct base
Br: Stage2: Compressing F^+ according to its block diagonal form
Br: Stage3: Renumbers states -- creates superstates for ctqmc
Br: Stage4: F^dagger matrices between superstates evaluated
Have HB2
Number of operators needed 1  0
off_diagonal=0
Reading data with 1848 entries

       ============================
          DMFT_loop [14] 
       ============================

Reading SelfE_w ... imp[1]

  7.460918 seconds (36.70 k allocations: 9.830 MiB)
===== Calculating local green function ... =====
  3.107697 seconds (133.97 k allocations: 29.252 MiB)

===== Calculating weiss field from G_loc_iWn ... =====
  0.101866 seconds (114.35 k allocations: 5.997 MiB)

===== Calculating hybrid function from weiss field ... =====
  0.003371 seconds (49.68 k allocations: 4.366 MiB)

Writing hyb.json ...
Writing hyb.json ...



 CTQMC run ... imp[1]
 Preparing the input file of EDFMTF : actqmc.cix ...
Br: kindx= [(7, 3), (9, 1), (5, -5), (7, -1), (6, 2), (3, -3), (5, 1), (1, -1), (4, -2), (4, 0), (3, 3), (6, -4), (4, 4), (8, -2), (7, -3), (2, 2), (10, 0), (5, 3), (1, 1), (5, -1), (6, 4), (0, 0), (8, 2), (7, 1), (2, -2), (6, 0), (9, -1), (8, 0), (4, 2), (5, -3), (5, 5), (4, -4), (3, 1), (3, -1), (6, -2), (2, 0)]
Br: Stage1: Computing F^ in direct base
Br: Stage2: Compressing F^+ according to its block diagonal form
Br: Stage3: Renumbers states -- creates superstates for ctqmc
Br: Stage4: F^dagger matrices between superstates evaluated
Have HB2
Number of operators needed 1  0
off_diagonal=0
Reading data with 1848 entries

       ============================
          DMFT_loop [15] 
       ============================

Reading SelfE_w ... imp[1]

  7.449851 seconds (36.73 k allocations: 9.828 MiB)
===== Calculating local green function ... =====
  3.129754 seconds (133.98 k allocations: 29.255 MiB)

===== Calculating weiss field from G_loc_iWn ... =====
  0.101288 seconds (114.36 k allocations: 5.995 MiB)

===== Calculating hybrid function from weiss field ... =====
  0.003369 seconds (49.68 k allocations: 4.366 MiB)

Writing hyb.json ...
Writing hyb.json ...



 CTQMC run ... imp[1]
 Preparing the input file of EDFMTF : actqmc.cix ...
Br: kindx= [(7, 3), (9, 1), (5, -5), (7, -1), (6, 2), (3, -3), (5, 1), (1, -1), (4, -2), (4, 0), (3, 3), (6, -4), (4, 4), (8, -2), (7, -3), (2, 2), (10, 0), (5, 3), (1, 1), (5, -1), (6, 4), (0, 0), (8, 2), (7, 1), (2, -2), (6, 0), (9, -1), (8, 0), (4, 2), (5, -3), (5, 5), (4, -4), (3, 1), (3, -1), (6, -2), (2, 0)]
Br: Stage1: Computing F^ in direct base
Br: Stage2: Compressing F^+ according to its block diagonal form
Br: Stage3: Renumbers states -- creates superstates for ctqmc
Br: Stage4: F^dagger matrices between superstates evaluated
Have HB2
Number of operators needed 1  0
off_diagonal=0
Reading data with 1848 entries

       ============================
          DMFT_loop [16] 
       ============================

Reading SelfE_w ... imp[1]

  7.472459 seconds (36.71 k allocations: 9.830 MiB)
===== Calculating local green function ... =====
  3.108798 seconds (134.01 k allocations: 29.253 MiB)

===== Calculating weiss field from G_loc_iWn ... =====
  0.101674 seconds (114.35 k allocations: 5.992 MiB)

===== Calculating hybrid function from weiss field ... =====
  0.003359 seconds (49.68 k allocations: 4.366 MiB)

Writing hyb.json ...
Writing hyb.json ...



 CTQMC run ... imp[1]
 Preparing the input file of EDFMTF : actqmc.cix ...
Br: kindx= [(7, 3), (9, 1), (5, -5), (7, -1), (6, 2), (3, -3), (5, 1), (1, -1), (4, -2), (4, 0), (3, 3), (6, -4), (4, 4), (8, -2), (7, -3), (2, 2), (10, 0), (5, 3), (1, 1), (5, -1), (6, 4), (0, 0), (8, 2), (7, 1), (2, -2), (6, 0), (9, -1), (8, 0), (4, 2), (5, -3), (5, 5), (4, -4), (3, 1), (3, -1), (6, -2), (2, 0)]
Br: Stage1: Computing F^ in direct base
Br: Stage2: Compressing F^+ according to its block diagonal form
Br: Stage3: Renumbers states -- creates superstates for ctqmc
Br: Stage4: F^dagger matrices between superstates evaluated
Have HB2
Number of operators needed 1  0
off_diagonal=0
Reading data with 1848 entries

       ============================
          DMFT_loop [17] 
       ============================

Reading SelfE_w ... imp[1]

  7.443076 seconds (36.71 k allocations: 9.827 MiB)
===== Calculating local green function ... =====
  3.125934 seconds (133.91 k allocations: 29.250 MiB)

===== Calculating weiss field from G_loc_iWn ... =====
  0.103895 seconds (114.35 k allocations: 5.993 MiB)

===== Calculating hybrid function from weiss field ... =====
  0.003396 seconds (49.68 k allocations: 4.366 MiB)

Writing hyb.json ...
Writing hyb.json ...



 CTQMC run ... imp[1]
 Preparing the input file of EDFMTF : actqmc.cix ...
Br: kindx= [(7, 3), (9, 1), (5, -5), (7, -1), (6, 2), (3, -3), (5, 1), (1, -1), (4, -2), (4, 0), (3, 3), (6, -4), (4, 4), (8, -2), (7, -3), (2, 2), (10, 0), (5, 3), (1, 1), (5, -1), (6, 4), (0, 0), (8, 2), (7, 1), (2, -2), (6, 0), (9, -1), (8, 0), (4, 2), (5, -3), (5, 5), (4, -4), (3, 1), (3, -1), (6, -2), (2, 0)]
Br: Stage1: Computing F^ in direct base
Br: Stage2: Compressing F^+ according to its block diagonal form
Br: Stage3: Renumbers states -- creates superstates for ctqmc
Br: Stage4: F^dagger matrices between superstates evaluated
Have HB2
Number of operators needed 1  0
off_diagonal=0
Reading data with 1848 entries

       ============================
          DMFT_loop [18] 
       ============================

Reading SelfE_w ... imp[1]

  7.476339 seconds (36.72 k allocations: 9.831 MiB)
===== Calculating local green function ... =====
  3.125600 seconds (133.91 k allocations: 29.250 MiB)

===== Calculating weiss field from G_loc_iWn ... =====
  0.102185 seconds (114.35 k allocations: 5.992 MiB)

===== Calculating hybrid function from weiss field ... =====
  0.003487 seconds (49.68 k allocations: 4.366 MiB)

Writing hyb.json ...
Writing hyb.json ...



 CTQMC run ... imp[1]
 Preparing the input file of EDFMTF : actqmc.cix ...
Br: kindx= [(7, 3), (9, 1), (5, -5), (7, -1), (6, 2), (3, -3), (5, 1), (1, -1), (4, -2), (4, 0), (3, 3), (6, -4), (4, 4), (8, -2), (7, -3), (2, 2), (10, 0), (5, 3), (1, 1), (5, -1), (6, 4), (0, 0), (8, 2), (7, 1), (2, -2), (6, 0), (9, -1), (8, 0), (4, 2), (5, -3), (5, 5), (4, -4), (3, 1), (3, -1), (6, -2), (2, 0)]
Br: Stage1: Computing F^ in direct base
Br: Stage2: Compressing F^+ according to its block diagonal form
Br: Stage3: Renumbers states -- creates superstates for ctqmc
Br: Stage4: F^dagger matrices between superstates evaluated
Have HB2
Number of operators needed 1  0
off_diagonal=0
Reading data with 1848 entries

       ============================
          DMFT_loop [19] 
       ============================

Reading SelfE_w ... imp[1]

  7.488635 seconds (36.71 k allocations: 9.828 MiB)
===== Calculating local green function ... =====
  3.131452 seconds (133.96 k allocations: 29.251 MiB)

===== Calculating weiss field from G_loc_iWn ... =====
  0.103287 seconds (114.37 k allocations: 5.997 MiB)

===== Calculating hybrid function from weiss field ... =====
  0.003353 seconds (49.68 k allocations: 4.366 MiB)

Writing hyb.json ...
Writing hyb.json ...



 CTQMC run ... imp[1]
 Preparing the input file of EDFMTF : actqmc.cix ...
Br: kindx= [(7, 3), (9, 1), (5, -5), (7, -1), (6, 2), (3, -3), (5, 1), (1, -1), (4, -2), (4, 0), (3, 3), (6, -4), (4, 4), (8, -2), (7, -3), (2, 2), (10, 0), (5, 3), (1, 1), (5, -1), (6, 4), (0, 0), (8, 2), (7, 1), (2, -2), (6, 0), (9, -1), (8, 0), (4, 2), (5, -3), (5, 5), (4, -4), (3, 1), (3, -1), (6, -2), (2, 0)]
Br: Stage1: Computing F^ in direct base
Br: Stage2: Compressing F^+ according to its block diagonal form
Br: Stage3: Renumbers states -- creates superstates for ctqmc
Br: Stage4: F^dagger matrices between superstates evaluated
Have HB2
Number of operators needed 1  0
off_diagonal=0
Reading data with 1848 entries

       ============================
          DMFT_loop [20] 
       ============================

Reading SelfE_w ... imp[1]

  7.471372 seconds (36.72 k allocations: 9.827 MiB)
===== Calculating local green function ... =====
  3.115608 seconds (133.93 k allocations: 29.253 MiB)

===== Calculating weiss field from G_loc_iWn ... =====
  0.100506 seconds (114.35 k allocations: 5.993 MiB)

===== Calculating hybrid function from weiss field ... =====
  0.003350 seconds (49.68 k allocations: 4.366 MiB)

Writing hyb.json ...
Writing hyb.json ...



 CTQMC run ... imp[1]
 Preparing the input file of EDFMTF : actqmc.cix ...
Br: kindx= [(7, 3), (9, 1), (5, -5), (7, -1), (6, 2), (3, -3), (5, 1), (1, -1), (4, -2), (4, 0), (3, 3), (6, -4), (4, 4), (8, -2), (7, -3), (2, 2), (10, 0), (5, 3), (1, 1), (5, -1), (6, 4), (0, 0), (8, 2), (7, 1), (2, -2), (6, 0), (9, -1), (8, 0), (4, 2), (5, -3), (5, 5), (4, -4), (3, 1), (3, -1), (6, -2), (2, 0)]
Br: Stage1: Computing F^ in direct base
Br: Stage2: Compressing F^+ according to its block diagonal form
Br: Stage3: Renumbers states -- creates superstates for ctqmc
Br: Stage4: F^dagger matrices between superstates evaluated
Have HB2
Number of operators needed 1  0
off_diagonal=0
Reading data with 1848 entries

       ============================
          DMFT_loop [21] 
       ============================

Reading SelfE_w ... imp[1]

  7.460129 seconds (36.72 k allocations: 9.831 MiB)
===== Calculating local green function ... =====
  3.128835 seconds (133.93 k allocations: 29.250 MiB)

===== Calculating weiss field from G_loc_iWn ... =====
  0.102082 seconds (114.35 k allocations: 5.994 MiB)

===== Calculating hybrid function from weiss field ... =====
  0.003356 seconds (49.68 k allocations: 4.366 MiB)

Writing hyb.json ...
Writing hyb.json ...



 CTQMC run ... imp[1]
 Preparing the input file of EDFMTF : actqmc.cix ...
Br: kindx= [(7, 3), (9, 1), (5, -5), (7, -1), (6, 2), (3, -3), (5, 1), (1, -1), (4, -2), (4, 0), (3, 3), (6, -4), (4, 4), (8, -2), (7, -3), (2, 2), (10, 0), (5, 3), (1, 1), (5, -1), (6, 4), (0, 0), (8, 2), (7, 1), (2, -2), (6, 0), (9, -1), (8, 0), (4, 2), (5, -3), (5, 5), (4, -4), (3, 1), (3, -1), (6, -2), (2, 0)]
Br: Stage1: Computing F^ in direct base
Br: Stage2: Compressing F^+ according to its block diagonal form
Br: Stage3: Renumbers states -- creates superstates for ctqmc
Br: Stage4: F^dagger matrices between superstates evaluated
Have HB2
Number of operators needed 1  0
off_diagonal=0
Reading data with 1848 entries

       ============================
          DMFT_loop [22] 
       ============================

Reading SelfE_w ... imp[1]

  7.455716 seconds (36.71 k allocations: 9.827 MiB)
===== Calculating local green function ... =====
  3.138929 seconds (134.02 k allocations: 29.253 MiB)

===== Calculating weiss field from G_loc_iWn ... =====
  0.098518 seconds (114.35 k allocations: 5.992 MiB)

===== Calculating hybrid function from weiss field ... =====
  0.003374 seconds (49.68 k allocations: 4.366 MiB)

Writing hyb.json ...
Writing hyb.json ...



 CTQMC run ... imp[1]
 Preparing the input file of EDFMTF : actqmc.cix ...
Br: kindx= [(7, 3), (9, 1), (5, -5), (7, -1), (6, 2), (3, -3), (5, 1), (1, -1), (4, -2), (4, 0), (3, 3), (6, -4), (4, 4), (8, -2), (7, -3), (2, 2), (10, 0), (5, 3), (1, 1), (5, -1), (6, 4), (0, 0), (8, 2), (7, 1), (2, -2), (6, 0), (9, -1), (8, 0), (4, 2), (5, -3), (5, 5), (4, -4), (3, 1), (3, -1), (6, -2), (2, 0)]
Br: Stage1: Computing F^ in direct base
Br: Stage2: Compressing F^+ according to its block diagonal form
Br: Stage3: Renumbers states -- creates superstates for ctqmc
Br: Stage4: F^dagger matrices between superstates evaluated
Have HB2
Number of operators needed 1  0
off_diagonal=0
Reading data with 1848 entries

       ============================
          DMFT_loop [23] 
       ============================

Reading SelfE_w ... imp[1]

  7.453790 seconds (36.70 k allocations: 9.830 MiB)
===== Calculating local green function ... =====
  3.120188 seconds (133.94 k allocations: 29.251 MiB)

===== Calculating weiss field from G_loc_iWn ... =====
  0.102810 seconds (114.35 k allocations: 5.995 MiB)

===== Calculating hybrid function from weiss field ... =====
  0.004234 seconds (49.68 k allocations: 4.366 MiB)

Writing hyb.json ...
Writing hyb.json ...



 CTQMC run ... imp[1]
 Preparing the input file of EDFMTF : actqmc.cix ...
Br: kindx= [(7, 3), (9, 1), (5, -5), (7, -1), (6, 2), (3, -3), (5, 1), (1, -1), (4, -2), (4, 0), (3, 3), (6, -4), (4, 4), (8, -2), (7, -3), (2, 2), (10, 0), (5, 3), (1, 1), (5, -1), (6, 4), (0, 0), (8, 2), (7, 1), (2, -2), (6, 0), (9, -1), (8, 0), (4, 2), (5, -3), (5, 5), (4, -4), (3, 1), (3, -1), (6, -2), (2, 0)]
Br: Stage1: Computing F^ in direct base
Br: Stage2: Compressing F^+ according to its block diagonal form
Br: Stage3: Renumbers states -- creates superstates for ctqmc
Br: Stage4: F^dagger matrices between superstates evaluated
Have HB2
Number of operators needed 1  0
off_diagonal=0
Reading data with 1848 entries

       ============================
          DMFT_loop [24] 
       ============================

Reading SelfE_w ... imp[1]

  7.459466 seconds (36.72 k allocations: 9.828 MiB)
===== Calculating local green function ... =====
  3.139765 seconds (133.97 k allocations: 29.252 MiB)

===== Calculating weiss field from G_loc_iWn ... =====
  0.098298 seconds (114.35 k allocations: 5.993 MiB)

===== Calculating hybrid function from weiss field ... =====
  0.003357 seconds (49.68 k allocations: 4.366 MiB)

Writing hyb.json ...
Writing hyb.json ...



 CTQMC run ... imp[1]
 Preparing the input file of EDFMTF : actqmc.cix ...
Br: kindx= [(7, 3), (9, 1), (5, -5), (7, -1), (6, 2), (3, -3), (5, 1), (1, -1), (4, -2), (4, 0), (3, 3), (6, -4), (4, 4), (8, -2), (7, -3), (2, 2), (10, 0), (5, 3), (1, 1), (5, -1), (6, 4), (0, 0), (8, 2), (7, 1), (2, -2), (6, 0), (9, -1), (8, 0), (4, 2), (5, -3), (5, 5), (4, -4), (3, 1), (3, -1), (6, -2), (2, 0)]
Br: Stage1: Computing F^ in direct base
Br: Stage2: Compressing F^+ according to its block diagonal form
Br: Stage3: Renumbers states -- creates superstates for ctqmc
Br: Stage4: F^dagger matrices between superstates evaluated
Have HB2
Number of operators needed 1  0
off_diagonal=0
Reading data with 1848 entries

       ============================
          DMFT_loop [25] 
       ============================

Reading SelfE_w ... imp[1]

  7.491140 seconds (36.73 k allocations: 9.831 MiB)
===== Calculating local green function ... =====
  3.123931 seconds (133.96 k allocations: 29.251 MiB)

===== Calculating weiss field from G_loc_iWn ... =====
  0.095874 seconds (114.35 k allocations: 5.993 MiB)

===== Calculating hybrid function from weiss field ... =====
  0.003431 seconds (49.68 k allocations: 4.366 MiB)

Writing hyb.json ...
Writing hyb.json ...



 CTQMC run ... imp[1]
 Preparing the input file of EDFMTF : actqmc.cix ...
Br: kindx= [(7, 3), (9, 1), (5, -5), (7, -1), (6, 2), (3, -3), (5, 1), (1, -1), (4, -2), (4, 0), (3, 3), (6, -4), (4, 4), (8, -2), (7, -3), (2, 2), (10, 0), (5, 3), (1, 1), (5, -1), (6, 4), (0, 0), (8, 2), (7, 1), (2, -2), (6, 0), (9, -1), (8, 0), (4, 2), (5, -3), (5, 5), (4, -4), (3, 1), (3, -1), (6, -2), (2, 0)]
Br: Stage1: Computing F^ in direct base
Br: Stage2: Compressing F^+ according to its block diagonal form
Br: Stage3: Renumbers states -- creates superstates for ctqmc
Br: Stage4: F^dagger matrices between superstates evaluated
Have HB2
Number of operators needed 1  0
off_diagonal=0
Reading data with 1848 entries

       ============================
          DMFT_loop [26] 
       ============================

Reading SelfE_w ... imp[1]

  7.509341 seconds (36.72 k allocations: 9.829 MiB)
===== Calculating local green function ... =====
  3.121262 seconds (133.93 k allocations: 29.250 MiB)

===== Calculating weiss field from G_loc_iWn ... =====
  0.099774 seconds (114.36 k allocations: 5.995 MiB)

===== Calculating hybrid function from weiss field ... =====
  0.003358 seconds (49.68 k allocations: 4.366 MiB)

Writing hyb.json ...
Writing hyb.json ...



 CTQMC run ... imp[1]
 Preparing the input file of EDFMTF : actqmc.cix ...
Br: kindx= [(7, 3), (9, 1), (5, -5), (7, -1), (6, 2), (3, -3), (5, 1), (1, -1), (4, -2), (4, 0), (3, 3), (6, -4), (4, 4), (8, -2), (7, -3), (2, 2), (10, 0), (5, 3), (1, 1), (5, -1), (6, 4), (0, 0), (8, 2), (7, 1), (2, -2), (6, 0), (9, -1), (8, 0), (4, 2), (5, -3), (5, 5), (4, -4), (3, 1), (3, -1), (6, -2), (2, 0)]
Br: Stage1: Computing F^ in direct base
Br: Stage2: Compressing F^+ according to its block diagonal form
Br: Stage3: Renumbers states -- creates superstates for ctqmc
Br: Stage4: F^dagger matrices between superstates evaluated
Have HB2
Number of operators needed 1  0
off_diagonal=0
Reading data with 1848 entries

       ============================
          DMFT_loop [27] 
       ============================

Reading SelfE_w ... imp[1]

  7.469157 seconds (36.71 k allocations: 9.827 MiB)
===== Calculating local green function ... =====
  3.116977 seconds (133.94 k allocations: 29.254 MiB)

===== Calculating weiss field from G_loc_iWn ... =====
  0.104328 seconds (114.35 k allocations: 5.992 MiB)

===== Calculating hybrid function from weiss field ... =====
  0.003444 seconds (49.68 k allocations: 4.366 MiB)

Writing hyb.json ...
Writing hyb.json ...



 CTQMC run ... imp[1]
 Preparing the input file of EDFMTF : actqmc.cix ...
Br: kindx= [(7, 3), (9, 1), (5, -5), (7, -1), (6, 2), (3, -3), (5, 1), (1, -1), (4, -2), (4, 0), (3, 3), (6, -4), (4, 4), (8, -2), (7, -3), (2, 2), (10, 0), (5, 3), (1, 1), (5, -1), (6, 4), (0, 0), (8, 2), (7, 1), (2, -2), (6, 0), (9, -1), (8, 0), (4, 2), (5, -3), (5, 5), (4, -4), (3, 1), (3, -1), (6, -2), (2, 0)]
Br: Stage1: Computing F^ in direct base
Br: Stage2: Compressing F^+ according to its block diagonal form
Br: Stage3: Renumbers states -- creates superstates for ctqmc
Br: Stage4: F^dagger matrices between superstates evaluated
Have HB2
Number of operators needed 1  0
off_diagonal=0
Reading data with 1848 entries

       ============================
          DMFT_loop [28] 
       ============================

Reading SelfE_w ... imp[1]

  7.516056 seconds (36.71 k allocations: 9.831 MiB)
===== Calculating local green function ... =====
  3.115336 seconds (133.97 k allocations: 29.251 MiB)

===== Calculating weiss field from G_loc_iWn ... =====
  0.103646 seconds (114.35 k allocations: 5.997 MiB)

===== Calculating hybrid function from weiss field ... =====
  0.003453 seconds (49.68 k allocations: 4.366 MiB)

Writing hyb.json ...
Writing hyb.json ...



 CTQMC run ... imp[1]
 Preparing the input file of EDFMTF : actqmc.cix ...
Br: kindx= [(7, 3), (9, 1), (5, -5), (7, -1), (6, 2), (3, -3), (5, 1), (1, -1), (4, -2), (4, 0), (3, 3), (6, -4), (4, 4), (8, -2), (7, -3), (2, 2), (10, 0), (5, 3), (1, 1), (5, -1), (6, 4), (0, 0), (8, 2), (7, 1), (2, -2), (6, 0), (9, -1), (8, 0), (4, 2), (5, -3), (5, 5), (4, -4), (3, 1), (3, -1), (6, -2), (2, 0)]
Br: Stage1: Computing F^ in direct base
Br: Stage2: Compressing F^+ according to its block diagonal form
Br: Stage3: Renumbers states -- creates superstates for ctqmc
Br: Stage4: F^dagger matrices between superstates evaluated
Have HB2
Number of operators needed 1  0
off_diagonal=0
Reading data with 1848 entries

       ============================
          DMFT_loop [29] 
       ============================

Reading SelfE_w ... imp[1]

  7.452208 seconds (36.72 k allocations: 9.828 MiB)
===== Calculating local green function ... =====
  3.119979 seconds (133.89 k allocations: 29.249 MiB)

===== Calculating weiss field from G_loc_iWn ... =====
  0.101226 seconds (114.35 k allocations: 5.993 MiB)

===== Calculating hybrid function from weiss field ... =====
  0.003344 seconds (49.68 k allocations: 4.366 MiB)

Writing hyb.json ...
Writing hyb.json ...



 CTQMC run ... imp[1]
 Preparing the input file of EDFMTF : actqmc.cix ...
Br: kindx= [(7, 3), (9, 1), (5, -5), (7, -1), (6, 2), (3, -3), (5, 1), (1, -1), (4, -2), (4, 0), (3, 3), (6, -4), (4, 4), (8, -2), (7, -3), (2, 2), (10, 0), (5, 3), (1, 1), (5, -1), (6, 4), (0, 0), (8, 2), (7, 1), (2, -2), (6, 0), (9, -1), (8, 0), (4, 2), (5, -3), (5, 5), (4, -4), (3, 1), (3, -1), (6, -2), (2, 0)]
Br: Stage1: Computing F^ in direct base
Br: Stage2: Compressing F^+ according to its block diagonal form
Br: Stage3: Renumbers states -- creates superstates for ctqmc
Br: Stage4: F^dagger matrices between superstates evaluated
Have HB2
Number of operators needed 1  0
off_diagonal=0
Reading data with 1848 entries

       ============================
          DMFT_loop [30] 
       ============================

Reading SelfE_w ... imp[1]

  7.470169 seconds (36.72 k allocations: 9.831 MiB)
===== Calculating local green function ... =====
  3.135368 seconds (133.99 k allocations: 29.252 MiB)

===== Calculating weiss field from G_loc_iWn ... =====
  0.103971 seconds (114.35 k allocations: 5.993 MiB)

===== Calculating hybrid function from weiss field ... =====
  0.003524 seconds (49.68 k allocations: 4.366 MiB)

Writing hyb.json ...
Writing hyb.json ...



 CTQMC run ... imp[1]
 Preparing the input file of EDFMTF : actqmc.cix ...
Br: kindx= [(7, 3), (9, 1), (5, -5), (7, -1), (6, 2), (3, -3), (5, 1), (1, -1), (4, -2), (4, 0), (3, 3), (6, -4), (4, 4), (8, -2), (7, -3), (2, 2), (10, 0), (5, 3), (1, 1), (5, -1), (6, 4), (0, 0), (8, 2), (7, 1), (2, -2), (6, 0), (9, -1), (8, 0), (4, 2), (5, -3), (5, 5), (4, -4), (3, 1), (3, -1), (6, -2), (2, 0)]
Br: Stage1: Computing F^ in direct base
Br: Stage2: Compressing F^+ according to its block diagonal form
Br: Stage3: Renumbers states -- creates superstates for ctqmc
Br: Stage4: F^dagger matrices between superstates evaluated
Have HB2
Number of operators needed 1  0
off_diagonal=0
Reading data with 1848 entries

       ============================
          DMFT_loop [31] 
       ============================

Reading SelfE_w ... imp[1]

  7.487454 seconds (36.70 k allocations: 9.827 MiB)
===== Calculating local green function ... =====
  3.133147 seconds (133.90 k allocations: 29.249 MiB)

===== Calculating weiss field from G_loc_iWn ... =====
  0.099127 seconds (114.34 k allocations: 5.993 MiB)

===== Calculating hybrid function from weiss field ... =====
  0.004060 seconds (49.68 k allocations: 4.366 MiB)

Writing hyb.json ...
Writing hyb.json ...



 CTQMC run ... imp[1]
 Preparing the input file of EDFMTF : actqmc.cix ...
Br: kindx= [(7, 3), (9, 1), (5, -5), (7, -1), (6, 2), (3, -3), (5, 1), (1, -1), (4, -2), (4, 0), (3, 3), (6, -4), (4, 4), (8, -2), (7, -3), (2, 2), (10, 0), (5, 3), (1, 1), (5, -1), (6, 4), (0, 0), (8, 2), (7, 1), (2, -2), (6, 0), (9, -1), (8, 0), (4, 2), (5, -3), (5, 5), (4, -4), (3, 1), (3, -1), (6, -2), (2, 0)]
Br: Stage1: Computing F^ in direct base
Br: Stage2: Compressing F^+ according to its block diagonal form
Br: Stage3: Renumbers states -- creates superstates for ctqmc
Br: Stage4: F^dagger matrices between superstates evaluated
Have HB2
Number of operators needed 1  0
off_diagonal=0
Reading data with 1848 entries

       ============================
          DMFT_loop [32] 
       ============================

Reading SelfE_w ... imp[1]

  7.525772 seconds (36.71 k allocations: 9.830 MiB)
===== Calculating local green function ... =====
  3.115747 seconds (133.93 k allocations: 29.250 MiB)

===== Calculating weiss field from G_loc_iWn ... =====
  0.103811 seconds (114.36 k allocations: 5.995 MiB)

===== Calculating hybrid function from weiss field ... =====
  0.003572 seconds (49.68 k allocations: 4.366 MiB)

Writing hyb.json ...
Writing hyb.json ...



 CTQMC run ... imp[1]
 Preparing the input file of EDFMTF : actqmc.cix ...
Br: kindx= [(7, 3), (9, 1), (5, -5), (7, -1), (6, 2), (3, -3), (5, 1), (1, -1), (4, -2), (4, 0), (3, 3), (6, -4), (4, 4), (8, -2), (7, -3), (2, 2), (10, 0), (5, 3), (1, 1), (5, -1), (6, 4), (0, 0), (8, 2), (7, 1), (2, -2), (6, 0), (9, -1), (8, 0), (4, 2), (5, -3), (5, 5), (4, -4), (3, 1), (3, -1), (6, -2), (2, 0)]
Br: Stage1: Computing F^ in direct base
Br: Stage2: Compressing F^+ according to its block diagonal form
Br: Stage3: Renumbers states -- creates superstates for ctqmc
Br: Stage4: F^dagger matrices between superstates evaluated
Have HB2
Number of operators needed 1  0
off_diagonal=0
Reading data with 1848 entries

       ============================
          DMFT_loop [33] 
       ============================

Reading SelfE_w ... imp[1]

  7.519837 seconds (36.71 k allocations: 9.828 MiB)
===== Calculating local green function ... =====
  3.130884 seconds (133.92 k allocations: 29.250 MiB)

===== Calculating weiss field from G_loc_iWn ... =====
  0.099457 seconds (114.36 k allocations: 5.998 MiB)

===== Calculating hybrid function from weiss field ... =====
  0.003366 seconds (49.68 k allocations: 4.366 MiB)

Writing hyb.json ...
Writing hyb.json ...



 CTQMC run ... imp[1]
 Preparing the input file of EDFMTF : actqmc.cix ...
Br: kindx= [(7, 3), (9, 1), (5, -5), (7, -1), (6, 2), (3, -3), (5, 1), (1, -1), (4, -2), (4, 0), (3, 3), (6, -4), (4, 4), (8, -2), (7, -3), (2, 2), (10, 0), (5, 3), (1, 1), (5, -1), (6, 4), (0, 0), (8, 2), (7, 1), (2, -2), (6, 0), (9, -1), (8, 0), (4, 2), (5, -3), (5, 5), (4, -4), (3, 1), (3, -1), (6, -2), (2, 0)]
Br: Stage1: Computing F^ in direct base
Br: Stage2: Compressing F^+ according to its block diagonal form
Br: Stage3: Renumbers states -- creates superstates for ctqmc
Br: Stage4: F^dagger matrices between superstates evaluated
Have HB2
Number of operators needed 1  0
off_diagonal=0
Reading data with 1848 entries

       ============================
          DMFT_loop [34] 
       ============================

Reading SelfE_w ... imp[1]

  7.484573 seconds (36.70 k allocations: 9.827 MiB)
===== Calculating local green function ... =====
  3.115054 seconds (133.96 k allocations: 29.254 MiB)

===== Calculating weiss field from G_loc_iWn ... =====
  0.102335 seconds (114.35 k allocations: 5.993 MiB)

===== Calculating hybrid function from weiss field ... =====
  0.003443 seconds (49.68 k allocations: 4.366 MiB)

Writing hyb.json ...
Writing hyb.json ...



 CTQMC run ... imp[1]
 Preparing the input file of EDFMTF : actqmc.cix ...
Br: kindx= [(7, 3), (9, 1), (5, -5), (7, -1), (6, 2), (3, -3), (5, 1), (1, -1), (4, -2), (4, 0), (3, 3), (6, -4), (4, 4), (8, -2), (7, -3), (2, 2), (10, 0), (5, 3), (1, 1), (5, -1), (6, 4), (0, 0), (8, 2), (7, 1), (2, -2), (6, 0), (9, -1), (8, 0), (4, 2), (5, -3), (5, 5), (4, -4), (3, 1), (3, -1), (6, -2), (2, 0)]
Br: Stage1: Computing F^ in direct base
Br: Stage2: Compressing F^+ according to its block diagonal form
Br: Stage3: Renumbers states -- creates superstates for ctqmc
Br: Stage4: F^dagger matrices between superstates evaluated
Have HB2
Number of operators needed 1  0
off_diagonal=0
Reading data with 1848 entries

       ============================
          DMFT_loop [35] 
       ============================

Reading SelfE_w ... imp[1]

  7.495621 seconds (36.72 k allocations: 9.831 MiB)
===== Calculating local green function ... =====
  3.124796 seconds (133.92 k allocations: 29.250 MiB)

===== Calculating weiss field from G_loc_iWn ... =====
  0.100529 seconds (114.35 k allocations: 5.996 MiB)

===== Calculating hybrid function from weiss field ... =====
  0.003415 seconds (49.68 k allocations: 4.366 MiB)

Writing hyb.json ...
Writing hyb.json ...



 CTQMC run ... imp[1]
 Preparing the input file of EDFMTF : actqmc.cix ...
Br: kindx= [(7, 3), (9, 1), (5, -5), (7, -1), (6, 2), (3, -3), (5, 1), (1, -1), (4, -2), (4, 0), (3, 3), (6, -4), (4, 4), (8, -2), (7, -3), (2, 2), (10, 0), (5, 3), (1, 1), (5, -1), (6, 4), (0, 0), (8, 2), (7, 1), (2, -2), (6, 0), (9, -1), (8, 0), (4, 2), (5, -3), (5, 5), (4, -4), (3, 1), (3, -1), (6, -2), (2, 0)]
Br: Stage1: Computing F^ in direct base
Br: Stage2: Compressing F^+ according to its block diagonal form
Br: Stage3: Renumbers states -- creates superstates for ctqmc
Br: Stage4: F^dagger matrices between superstates evaluated
Have HB2
Number of operators needed 1  0
off_diagonal=0
Reading data with 1848 entries

       ============================
          DMFT_loop [36] 
       ============================

Reading SelfE_w ... imp[1]

  7.480264 seconds (36.73 k allocations: 9.837 MiB)
===== Calculating local green function ... =====
  3.127290 seconds (133.93 k allocations: 29.245 MiB)

===== Calculating weiss field from G_loc_iWn ... =====
  0.099747 seconds (114.35 k allocations: 5.994 MiB)

===== Calculating hybrid function from weiss field ... =====
  0.003354 seconds (49.68 k allocations: 4.366 MiB)

Writing hyb.json ...
Writing hyb.json ...



 CTQMC run ... imp[1]
 Preparing the input file of EDFMTF : actqmc.cix ...
Br: kindx= [(7, 3), (9, 1), (5, -5), (7, -1), (6, 2), (3, -3), (5, 1), (1, -1), (4, -2), (4, 0), (3, 3), (6, -4), (4, 4), (8, -2), (7, -3), (2, 2), (10, 0), (5, 3), (1, 1), (5, -1), (6, 4), (0, 0), (8, 2), (7, 1), (2, -2), (6, 0), (9, -1), (8, 0), (4, 2), (5, -3), (5, 5), (4, -4), (3, 1), (3, -1), (6, -2), (2, 0)]
Br: Stage1: Computing F^ in direct base
Br: Stage2: Compressing F^+ according to its block diagonal form
Br: Stage3: Renumbers states -- creates superstates for ctqmc
Br: Stage4: F^dagger matrices between superstates evaluated
Have HB2
Number of operators needed 1  0
off_diagonal=0
Reading data with 1848 entries

       ============================
          DMFT_loop [37] 
       ============================

Reading SelfE_w ... imp[1]

  7.504510 seconds (36.71 k allocations: 9.830 MiB)
===== Calculating local green function ... =====
  3.150159 seconds (133.97 k allocations: 29.251 MiB)

===== Calculating weiss field from G_loc_iWn ... =====
  0.099198 seconds (114.35 k allocations: 5.992 MiB)

===== Calculating hybrid function from weiss field ... =====
  0.004049 seconds (49.68 k allocations: 4.366 MiB)

Writing hyb.json ...
Writing hyb.json ...



 CTQMC run ... imp[1]
 Preparing the input file of EDFMTF : actqmc.cix ...
Br: kindx= [(7, 3), (9, 1), (5, -5), (7, -1), (6, 2), (3, -3), (5, 1), (1, -1), (4, -2), (4, 0), (3, 3), (6, -4), (4, 4), (8, -2), (7, -3), (2, 2), (10, 0), (5, 3), (1, 1), (5, -1), (6, 4), (0, 0), (8, 2), (7, 1), (2, -2), (6, 0), (9, -1), (8, 0), (4, 2), (5, -3), (5, 5), (4, -4), (3, 1), (3, -1), (6, -2), (2, 0)]
Br: Stage1: Computing F^ in direct base
Br: Stage2: Compressing F^+ according to its block diagonal form
Br: Stage3: Renumbers states -- creates superstates for ctqmc
Br: Stage4: F^dagger matrices between superstates evaluated
Have HB2
Number of operators needed 1  0
off_diagonal=0
Reading data with 1848 entries

       ============================
          DMFT_loop [38] 
       ============================

Reading SelfE_w ... imp[1]

  7.472024 seconds (36.71 k allocations: 9.827 MiB)
===== Calculating local green function ... =====
  3.144394 seconds (133.95 k allocations: 29.251 MiB)

===== Calculating weiss field from G_loc_iWn ... =====
  0.102599 seconds (114.35 k allocations: 5.994 MiB)

===== Calculating hybrid function from weiss field ... =====
  0.004041 seconds (49.68 k allocations: 4.366 MiB)

Writing hyb.json ...
Writing hyb.json ...



 CTQMC run ... imp[1]
 Preparing the input file of EDFMTF : actqmc.cix ...
Br: kindx= [(7, 3), (9, 1), (5, -5), (7, -1), (6, 2), (3, -3), (5, 1), (1, -1), (4, -2), (4, 0), (3, 3), (6, -4), (4, 4), (8, -2), (7, -3), (2, 2), (10, 0), (5, 3), (1, 1), (5, -1), (6, 4), (0, 0), (8, 2), (7, 1), (2, -2), (6, 0), (9, -1), (8, 0), (4, 2), (5, -3), (5, 5), (4, -4), (3, 1), (3, -1), (6, -2), (2, 0)]
Br: Stage1: Computing F^ in direct base
Br: Stage2: Compressing F^+ according to its block diagonal form
Br: Stage3: Renumbers states -- creates superstates for ctqmc
Br: Stage4: F^dagger matrices between superstates evaluated
Have HB2
Number of operators needed 1  0
off_diagonal=0
Reading data with 1848 entries

       ============================
          DMFT_loop [39] 
       ============================

Reading SelfE_w ... imp[1]

  7.495118 seconds (36.71 k allocations: 9.831 MiB)
===== Calculating local green function ... =====
  3.136143 seconds (134.02 k allocations: 29.253 MiB)

===== Calculating weiss field from G_loc_iWn ... =====
  0.100238 seconds (114.35 k allocations: 5.992 MiB)

===== Calculating hybrid function from weiss field ... =====
  0.003460 seconds (49.68 k allocations: 4.366 MiB)

Writing hyb.json ...
Writing hyb.json ...



 CTQMC run ... imp[1]
 Preparing the input file of EDFMTF : actqmc.cix ...
Br: kindx= [(7, 3), (9, 1), (5, -5), (7, -1), (6, 2), (3, -3), (5, 1), (1, -1), (4, -2), (4, 0), (3, 3), (6, -4), (4, 4), (8, -2), (7, -3), (2, 2), (10, 0), (5, 3), (1, 1), (5, -1), (6, 4), (0, 0), (8, 2), (7, 1), (2, -2), (6, 0), (9, -1), (8, 0), (4, 2), (5, -3), (5, 5), (4, -4), (3, 1), (3, -1), (6, -2), (2, 0)]
Br: Stage1: Computing F^ in direct base
Br: Stage2: Compressing F^+ according to its block diagonal form
Br: Stage3: Renumbers states -- creates superstates for ctqmc
Br: Stage4: F^dagger matrices between superstates evaluated
Have HB2
Number of operators needed 1  0
off_diagonal=0
Reading data with 1848 entries

       ============================
          DMFT_loop [40] 
       ============================

Reading SelfE_w ... imp[1]

  7.477394 seconds (36.72 k allocations: 9.829 MiB)
===== Calculating local green function ... =====
  3.117249 seconds (133.93 k allocations: 29.250 MiB)

===== Calculating weiss field from G_loc_iWn ... =====
  0.099711 seconds (114.35 k allocations: 5.996 MiB)

===== Calculating hybrid function from weiss field ... =====
  0.003367 seconds (49.68 k allocations: 4.366 MiB)

Writing hyb.json ...
Writing hyb.json ...



 CTQMC run ... imp[1]
 Preparing the input file of EDFMTF : actqmc.cix ...
Br: kindx= [(7, 3), (9, 1), (5, -5), (7, -1), (6, 2), (3, -3), (5, 1), (1, -1), (4, -2), (4, 0), (3, 3), (6, -4), (4, 4), (8, -2), (7, -3), (2, 2), (10, 0), (5, 3), (1, 1), (5, -1), (6, 4), (0, 0), (8, 2), (7, 1), (2, -2), (6, 0), (9, -1), (8, 0), (4, 2), (5, -3), (5, 5), (4, -4), (3, 1), (3, -1), (6, -2), (2, 0)]
Br: Stage1: Computing F^ in direct base
Br: Stage2: Compressing F^+ according to its block diagonal form
Br: Stage3: Renumbers states -- creates superstates for ctqmc
Br: Stage4: F^dagger matrices between superstates evaluated
Have HB2
Number of operators needed 1  0
off_diagonal=0
Reading data with 1848 entries

       ============================
          DMFT_loop [41] 
       ============================

Reading SelfE_w ... imp[1]

  7.455268 seconds (36.72 k allocations: 9.828 MiB)
===== Calculating local green function ... =====
  3.137553 seconds (133.89 k allocations: 29.252 MiB)

===== Calculating weiss field from G_loc_iWn ... =====
  0.098316 seconds (114.35 k allocations: 5.993 MiB)

===== Calculating hybrid function from weiss field ... =====
  0.003396 seconds (49.68 k allocations: 4.366 MiB)

Writing hyb.json ...
Writing hyb.json ...



 CTQMC run ... imp[1]
 Preparing the input file of EDFMTF : actqmc.cix ...
Br: kindx= [(7, 3), (9, 1), (5, -5), (7, -1), (6, 2), (3, -3), (5, 1), (1, -1), (4, -2), (4, 0), (3, 3), (6, -4), (4, 4), (8, -2), (7, -3), (2, 2), (10, 0), (5, 3), (1, 1), (5, -1), (6, 4), (0, 0), (8, 2), (7, 1), (2, -2), (6, 0), (9, -1), (8, 0), (4, 2), (5, -3), (5, 5), (4, -4), (3, 1), (3, -1), (6, -2), (2, 0)]
Br: Stage1: Computing F^ in direct base
Br: Stage2: Compressing F^+ according to its block diagonal form
Br: Stage3: Renumbers states -- creates superstates for ctqmc
Br: Stage4: F^dagger matrices between superstates evaluated
Have HB2
Number of operators needed 1  0
off_diagonal=0
Reading data with 1848 entries

       ============================
          DMFT_loop [42] 
       ============================

Reading SelfE_w ... imp[1]

  7.485797 seconds (36.72 k allocations: 9.831 MiB)
===== Calculating local green function ... =====
  3.136857 seconds (133.93 k allocations: 29.250 MiB)

===== Calculating weiss field from G_loc_iWn ... =====
  0.100014 seconds (114.35 k allocations: 5.997 MiB)

===== Calculating hybrid function from weiss field ... =====
  0.003447 seconds (49.68 k allocations: 4.366 MiB)

Writing hyb.json ...
Writing hyb.json ...



 CTQMC run ... imp[1]
 Preparing the input file of EDFMTF : actqmc.cix ...
Br: kindx= [(7, 3), (9, 1), (5, -5), (7, -1), (6, 2), (3, -3), (5, 1), (1, -1), (4, -2), (4, 0), (3, 3), (6, -4), (4, 4), (8, -2), (7, -3), (2, 2), (10, 0), (5, 3), (1, 1), (5, -1), (6, 4), (0, 0), (8, 2), (7, 1), (2, -2), (6, 0), (9, -1), (8, 0), (4, 2), (5, -3), (5, 5), (4, -4), (3, 1), (3, -1), (6, -2), (2, 0)]
Br: Stage1: Computing F^ in direct base
Br: Stage2: Compressing F^+ according to its block diagonal form
Br: Stage3: Renumbers states -- creates superstates for ctqmc
Br: Stage4: F^dagger matrices between superstates evaluated
Have HB2
Number of operators needed 1  0
off_diagonal=0
Reading data with 1848 entries

       ============================
          DMFT_loop [43] 
       ============================

Reading SelfE_w ... imp[1]

  7.479448 seconds (36.72 k allocations: 9.828 MiB)
===== Calculating local green function ... =====
  3.144061 seconds (134.00 k allocations: 29.253 MiB)

===== Calculating weiss field from G_loc_iWn ... =====
  0.100824 seconds (114.36 k allocations: 5.994 MiB)

===== Calculating hybrid function from weiss field ... =====
  0.003460 seconds (49.68 k allocations: 4.366 MiB)

Writing hyb.json ...
Writing hyb.json ...



 CTQMC run ... imp[1]
 Preparing the input file of EDFMTF : actqmc.cix ...
Br: kindx= [(7, 3), (9, 1), (5, -5), (7, -1), (6, 2), (3, -3), (5, 1), (1, -1), (4, -2), (4, 0), (3, 3), (6, -4), (4, 4), (8, -2), (7, -3), (2, 2), (10, 0), (5, 3), (1, 1), (5, -1), (6, 4), (0, 0), (8, 2), (7, 1), (2, -2), (6, 0), (9, -1), (8, 0), (4, 2), (5, -3), (5, 5), (4, -4), (3, 1), (3, -1), (6, -2), (2, 0)]
Br: Stage1: Computing F^ in direct base
Br: Stage2: Compressing F^+ according to its block diagonal form
Br: Stage3: Renumbers states -- creates superstates for ctqmc
Br: Stage4: F^dagger matrices between superstates evaluated
Have HB2
Number of operators needed 1  0
off_diagonal=0
Reading data with 1848 entries

       ============================
          DMFT_loop [44] 
       ============================

Reading SelfE_w ... imp[1]

  7.473892 seconds (36.70 k allocations: 9.830 MiB)
===== Calculating local green function ... =====
  3.129741 seconds (133.93 k allocations: 29.250 MiB)

===== Calculating weiss field from G_loc_iWn ... =====
  0.104267 seconds (114.36 k allocations: 5.994 MiB)

===== Calculating hybrid function from weiss field ... =====
  0.003358 seconds (49.68 k allocations: 4.366 MiB)

Writing hyb.json ...
Writing hyb.json ...



 CTQMC run ... imp[1]
 Preparing the input file of EDFMTF : actqmc.cix ...
Br: kindx= [(7, 3), (9, 1), (5, -5), (7, -1), (6, 2), (3, -3), (5, 1), (1, -1), (4, -2), (4, 0), (3, 3), (6, -4), (4, 4), (8, -2), (7, -3), (2, 2), (10, 0), (5, 3), (1, 1), (5, -1), (6, 4), (0, 0), (8, 2), (7, 1), (2, -2), (6, 0), (9, -1), (8, 0), (4, 2), (5, -3), (5, 5), (4, -4), (3, 1), (3, -1), (6, -2), (2, 0)]
Br: Stage1: Computing F^ in direct base
Br: Stage2: Compressing F^+ according to its block diagonal form
Br: Stage3: Renumbers states -- creates superstates for ctqmc
Br: Stage4: F^dagger matrices between superstates evaluated
Have HB2
Number of operators needed 1  0
off_diagonal=0
Reading data with 1848 entries

       ============================
          DMFT_loop [45] 
       ============================

Reading SelfE_w ... imp[1]

  7.478946 seconds (36.72 k allocations: 9.828 MiB)
===== Calculating local green function ... =====
  3.133394 seconds (133.95 k allocations: 29.251 MiB)

===== Calculating weiss field from G_loc_iWn ... =====
  0.101895 seconds (114.35 k allocations: 5.993 MiB)

===== Calculating hybrid function from weiss field ... =====
  0.003491 seconds (49.68 k allocations: 4.366 MiB)

Writing hyb.json ...
Writing hyb.json ...



 CTQMC run ... imp[1]
 Preparing the input file of EDFMTF : actqmc.cix ...
Br: kindx= [(7, 3), (9, 1), (5, -5), (7, -1), (6, 2), (3, -3), (5, 1), (1, -1), (4, -2), (4, 0), (3, 3), (6, -4), (4, 4), (8, -2), (7, -3), (2, 2), (10, 0), (5, 3), (1, 1), (5, -1), (6, 4), (0, 0), (8, 2), (7, 1), (2, -2), (6, 0), (9, -1), (8, 0), (4, 2), (5, -3), (5, 5), (4, -4), (3, 1), (3, -1), (6, -2), (2, 0)]
Br: Stage1: Computing F^ in direct base
Br: Stage2: Compressing F^+ according to its block diagonal form
Br: Stage3: Renumbers states -- creates superstates for ctqmc
Br: Stage4: F^dagger matrices between superstates evaluated
Have HB2
Number of operators needed 1  0
off_diagonal=0
Reading data with 1848 entries

       ============================
          DMFT_loop [46] 
       ============================

Reading SelfE_w ... imp[1]

  7.530485 seconds (36.71 k allocations: 9.830 MiB)
===== Calculating local green function ... =====
  3.112279 seconds (133.92 k allocations: 29.250 MiB)

===== Calculating weiss field from G_loc_iWn ... =====
  0.101882 seconds (114.35 k allocations: 5.991 MiB)

===== Calculating hybrid function from weiss field ... =====
  0.003446 seconds (49.68 k allocations: 4.366 MiB)

Writing hyb.json ...
Writing hyb.json ...



 CTQMC run ... imp[1]
 Preparing the input file of EDFMTF : actqmc.cix ...
Br: kindx= [(7, 3), (9, 1), (5, -5), (7, -1), (6, 2), (3, -3), (5, 1), (1, -1), (4, -2), (4, 0), (3, 3), (6, -4), (4, 4), (8, -2), (7, -3), (2, 2), (10, 0), (5, 3), (1, 1), (5, -1), (6, 4), (0, 0), (8, 2), (7, 1), (2, -2), (6, 0), (9, -1), (8, 0), (4, 2), (5, -3), (5, 5), (4, -4), (3, 1), (3, -1), (6, -2), (2, 0)]
Br: Stage1: Computing F^ in direct base
Br: Stage2: Compressing F^+ according to its block diagonal form
Br: Stage3: Renumbers states -- creates superstates for ctqmc
Br: Stage4: F^dagger matrices between superstates evaluated
Have HB2
Number of operators needed 1  0
off_diagonal=0
Reading data with 1848 entries

       ============================
          DMFT_loop [47] 
       ============================

Reading SelfE_w ... imp[1]

  7.489566 seconds (36.72 k allocations: 9.829 MiB)
===== Calculating local green function ... =====
  3.151767 seconds (133.98 k allocations: 29.252 MiB)

===== Calculating weiss field from G_loc_iWn ... =====
  0.099320 seconds (114.35 k allocations: 5.996 MiB)

===== Calculating hybrid function from weiss field ... =====
  0.003370 seconds (49.68 k allocations: 4.366 MiB)

Writing hyb.json ...
Writing hyb.json ...



 CTQMC run ... imp[1]
 Preparing the input file of EDFMTF : actqmc.cix ...
Br: kindx= [(7, 3), (9, 1), (5, -5), (7, -1), (6, 2), (3, -3), (5, 1), (1, -1), (4, -2), (4, 0), (3, 3), (6, -4), (4, 4), (8, -2), (7, -3), (2, 2), (10, 0), (5, 3), (1, 1), (5, -1), (6, 4), (0, 0), (8, 2), (7, 1), (2, -2), (6, 0), (9, -1), (8, 0), (4, 2), (5, -3), (5, 5), (4, -4), (3, 1), (3, -1), (6, -2), (2, 0)]
Br: Stage1: Computing F^ in direct base
Br: Stage2: Compressing F^+ according to its block diagonal form
Br: Stage3: Renumbers states -- creates superstates for ctqmc
Br: Stage4: F^dagger matrices between superstates evaluated
Have HB2
Number of operators needed 1  0
off_diagonal=0
Reading data with 1848 entries

       ============================
          DMFT_loop [48] 
       ============================

Reading SelfE_w ... imp[1]

  7.510637 seconds (36.72 k allocations: 9.827 MiB)
===== Calculating local green function ... =====
  3.161525 seconds (134.01 k allocations: 29.256 MiB)

===== Calculating weiss field from G_loc_iWn ... =====
  0.099733 seconds (114.34 k allocations: 5.993 MiB)

===== Calculating hybrid function from weiss field ... =====
  0.003587 seconds (49.68 k allocations: 4.366 MiB)

Writing hyb.json ...
Writing hyb.json ...



 CTQMC run ... imp[1]
 Preparing the input file of EDFMTF : actqmc.cix ...
Br: kindx= [(7, 3), (9, 1), (5, -5), (7, -1), (6, 2), (3, -3), (5, 1), (1, -1), (4, -2), (4, 0), (3, 3), (6, -4), (4, 4), (8, -2), (7, -3), (2, 2), (10, 0), (5, 3), (1, 1), (5, -1), (6, 4), (0, 0), (8, 2), (7, 1), (2, -2), (6, 0), (9, -1), (8, 0), (4, 2), (5, -3), (5, 5), (4, -4), (3, 1), (3, -1), (6, -2), (2, 0)]
Br: Stage1: Computing F^ in direct base
Br: Stage2: Compressing F^+ according to its block diagonal form
Br: Stage3: Renumbers states -- creates superstates for ctqmc
Br: Stage4: F^dagger matrices between superstates evaluated
Have HB2
Number of operators needed 1  0
off_diagonal=0
Reading data with 1848 entries

       ============================
          DMFT_loop [49] 
       ============================

Reading SelfE_w ... imp[1]

  7.551471 seconds (36.72 k allocations: 9.829 MiB)
===== Calculating local green function ... =====
  3.151196 seconds (133.94 k allocations: 29.251 MiB)

===== Calculating weiss field from G_loc_iWn ... =====
  0.099484 seconds (114.35 k allocations: 5.996 MiB)

===== Calculating hybrid function from weiss field ... =====
  0.003691 seconds (49.68 k allocations: 4.366 MiB)

Writing hyb.json ...
Writing hyb.json ...



 CTQMC run ... imp[1]
 Preparing the input file of EDFMTF : actqmc.cix ...
Br: kindx= [(7, 3), (9, 1), (5, -5), (7, -1), (6, 2), (3, -3), (5, 1), (1, -1), (4, -2), (4, 0), (3, 3), (6, -4), (4, 4), (8, -2), (7, -3), (2, 2), (10, 0), (5, 3), (1, 1), (5, -1), (6, 4), (0, 0), (8, 2), (7, 1), (2, -2), (6, 0), (9, -1), (8, 0), (4, 2), (5, -3), (5, 5), (4, -4), (3, 1), (3, -1), (6, -2), (2, 0)]
Br: Stage1: Computing F^ in direct base
Br: Stage2: Compressing F^+ according to its block diagonal form
Br: Stage3: Renumbers states -- creates superstates for ctqmc
Br: Stage4: F^dagger matrices between superstates evaluated
Have HB2
Number of operators needed 1  0
off_diagonal=0
Reading data with 1848 entries

       ============================
          DMFT_loop [50] 
       ============================

Reading SelfE_w ... imp[1]

  7.492628 seconds (36.72 k allocations: 9.828 MiB)
===== Calculating local green function ... =====
  3.146811 seconds (133.97 k allocations: 29.255 MiB)

===== Calculating weiss field from G_loc_iWn ... =====
  0.101065 seconds (114.35 k allocations: 5.993 MiB)

===== Calculating hybrid function from weiss field ... =====
  0.004131 seconds (49.68 k allocations: 4.366 MiB)

Writing hyb.json ...
Writing hyb.json ...



 CTQMC run ... imp[1]
 Preparing the input file of EDFMTF : actqmc.cix ...
Br: kindx= [(7, 3), (9, 1), (5, -5), (7, -1), (6, 2), (3, -3), (5, 1), (1, -1), (4, -2), (4, 0), (3, 3), (6, -4), (4, 4), (8, -2), (7, -3), (2, 2), (10, 0), (5, 3), (1, 1), (5, -1), (6, 4), (0, 0), (8, 2), (7, 1), (2, -2), (6, 0), (9, -1), (8, 0), (4, 2), (5, -3), (5, 5), (4, -4), (3, 1), (3, -1), (6, -2), (2, 0)]
Br: Stage1: Computing F^ in direct base
Br: Stage2: Compressing F^+ according to its block diagonal form
Br: Stage3: Renumbers states -- creates superstates for ctqmc
Br: Stage4: F^dagger matrices between superstates evaluated
Have HB2
Number of operators needed 1  0
off_diagonal=0
Reading data with 1848 entries
